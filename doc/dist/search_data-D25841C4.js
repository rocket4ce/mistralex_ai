searchData={"items":[{"type":"module","title":"MistralClient","doc":"Elixir client for the Mistral AI API.\n\nThis module provides a comprehensive interface to the Mistral AI API with complete\nfeature parity to the Python SDK. It supports all major API endpoints including\nchat completions, embeddings, model management, file operations, and advanced\nfeatures like streaming responses and structured outputs.","ref":"MistralClient.html"},{"type":"module","title":"Configuration - MistralClient","doc":"Configure your API key and other settings:\n\n    config :mistralex_ai,\n      api_key: \"your-api-key\",\n      base_url: \"https://api.mistral.ai\",\n      timeout: 30_000\n\nOr set environment variables:\n\n    export MISTRAL_API_KEY=\"your-api-key\"","ref":"MistralClient.html#module-configuration"},{"type":"module","title":"Basic Usage - MistralClient","doc":"# Chat completion\n    {:ok, response} = MistralClient.chat([\n      %{role: \"user\", content: \"Hello, how are you?\"}\n    ])\n\n    # Generate embeddings\n    {:ok, embeddings} = MistralClient.embeddings(\"Hello world\")\n\n    # List available models\n    {:ok, models} = MistralClient.models()","ref":"MistralClient.html#module-basic-usage"},{"type":"module","title":"Streaming - MistralClient","doc":"# Stream chat responses\n    MistralClient.chat_stream([\n      %{role: \"user\", content: \"Tell me a story\"}\n    ], fn chunk ->\n      IO.write(chunk.choices |> hd() |> get_in([\"delta\", \"content\"]) || \"\")\n    end)","ref":"MistralClient.html#module-streaming"},{"type":"module","title":"Error Handling - MistralClient","doc":"All functions return `{:ok, result}` on success or `{:error, reason}` on failure.\nThe client handles retries, rate limiting, and network errors automatically.","ref":"MistralClient.html#module-error-handling"},{"type":"function","title":"MistralClient.append_to_conversation/2","doc":"Append new messages to an existing conversation.","ref":"MistralClient.html#append_to_conversation/2"},{"type":"function","title":"Examples - MistralClient.append_to_conversation/2","doc":"{:ok, response} = MistralClient.append_to_conversation(conversation_id, %{\n      inputs: \"What's the weather like today?\"\n    })","ref":"MistralClient.html#append_to_conversation/2-examples"},{"type":"function","title":"MistralClient.archive_fine_tuned_model/1","doc":"Archive a fine-tuned model.","ref":"MistralClient.html#archive_fine_tuned_model/1"},{"type":"type","title":"MistralClient.batch_options/0","doc":"","ref":"MistralClient.html#t:batch_options/0"},{"type":"function","title":"MistralClient.beta_available?/0","doc":"Check if Beta APIs are available for the current API key.","ref":"MistralClient.html#beta_available?/0"},{"type":"function","title":"Examples - MistralClient.beta_available?/0","doc":"if MistralClient.beta_available?() do\n      IO.puts(\"Beta features are available!\")\n    end","ref":"MistralClient.html#beta_available?/0-examples"},{"type":"function","title":"MistralClient.beta_status/0","doc":"Get Beta API status and available features.","ref":"MistralClient.html#beta_status/0"},{"type":"function","title":"Examples - MistralClient.beta_status/0","doc":"{:ok, status} = MistralClient.beta_status()\n    IO.inspect(status.features)","ref":"MistralClient.html#beta_status/0-examples"},{"type":"function","title":"MistralClient.cancel_batch_job/1","doc":"Cancel a running batch job.","ref":"MistralClient.html#cancel_batch_job/1"},{"type":"function","title":"Parameters - MistralClient.cancel_batch_job/1","doc":"* `job_id` - The batch job ID to cancel","ref":"MistralClient.html#cancel_batch_job/1-parameters"},{"type":"function","title":"Examples - MistralClient.cancel_batch_job/1","doc":"{:ok, job} = MistralClient.cancel_batch_job(\"batch_abc123\")\n    # job.status will be :cancellation_requested or :cancelled","ref":"MistralClient.html#cancel_batch_job/1-examples"},{"type":"function","title":"MistralClient.cancel_fine_tuning_job/1","doc":"Cancel a fine-tuning job.","ref":"MistralClient.html#cancel_fine_tuning_job/1"},{"type":"function","title":"MistralClient.cancel_job/1","doc":"Cancel a fine-tuning job.","ref":"MistralClient.html#cancel_job/1"},{"type":"function","title":"Examples - MistralClient.cancel_job/1","doc":"{:ok, job} = MistralClient.cancel_job(\"job-123\")","ref":"MistralClient.html#cancel_job/1-examples"},{"type":"function","title":"MistralClient.chat/2","doc":"Create a chat completion.","ref":"MistralClient.html#chat/2"},{"type":"function","title":"Parameters - MistralClient.chat/2","doc":"* `messages` - List of message maps with role and content\n  * `options` - Optional parameters (model, temperature, etc.)","ref":"MistralClient.html#chat/2-parameters"},{"type":"function","title":"Examples - MistralClient.chat/2","doc":"{:ok, response} = MistralClient.chat([\n      %{role: \"user\", content: \"Hello!\"}\n    ])\n\n    {:ok, response} = MistralClient.chat(\n      [%{role: \"user\", content: \"Hello!\"}],\n      %{model: \"mistral-large-latest\", temperature: 0.7}\n    )","ref":"MistralClient.html#chat/2-examples"},{"type":"type","title":"MistralClient.chat_options/0","doc":"","ref":"MistralClient.html#t:chat_options/0"},{"type":"function","title":"MistralClient.chat_stream/3","doc":"Create a streaming chat completion.","ref":"MistralClient.html#chat_stream/3"},{"type":"function","title":"Parameters - MistralClient.chat_stream/3","doc":"* `messages` - List of message maps with role and content\n  * `callback` - Function to handle each chunk\n  * `options` - Optional parameters","ref":"MistralClient.html#chat_stream/3-parameters"},{"type":"function","title":"Examples - MistralClient.chat_stream/3","doc":"MistralClient.chat_stream([\n      %{role: \"user\", content: \"Tell me a story\"}\n    ], fn chunk ->\n      content = get_in(chunk, [\"choices\", Access.at(0), \"delta\", \"content\"])\n      if content, do: IO.write(content)\n    end)","ref":"MistralClient.html#chat_stream/3-examples"},{"type":"function","title":"MistralClient.classify/2","doc":"Classify text into categories.","ref":"MistralClient.html#classify/2"},{"type":"function","title":"Parameters - MistralClient.classify/2","doc":"* `model` - Model to use for classification\n  * `inputs` - Text to classify (string or list of strings)","ref":"MistralClient.html#classify/2-parameters"},{"type":"function","title":"Examples - MistralClient.classify/2","doc":"# Classify a single text\n    {:ok, response} = MistralClient.classify(\n      \"mistral-classifier-latest\",\n      \"This is some text to classify\"\n    )\n\n    # Classify multiple texts\n    {:ok, response} = MistralClient.classify(\n      \"mistral-classifier-latest\",\n      [\"Text 1\", \"Text 2\", \"Text 3\"]\n    )","ref":"MistralClient.html#classify/2-examples"},{"type":"function","title":"MistralClient.classify_chat/2","doc":"Classify chat conversations into categories.","ref":"MistralClient.html#classify_chat/2"},{"type":"function","title":"Parameters - MistralClient.classify_chat/2","doc":"* `model` - Model to use for classification\n  * `inputs` - Chat conversations to classify","ref":"MistralClient.html#classify_chat/2-parameters"},{"type":"function","title":"Examples - MistralClient.classify_chat/2","doc":"{:ok, response} = MistralClient.classify_chat(\n      \"mistral-classifier-latest\",\n      [%{messages: [%{role: \"user\", content: \"Hello\"}]}]\n    )","ref":"MistralClient.html#classify_chat/2-examples"},{"type":"function","title":"MistralClient.config/0","doc":"Get the current configuration.","ref":"MistralClient.html#config/0"},{"type":"function","title":"Examples - MistralClient.config/0","doc":"config = MistralClient.config()","ref":"MistralClient.html#config/0-examples"},{"type":"function","title":"MistralClient.create_agent/1","doc":"Create a new AI agent with specific instructions and tools.","ref":"MistralClient.html#create_agent/1"},{"type":"function","title":"Parameters - MistralClient.create_agent/1","doc":"* `request` - Agent creation request with:\n    - `:name` - Agent name (required)\n    - `:model` - Model to use (required)\n    - `:instructions` - Instructions for the agent (optional)\n    - `:tools` - List of tools available to the agent (optional)\n    - `:description` - Agent description (optional)","ref":"MistralClient.html#create_agent/1-parameters"},{"type":"function","title":"Examples - MistralClient.create_agent/1","doc":"{:ok, agent} = MistralClient.create_agent(%{\n      name: \"Customer Support Agent\",\n      model: \"mistral-large-latest\",\n      instructions: \"You are a helpful customer support agent.\",\n      tools: [\n        %{\n          type: \"function\",\n          function: %{\n            name: \"get_order_status\",\n            description: \"Get the status of a customer order\"\n          }\n        }\n      ]\n    })","ref":"MistralClient.html#create_agent/1-examples"},{"type":"function","title":"MistralClient.create_batch_job/1","doc":"Create a new batch job for processing multiple requests.","ref":"MistralClient.html#create_batch_job/1"},{"type":"function","title":"Parameters - MistralClient.create_batch_job/1","doc":"* `request` - Batch job request with:\n    - `:input_files` - List of file IDs to process (required)\n    - `:endpoint` - API endpoint to use (required)\n    - `:model` - Model to use for processing (required)\n    - `:metadata` - Optional metadata map\n    - `:timeout_hours` - Timeout in hours (default: 24)","ref":"MistralClient.html#create_batch_job/1-parameters"},{"type":"function","title":"Examples - MistralClient.create_batch_job/1","doc":"{:ok, job} = MistralClient.create_batch_job(%{\n      input_files: [\"file-abc123\", \"file-def456\"],\n      endpoint: \"/v1/chat/completions\",\n      model: \"mistral-large-latest\",\n      metadata: %{\"project\" => \"customer-support\"},\n      timeout_hours: 48\n    })","ref":"MistralClient.html#create_batch_job/1-examples"},{"type":"function","title":"MistralClient.create_fine_tuning_job/1","doc":"Create a fine-tuning job.","ref":"MistralClient.html#create_fine_tuning_job/1"},{"type":"function","title":"MistralClient.create_job/1","doc":"Create a fine-tuning job.","ref":"MistralClient.html#create_job/1"},{"type":"function","title":"Examples - MistralClient.create_job/1","doc":"request = %MistralClient.Models.FineTuningJobRequest{\n      model: \"open-mistral-7b\",\n      hyperparameters: %MistralClient.Models.CompletionTrainingParameters{\n        learning_rate: 0.0001\n      }\n    }\n    {:ok, job} = MistralClient.create_job(request)","ref":"MistralClient.html#create_job/1-examples"},{"type":"function","title":"MistralClient.delete_file/1","doc":"Delete a file.","ref":"MistralClient.html#delete_file/1"},{"type":"function","title":"Parameters - MistralClient.delete_file/1","doc":"* `file_id` - The ID of the file to delete","ref":"MistralClient.html#delete_file/1-parameters"},{"type":"function","title":"Examples - MistralClient.delete_file/1","doc":"{:ok, _} = MistralClient.delete_file(\"file-123\")","ref":"MistralClient.html#delete_file/1-examples"},{"type":"type","title":"MistralClient.embedding_options/0","doc":"","ref":"MistralClient.html#t:embedding_options/0"},{"type":"function","title":"MistralClient.embeddings/2","doc":"Generate embeddings for the given input.","ref":"MistralClient.html#embeddings/2"},{"type":"function","title":"Parameters - MistralClient.embeddings/2","doc":"* `input` - Text string or list of strings to embed\n  * `options` - Optional parameters (model, dimensions, etc.)","ref":"MistralClient.html#embeddings/2-parameters"},{"type":"function","title":"Examples - MistralClient.embeddings/2","doc":"{:ok, embeddings} = MistralClient.embeddings(\"Hello world\")\n\n    {:ok, embeddings} = MistralClient.embeddings(\n      [\"Hello\", \"World\"],\n      %{model: \"mistral-embed\", dimensions: 1024}\n    )","ref":"MistralClient.html#embeddings/2-examples"},{"type":"function","title":"MistralClient.files/0","doc":"List uploaded files.","ref":"MistralClient.html#files/0"},{"type":"function","title":"Examples - MistralClient.files/0","doc":"{:ok, files} = MistralClient.files()","ref":"MistralClient.html#files/0-examples"},{"type":"function","title":"MistralClient.fim_complete/3","doc":"Perform FIM (Fill-in-the-Middle) completion for code.","ref":"MistralClient.html#fim_complete/3"},{"type":"function","title":"Parameters - MistralClient.fim_complete/3","doc":"* `model` - Codestral model ID (\"codestral-2405\" or \"codestral-latest\")\n  * `prompt` - The code prefix to complete\n  * `options` - Optional parameters (suffix, temperature, etc.)","ref":"MistralClient.html#fim_complete/3-parameters"},{"type":"function","title":"Examples - MistralClient.fim_complete/3","doc":"{:ok, completion} = MistralClient.fim_complete(\n      \"codestral-2405\",\n      \"def fibonacci(n):\",\n      %{suffix: \"return result\"}\n    )","ref":"MistralClient.html#fim_complete/3-examples"},{"type":"type","title":"MistralClient.fim_options/0","doc":"","ref":"MistralClient.html#t:fim_options/0"},{"type":"function","title":"MistralClient.fim_stream/4","doc":"Stream FIM completion with real-time results.","ref":"MistralClient.html#fim_stream/4"},{"type":"function","title":"Parameters - MistralClient.fim_stream/4","doc":"* `model` - Codestral model ID\n  * `prompt` - The code prefix to complete\n  * `callback` - Function to handle each chunk\n  * `options` - Optional parameters","ref":"MistralClient.html#fim_stream/4-parameters"},{"type":"function","title":"Examples - MistralClient.fim_stream/4","doc":"MistralClient.fim_stream(\n      \"codestral-2405\",\n      \"def fibonacci(n):\",\n      fn chunk ->\n        if chunk.content, do: IO.write(chunk.content)\n      end,\n      %{suffix: \"return result\"}\n    )","ref":"MistralClient.html#fim_stream/4-examples"},{"type":"type","title":"MistralClient.fine_tuning_options/0","doc":"","ref":"MistralClient.html#t:fine_tuning_options/0"},{"type":"function","title":"MistralClient.get_agent/1","doc":"Retrieve a specific agent by ID.","ref":"MistralClient.html#get_agent/1"},{"type":"function","title":"Examples - MistralClient.get_agent/1","doc":"{:ok, agent} = MistralClient.get_agent(\"agent_123\")","ref":"MistralClient.html#get_agent/1-examples"},{"type":"function","title":"MistralClient.get_batch_job/1","doc":"Get details of a specific batch job by ID.","ref":"MistralClient.html#get_batch_job/1"},{"type":"function","title":"Parameters - MistralClient.get_batch_job/1","doc":"* `job_id` - The batch job ID","ref":"MistralClient.html#get_batch_job/1-parameters"},{"type":"function","title":"Examples - MistralClient.get_batch_job/1","doc":"{:ok, job} = MistralClient.get_batch_job(\"batch_abc123\")\n    IO.puts(\"Status: #{job.status}\")\n    IO.puts(\"Progress: #{job.completed_requests}/#{job.total_requests}\")","ref":"MistralClient.html#get_batch_job/1-examples"},{"type":"function","title":"MistralClient.get_conversation_history/1","doc":"Get the history of a conversation.","ref":"MistralClient.html#get_conversation_history/1"},{"type":"function","title":"Examples - MistralClient.get_conversation_history/1","doc":"{:ok, history} = MistralClient.get_conversation_history(conversation_id)","ref":"MistralClient.html#get_conversation_history/1-examples"},{"type":"function","title":"MistralClient.get_fine_tuning_job/1","doc":"Get details of a specific fine-tuning job.","ref":"MistralClient.html#get_fine_tuning_job/1"},{"type":"function","title":"MistralClient.get_job/1","doc":"Get details of a specific fine-tuning job.","ref":"MistralClient.html#get_job/1"},{"type":"function","title":"Examples - MistralClient.get_job/1","doc":"{:ok, job} = MistralClient.get_job(\"job-123\")","ref":"MistralClient.html#get_job/1-examples"},{"type":"function","title":"MistralClient.list_agents/1","doc":"List all agents with optional pagination.","ref":"MistralClient.html#list_agents/1"},{"type":"function","title":"Examples - MistralClient.list_agents/1","doc":"{:ok, agents} = MistralClient.list_agents()\n    {:ok, agents} = MistralClient.list_agents(%{page: 1, page_size: 10})","ref":"MistralClient.html#list_agents/1-examples"},{"type":"function","title":"MistralClient.list_batch_jobs/1","doc":"List batch jobs with optional filtering and pagination.","ref":"MistralClient.html#list_batch_jobs/1"},{"type":"function","title":"Parameters - MistralClient.list_batch_jobs/1","doc":"* `options` - Optional filtering parameters:\n    - `:page` - Page number (default: 0)\n    - `:page_size` - Number of jobs per page (default: 100)\n    - `:model` - Filter by model name\n    - `:metadata` - Filter by metadata\n    - `:created_after` - Filter by creation date (DateTime)\n    - `:created_by_me` - Filter by ownership (boolean, default: false)\n    - `:status` - Filter by status list (e.g., [:running, :queued])","ref":"MistralClient.html#list_batch_jobs/1-parameters"},{"type":"function","title":"Examples - MistralClient.list_batch_jobs/1","doc":"# List all batch jobs\n    {:ok, jobs} = MistralClient.list_batch_jobs()\n\n    # List with filtering\n    {:ok, jobs} = MistralClient.list_batch_jobs(%{\n      page: 0,\n      page_size: 50,\n      status: [:running, :queued],\n      model: \"mistral-large-latest\"\n    })","ref":"MistralClient.html#list_batch_jobs/1-examples"},{"type":"function","title":"MistralClient.list_conversations/1","doc":"List conversations with optional pagination.","ref":"MistralClient.html#list_conversations/1"},{"type":"function","title":"Examples - MistralClient.list_conversations/1","doc":"{:ok, conversations} = MistralClient.list_conversations()","ref":"MistralClient.html#list_conversations/1-examples"},{"type":"function","title":"MistralClient.list_fine_tuning_jobs/1","doc":"List fine-tuning jobs with optional filtering.","ref":"MistralClient.html#list_fine_tuning_jobs/1"},{"type":"function","title":"MistralClient.list_jobs/1","doc":"List fine-tuning jobs with optional filtering.","ref":"MistralClient.html#list_jobs/1"},{"type":"function","title":"Examples - MistralClient.list_jobs/1","doc":"# List all jobs\n    {:ok, jobs} = MistralClient.list_jobs()\n\n    # List with filtering\n    {:ok, jobs} = MistralClient.list_jobs(%{\n      status: :running,\n      model: \"open-mistral-7b\"\n    })","ref":"MistralClient.html#list_jobs/1-examples"},{"type":"type","title":"MistralClient.message/0","doc":"","ref":"MistralClient.html#t:message/0"},{"type":"function","title":"MistralClient.model/1","doc":"Retrieve a specific model.","ref":"MistralClient.html#model/1"},{"type":"function","title":"Parameters - MistralClient.model/1","doc":"* `model_id` - The ID of the model to retrieve","ref":"MistralClient.html#model/1-parameters"},{"type":"function","title":"Examples - MistralClient.model/1","doc":"{:ok, model} = MistralClient.model(\"mistral-large-latest\")","ref":"MistralClient.html#model/1-examples"},{"type":"function","title":"MistralClient.models/0","doc":"List available models.","ref":"MistralClient.html#models/0"},{"type":"function","title":"Examples - MistralClient.models/0","doc":"{:ok, models} = MistralClient.models()","ref":"MistralClient.html#models/0-examples"},{"type":"function","title":"MistralClient.moderate/2","doc":"Moderate text content for safety and policy violations.","ref":"MistralClient.html#moderate/2"},{"type":"function","title":"Parameters - MistralClient.moderate/2","doc":"* `model` - Model to use for moderation (e.g., \"mistral-moderation-latest\")\n  * `inputs` - Text to moderate (string or list of strings)","ref":"MistralClient.html#moderate/2-parameters"},{"type":"function","title":"Examples - MistralClient.moderate/2","doc":"# Moderate a single text\n    {:ok, response} = MistralClient.moderate(\n      \"mistral-moderation-latest\",\n      \"This is some text to moderate\"\n    )\n\n    # Moderate multiple texts\n    {:ok, response} = MistralClient.moderate(\n      \"mistral-moderation-latest\",\n      [\"Text 1\", \"Text 2\", \"Text 3\"]\n    )","ref":"MistralClient.html#moderate/2-examples"},{"type":"function","title":"MistralClient.moderate_chat/2","doc":"Moderate chat conversations for safety and policy violations.","ref":"MistralClient.html#moderate_chat/2"},{"type":"function","title":"Parameters - MistralClient.moderate_chat/2","doc":"* `model` - Model to use for moderation\n  * `inputs` - Chat conversations to moderate (list of message lists)","ref":"MistralClient.html#moderate_chat/2-parameters"},{"type":"function","title":"Examples - MistralClient.moderate_chat/2","doc":"{:ok, response} = MistralClient.moderate_chat(\n      \"mistral-moderation-latest\",\n      [\n        [\n          %{role: \"user\", content: \"Hello\"},\n          %{role: \"assistant\", content: \"Hi there!\"}\n        ]\n      ]\n    )","ref":"MistralClient.html#moderate_chat/2-examples"},{"type":"function","title":"MistralClient.new/1","doc":"Create a new client with custom configuration.","ref":"MistralClient.html#new/1"},{"type":"function","title":"Parameters - MistralClient.new/1","doc":"* `options` - Configuration options","ref":"MistralClient.html#new/1-parameters"},{"type":"function","title":"Examples - MistralClient.new/1","doc":"client = MistralClient.new(api_key: \"custom-key\", timeout: 60_000)","ref":"MistralClient.html#new/1-examples"},{"type":"type","title":"MistralClient.ocr_options/0","doc":"","ref":"MistralClient.html#t:ocr_options/0"},{"type":"function","title":"MistralClient.ocr_process/3","doc":"Process a document or image using OCR (Optical Character Recognition).","ref":"MistralClient.html#ocr_process/3"},{"type":"function","title":"Parameters - MistralClient.ocr_process/3","doc":"* `model` - Model to use for OCR processing (e.g., \"pixtral-12b-2024-12-19\")\n  * `document` - Document or image to process (DocumentURLChunk or ImageURLChunk)\n  * `options` - Optional parameters:\n    - `:id` - Request identifier\n    - `:pages` - List of specific page numbers to process (0-indexed)\n    - `:include_image_base64` - Include base64-encoded images in response\n    - `:image_limit` - Maximum number of images to extract\n    - `:image_min_size` - Minimum size (height and width) for image extraction\n    - `:bbox_annotation_format` - Structured output format for bounding boxes\n    - `:document_annotation_format` - Structured output format for the document","ref":"MistralClient.html#ocr_process/3-parameters"},{"type":"function","title":"Examples - MistralClient.ocr_process/3","doc":"# Process a document URL\n    document = MistralClient.Models.DocumentURLChunk.new(\"https://example.com/doc.pdf\")\n    {:ok, response} = MistralClient.ocr_process(\"pixtral-12b-2024-12-19\", document)\n\n    # Process an image with options\n    image_url = MistralClient.Models.ImageURLChunkImageURL.new(\"data:image/png;base64,...\")\n    image_chunk = MistralClient.Models.ImageURLChunk.new(image_url)\n    {:ok, response} = MistralClient.ocr_process(\n      \"pixtral-12b-2024-12-19\",\n      image_chunk,\n      %{include_image_base64: true, image_limit: 5}\n    )\n\n    # Process specific pages\n    {:ok, response} = MistralClient.ocr_process(\n      \"pixtral-12b-2024-12-19\",\n      document,\n      %{pages: [0, 1, 2]}\n    )","ref":"MistralClient.html#ocr_process/3-examples"},{"type":"function","title":"MistralClient.ocr_process_request/1","doc":"Process a document or image using OCR with a structured request.","ref":"MistralClient.html#ocr_process_request/1"},{"type":"function","title":"Parameters - MistralClient.ocr_process_request/1","doc":"* `request` - OCR request struct with all parameters","ref":"MistralClient.html#ocr_process_request/1-parameters"},{"type":"function","title":"Examples - MistralClient.ocr_process_request/1","doc":"document = MistralClient.Models.DocumentURLChunk.new(\"https://example.com/doc.pdf\")\n    request = MistralClient.Models.OCRRequest.new(\"pixtral-12b-2024-12-19\", document,\n      pages: [0, 1],\n      include_image_base64: true\n    )\n    {:ok, response} = MistralClient.ocr_process_request(request)","ref":"MistralClient.html#ocr_process_request/1-examples"},{"type":"function","title":"MistralClient.start_conversation/1","doc":"Start a new conversation with an agent or model.","ref":"MistralClient.html#start_conversation/1"},{"type":"function","title":"Parameters - MistralClient.start_conversation/1","doc":"* `request` - Conversation start request with:\n    - `:inputs` - Initial message(s) (required)\n    - `:agent_id` - Agent ID to use (optional, mutually exclusive with model)\n    - `:model` - Model to use (optional, mutually exclusive with agent_id)\n    - `:instructions` - Custom instructions (optional)","ref":"MistralClient.html#start_conversation/1-parameters"},{"type":"function","title":"Examples - MistralClient.start_conversation/1","doc":"# Start with an agent\n    {:ok, conversation} = MistralClient.start_conversation(%{\n      agent_id: \"agent_123\",\n      inputs: \"Hello, I need help with my order.\"\n    })\n\n    # Start with a model\n    {:ok, conversation} = MistralClient.start_conversation(%{\n      model: \"mistral-large-latest\",\n      inputs: \"Explain quantum computing\",\n      instructions: \"You are a physics teacher.\"\n    })","ref":"MistralClient.html#start_conversation/1-examples"},{"type":"function","title":"MistralClient.start_conversation_stream/2","doc":"Start a new conversation with streaming responses.","ref":"MistralClient.html#start_conversation_stream/2"},{"type":"function","title":"Examples - MistralClient.start_conversation_stream/2","doc":"MistralClient.start_conversation_stream(%{\n      agent_id: \"agent_123\",\n      inputs: \"Tell me a story\"\n    }, fn chunk ->\n      IO.write(chunk.content || \"\")\n    end)","ref":"MistralClient.html#start_conversation_stream/2-examples"},{"type":"function","title":"MistralClient.start_fine_tuning_job/1","doc":"Start a validated fine-tuning job.","ref":"MistralClient.html#start_fine_tuning_job/1"},{"type":"function","title":"MistralClient.start_job/1","doc":"Start a validated fine-tuning job.","ref":"MistralClient.html#start_job/1"},{"type":"function","title":"Examples - MistralClient.start_job/1","doc":"{:ok, job} = MistralClient.start_job(\"job-123\")","ref":"MistralClient.html#start_job/1-examples"},{"type":"function","title":"MistralClient.unarchive_fine_tuned_model/1","doc":"Unarchive a fine-tuned model.","ref":"MistralClient.html#unarchive_fine_tuned_model/1"},{"type":"function","title":"MistralClient.update_agent/2","doc":"Update an agent's configuration.","ref":"MistralClient.html#update_agent/2"},{"type":"function","title":"Examples - MistralClient.update_agent/2","doc":"{:ok, updated_agent} = MistralClient.update_agent(\"agent_123\", %{\n      instructions: \"Updated instructions for the agent\"\n    })","ref":"MistralClient.html#update_agent/2-examples"},{"type":"function","title":"MistralClient.update_fine_tuned_model/2","doc":"Update a fine-tuned model.","ref":"MistralClient.html#update_fine_tuned_model/2"},{"type":"function","title":"MistralClient.upload_file/2","doc":"Upload a file.","ref":"MistralClient.html#upload_file/2"},{"type":"function","title":"Parameters - MistralClient.upload_file/2","doc":"* `file_path` - Path to the file to upload\n  * `purpose` - Purpose of the file (e.g., \"fine-tune\")","ref":"MistralClient.html#upload_file/2-parameters"},{"type":"function","title":"Examples - MistralClient.upload_file/2","doc":"{:ok, file} = MistralClient.upload_file(\"./data.jsonl\", \"fine-tune\")","ref":"MistralClient.html#upload_file/2-examples"},{"type":"module","title":"MistralClient.API.Agents","doc":"Agents API for the Mistral AI client.\n\nThis module provides functions for creating agent completions, both streaming\nand non-streaming, with support for tools, function calling, and agent-specific\nconfigurations.","ref":"MistralClient.API.Agents.html"},{"type":"module","title":"Features - MistralClient.API.Agents","doc":"* Agent-based chat completions\n  * Streaming agent completions\n  * Tool/function calling support for agents\n  * Agent-specific configurations\n  * Temperature and sampling controls\n  * Token usage tracking","ref":"MistralClient.API.Agents.html#module-features"},{"type":"module","title":"Usage - MistralClient.API.Agents","doc":"# Basic agent completion\n    {:ok, response} = MistralClient.API.Agents.complete(\n      \"agent-123\",\n      [%{role: \"user\", content: \"Hello, how are you?\"}]\n    )\n\n    # Agent completion with options\n    {:ok, response} = MistralClient.API.Agents.complete(\n      \"agent-123\",\n      [%{role: \"user\", content: \"Hello!\"}],\n      %{temperature: 0.7, max_tokens: 100}\n    )\n\n    # Streaming agent completion\n    MistralClient.API.Agents.stream(\n      \"agent-123\",\n      [%{role: \"user\", content: \"Tell me a story\"}],\n      fn chunk ->\n        content = get_in(chunk, [\"choices\", Access.at(0), \"delta\", \"content\"])\n        if content, do: IO.write(content)\n      end\n    )","ref":"MistralClient.API.Agents.html#module-usage"},{"type":"function","title":"MistralClient.API.Agents.complete/2","doc":"Create an agent completion.","ref":"MistralClient.API.Agents.html#complete/2"},{"type":"function","title":"Parameters - MistralClient.API.Agents.complete/2","doc":"* `config` - Configuration keyword list or Client struct\n  * `request` - Request map with agent_id, messages and options","ref":"MistralClient.API.Agents.html#complete/2-parameters"},{"type":"function","title":"Request Options - MistralClient.API.Agents.complete/2","doc":"* `:agent_id` - Agent ID to use for completion (required)\n  * `:messages` - List of message maps (required)\n  * `:temperature` - Sampling temperature (0.0 to 2.0)\n  * `:max_tokens` - Maximum tokens to generate\n  * `:top_p` - Nucleus sampling parameter\n  * `:tools` - List of available tools/functions\n  * `:tool_choice` - Tool choice strategy\n  * `:response_format` - Structured output format\n  * `:random_seed` - Random seed for reproducibility\n  * `:stop` - Stop sequences\n  * `:presence_penalty` - Presence penalty (-2.0 to 2.0)\n  * `:frequency_penalty` - Frequency penalty (-2.0 to 2.0)\n  * `:n` - Number of completions to return\n  * `:prediction` - Prediction configuration\n  * `:parallel_tool_calls` - Enable parallel tool calls","ref":"MistralClient.API.Agents.html#complete/2-request-options"},{"type":"function","title":"Examples - MistralClient.API.Agents.complete/2","doc":"config = [api_key: \"your-api-key\"]\n    request = %{\n      \"agent_id\" => \"agent-123\",\n      \"messages\" => [%{\"role\" => \"user\", \"content\" => \"Hello!\"}]\n    }\n    {:ok, response} = MistralClient.API.Agents.complete(config, request)","ref":"MistralClient.API.Agents.html#complete/2-examples"},{"type":"function","title":"MistralClient.API.Agents.complete/4","doc":"Create an agent completion (legacy interface).","ref":"MistralClient.API.Agents.html#complete/4"},{"type":"function","title":"Parameters - MistralClient.API.Agents.complete/4","doc":"* `agent_id` - Agent ID to use for completion\n  * `messages` - List of message maps or structs\n  * `options` - Optional parameters for the completion\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Agents.html#complete/4-parameters"},{"type":"function","title":"Examples - MistralClient.API.Agents.complete/4","doc":"{:ok, response} = MistralClient.API.Agents.complete(\n      \"agent-123\",\n      [%{role: \"user\", content: \"What is the capital of France?\"}]\n    )","ref":"MistralClient.API.Agents.html#complete/4-examples"},{"type":"type","title":"MistralClient.API.Agents.message/0","doc":"","ref":"MistralClient.API.Agents.html#t:message/0"},{"type":"type","title":"MistralClient.API.Agents.options/0","doc":"","ref":"MistralClient.API.Agents.html#t:options/0"},{"type":"function","title":"MistralClient.API.Agents.stream/3","doc":"Create a streaming agent completion.","ref":"MistralClient.API.Agents.html#stream/3"},{"type":"function","title":"Parameters - MistralClient.API.Agents.stream/3","doc":"* `config` - Configuration keyword list or Client struct\n  * `request` - Request map with agent_id, messages and options\n  * `callback` - Function to handle each chunk (optional, returns stream if not provided)","ref":"MistralClient.API.Agents.html#stream/3-parameters"},{"type":"function","title":"Examples - MistralClient.API.Agents.stream/3","doc":"config = [api_key: \"your-api-key\"]\n    request = %{\n      \"agent_id\" => \"agent-123\",\n      \"messages\" => [%{\"role\" => \"user\", \"content\" => \"Tell me a story\"}]\n    }\n    {:ok, stream} = MistralClient.API.Agents.stream(config, request)","ref":"MistralClient.API.Agents.html#stream/3-examples"},{"type":"function","title":"MistralClient.API.Agents.stream_legacy/5","doc":"Create a streaming agent completion (legacy interface).","ref":"MistralClient.API.Agents.html#stream_legacy/5"},{"type":"function","title":"Parameters - MistralClient.API.Agents.stream_legacy/5","doc":"* `agent_id` - Agent ID to use for completion\n  * `messages` - List of message maps or structs\n  * `callback` - Function to handle each chunk\n  * `options` - Optional parameters for the completion\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Agents.html#stream_legacy/5-parameters"},{"type":"function","title":"Examples - MistralClient.API.Agents.stream_legacy/5","doc":"MistralClient.API.Agents.stream_legacy(\n      \"agent-123\",\n      [%{role: \"user\", content: \"Tell me a story\"}],\n      fn chunk ->\n        content = get_in(chunk, [\"choices\", Access.at(0), \"delta\", \"content\"])\n        if content, do: IO.write(content)\n      end\n    )","ref":"MistralClient.API.Agents.html#stream_legacy/5-examples"},{"type":"function","title":"MistralClient.API.Agents.with_tools/5","doc":"Create an agent completion with tool/function calling.","ref":"MistralClient.API.Agents.html#with_tools/5"},{"type":"function","title":"Parameters - MistralClient.API.Agents.with_tools/5","doc":"* `agent_id` - Agent ID to use for completion\n  * `messages` - List of message maps or structs\n  * `tools` - List of available tools/functions\n  * `options` - Optional parameters for the completion\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Agents.html#with_tools/5-parameters"},{"type":"function","title":"Tool Format - MistralClient.API.Agents.with_tools/5","doc":"tools = [\n      %{\n        type: \"function\",\n        function: %{\n          name: \"get_weather\",\n          description: \"Get current weather for a location\",\n          parameters: %{\n            type: \"object\",\n            properties: %{\n              location: %{type: \"string\", description: \"City name\"}\n            },\n            required: [\"location\"]\n          }\n        }\n      }\n    ]","ref":"MistralClient.API.Agents.html#with_tools/5-tool-format"},{"type":"function","title":"Examples - MistralClient.API.Agents.with_tools/5","doc":"{:ok, response} = MistralClient.API.Agents.with_tools(\n      \"agent-123\",\n      [%{role: \"user\", content: \"What's the weather in Paris?\"}],\n      tools\n    )","ref":"MistralClient.API.Agents.html#with_tools/5-examples"},{"type":"module","title":"MistralClient.API.Batch","doc":"Batch API for processing multiple requests asynchronously.\n\nThe Batch API allows you to submit multiple requests for processing in the background.\nThis is useful for processing large volumes of data without blocking your application.","ref":"MistralClient.API.Batch.html"},{"type":"module","title":"Supported Endpoints - MistralClient.API.Batch","doc":"- `/v1/chat/completions` - Chat completions\n- `/v1/embeddings` - Text embeddings\n- `/v1/fim/completions` - Fill-in-the-middle completions\n- `/v1/moderations` - Content moderation\n- `/v1/chat/moderations` - Chat moderation","ref":"MistralClient.API.Batch.html#module-supported-endpoints"},{"type":"module","title":"Example - MistralClient.API.Batch","doc":"# Create a batch job\n    {:ok, job} = MistralClient.API.Batch.create(client, %{\n      input_files: [\"file-abc123\"],\n      endpoint: \"/v1/chat/completions\",\n      model: \"mistral-large-latest\",\n      metadata: %{\"description\" => \"Customer support batch\"}\n    })\n\n    # Monitor progress\n    {:ok, updated_job} = MistralClient.API.Batch.get(client, job.id)\n    IO.puts(\"Status: #{updated_job.status}, Progress: #{updated_job.completed_requests}/#{updated_job.total_requests}\")\n\n    # List all batch jobs\n    {:ok, jobs} = MistralClient.API.Batch.list(client, %{status: [\"RUNNING\", \"QUEUED\"]})","ref":"MistralClient.API.Batch.html#module-example"},{"type":"function","title":"MistralClient.API.Batch.cancel/2","doc":"Cancel a running batch job.","ref":"MistralClient.API.Batch.html#cancel/2"},{"type":"function","title":"Parameters - MistralClient.API.Batch.cancel/2","doc":"- `client` - The MistralClient.Client instance\n- `job_id` - The batch job ID to cancel","ref":"MistralClient.API.Batch.html#cancel/2-parameters"},{"type":"function","title":"Returns - MistralClient.API.Batch.cancel/2","doc":"- `{:ok, %BatchJobOut{}}` - Updated batch job with cancellation status\n- `{:error, reason}` - Error details","ref":"MistralClient.API.Batch.html#cancel/2-returns"},{"type":"function","title":"Example - MistralClient.API.Batch.cancel/2","doc":"{:ok, job} = MistralClient.API.Batch.cancel(client, \"batch_abc123\")\n    # job.status will be \"CANCELLATION_REQUESTED\" or \"CANCELLED\"","ref":"MistralClient.API.Batch.html#cancel/2-example"},{"type":"function","title":"MistralClient.API.Batch.create/2","doc":"Create a new batch job for processing multiple requests.","ref":"MistralClient.API.Batch.html#create/2"},{"type":"function","title":"Parameters - MistralClient.API.Batch.create/2","doc":"- `client` - The MistralClient.Client instance\n- `request` - BatchJobIn struct or map with:\n  - `:input_files` - List of file IDs to process (required)\n  - `:endpoint` - API endpoint to use (required)\n  - `:model` - Model to use for processing (required)\n  - `:metadata` - Optional metadata map\n  - `:timeout_hours` - Timeout in hours (default: 24)","ref":"MistralClient.API.Batch.html#create/2-parameters"},{"type":"function","title":"Returns - MistralClient.API.Batch.create/2","doc":"- `{:ok, %BatchJobOut{}}` - Created batch job\n- `{:error, reason}` - Error details","ref":"MistralClient.API.Batch.html#create/2-returns"},{"type":"function","title":"Example - MistralClient.API.Batch.create/2","doc":"{:ok, job} = MistralClient.API.Batch.create(client, %{\n      input_files: [\"file-abc123\", \"file-def456\"],\n      endpoint: \"/v1/chat/completions\",\n      model: \"mistral-large-latest\",\n      metadata: %{\"project\" => \"customer-support\"},\n      timeout_hours: 48\n    })","ref":"MistralClient.API.Batch.html#create/2-example"},{"type":"function","title":"MistralClient.API.Batch.get/2","doc":"Get details of a specific batch job by ID.","ref":"MistralClient.API.Batch.html#get/2"},{"type":"function","title":"Parameters - MistralClient.API.Batch.get/2","doc":"- `client` - The MistralClient.Client instance\n- `job_id` - The batch job ID","ref":"MistralClient.API.Batch.html#get/2-parameters"},{"type":"function","title":"Returns - MistralClient.API.Batch.get/2","doc":"- `{:ok, %BatchJobOut{}}` - Batch job details\n- `{:error, reason}` - Error details","ref":"MistralClient.API.Batch.html#get/2-returns"},{"type":"function","title":"Example - MistralClient.API.Batch.get/2","doc":"{:ok, job} = MistralClient.API.Batch.get(client, \"batch_abc123\")\n    IO.puts(\"Status: #{job.status}\")\n    IO.puts(\"Progress: #{job.completed_requests}/#{job.total_requests}\")","ref":"MistralClient.API.Batch.html#get/2-example"},{"type":"function","title":"MistralClient.API.Batch.list/2","doc":"List batch jobs with optional filtering and pagination.","ref":"MistralClient.API.Batch.html#list/2"},{"type":"function","title":"Parameters - MistralClient.API.Batch.list/2","doc":"- `client` - The MistralClient.Client instance\n- `params` - Optional parameters map:\n  - `:page` - Page number (default: 0)\n  - `:page_size` - Number of jobs per page (default: 100)\n  - `:model` - Filter by model name\n  - `:metadata` - Filter by metadata\n  - `:created_after` - Filter by creation date (DateTime)\n  - `:created_by_me` - Filter by ownership (boolean, default: false)\n  - `:status` - Filter by status list (e.g., [\"RUNNING\", \"QUEUED\"])","ref":"MistralClient.API.Batch.html#list/2-parameters"},{"type":"function","title":"Returns - MistralClient.API.Batch.list/2","doc":"- `{:ok, %BatchJobsOut{}}` - List of batch jobs\n- `{:error, reason}` - Error details","ref":"MistralClient.API.Batch.html#list/2-returns"},{"type":"function","title":"Example - MistralClient.API.Batch.list/2","doc":"{:ok, jobs} = MistralClient.API.Batch.list(client, %{\n      page: 0,\n      page_size: 50,\n      status: [\"RUNNING\", \"QUEUED\"],\n      model: \"mistral-large-latest\"\n    })","ref":"MistralClient.API.Batch.html#list/2-example"},{"type":"module","title":"MistralClient.API.Beta","doc":"Beta API endpoints for experimental Mistral AI features.\n\nThis module provides access to experimental features that are in beta testing.\nThese APIs may change without notice and should be used with caution in production.","ref":"MistralClient.API.Beta.html"},{"type":"module","title":"Available Beta APIs - MistralClient.API.Beta","doc":"- **Agents API**: Create and manage AI agents with specific instructions and tools\n- **Conversations API**: Manage persistent conversations with agents","ref":"MistralClient.API.Beta.html#module-available-beta-apis"},{"type":"module","title":"Usage - MistralClient.API.Beta","doc":"# Create an agent\n    {:ok, agent} = MistralClient.API.Beta.create_agent(%{\n      name: \"Customer Support Agent\",\n      model: \"mistral-large-latest\",\n      instructions: \"You are a helpful customer support agent.\"\n    })\n\n    # Start a conversation\n    {:ok, conversation} = MistralClient.API.Beta.start_conversation(%{\n      agent_id: agent.id,\n      inputs: \"Hello, I need help with my order.\"\n    })","ref":"MistralClient.API.Beta.html#module-usage"},{"type":"function","title":"MistralClient.API.Beta.append_to_conversation/3","doc":"See  MistralClient.API.Beta.Conversations.append/3 .","ref":"MistralClient.API.Beta.html#append_to_conversation/3"},{"type":"function","title":"MistralClient.API.Beta.append_to_conversation_stream/4","doc":"See  MistralClient.API.Beta.Conversations.append_stream/4 .","ref":"MistralClient.API.Beta.html#append_to_conversation_stream/4"},{"type":"function","title":"MistralClient.API.Beta.beta_available?/1","doc":"Check if Beta APIs are available.\n\nReturns true if the current API key has access to beta features.","ref":"MistralClient.API.Beta.html#beta_available?/1"},{"type":"function","title":"MistralClient.API.Beta.beta_status/1","doc":"Get beta API status and available features.","ref":"MistralClient.API.Beta.html#beta_status/1"},{"type":"function","title":"MistralClient.API.Beta.create_agent/2","doc":"See  MistralClient.API.Beta.Agents.create/2 .","ref":"MistralClient.API.Beta.html#create_agent/2"},{"type":"function","title":"MistralClient.API.Beta.get_agent/2","doc":"See  MistralClient.API.Beta.Agents.get/2 .","ref":"MistralClient.API.Beta.html#get_agent/2"},{"type":"function","title":"MistralClient.API.Beta.get_conversation/2","doc":"See  MistralClient.API.Beta.Conversations.get/2 .","ref":"MistralClient.API.Beta.html#get_conversation/2"},{"type":"function","title":"MistralClient.API.Beta.get_conversation_history/2","doc":"See  MistralClient.API.Beta.Conversations.history/2 .","ref":"MistralClient.API.Beta.html#get_conversation_history/2"},{"type":"function","title":"MistralClient.API.Beta.get_conversation_messages/2","doc":"See  MistralClient.API.Beta.Conversations.messages/2 .","ref":"MistralClient.API.Beta.html#get_conversation_messages/2"},{"type":"function","title":"MistralClient.API.Beta.list_agents/2","doc":"See  MistralClient.API.Beta.Agents.list/2 .","ref":"MistralClient.API.Beta.html#list_agents/2"},{"type":"function","title":"MistralClient.API.Beta.list_conversations/2","doc":"See  MistralClient.API.Beta.Conversations.list/2 .","ref":"MistralClient.API.Beta.html#list_conversations/2"},{"type":"function","title":"MistralClient.API.Beta.restart_conversation/3","doc":"See  MistralClient.API.Beta.Conversations.restart/3 .","ref":"MistralClient.API.Beta.html#restart_conversation/3"},{"type":"function","title":"MistralClient.API.Beta.restart_conversation_stream/4","doc":"See  MistralClient.API.Beta.Conversations.restart_stream/4 .","ref":"MistralClient.API.Beta.html#restart_conversation_stream/4"},{"type":"function","title":"MistralClient.API.Beta.start_conversation/2","doc":"See  MistralClient.API.Beta.Conversations.start/2 .","ref":"MistralClient.API.Beta.html#start_conversation/2"},{"type":"function","title":"MistralClient.API.Beta.start_conversation_stream/3","doc":"See  MistralClient.API.Beta.Conversations.start_stream/3 .","ref":"MistralClient.API.Beta.html#start_conversation_stream/3"},{"type":"function","title":"MistralClient.API.Beta.update_agent/3","doc":"See  MistralClient.API.Beta.Agents.update/3 .","ref":"MistralClient.API.Beta.html#update_agent/3"},{"type":"function","title":"MistralClient.API.Beta.update_agent_version/3","doc":"See  MistralClient.API.Beta.Agents.update_version/3 .","ref":"MistralClient.API.Beta.html#update_agent_version/3"},{"type":"module","title":"MistralClient.API.Beta.Agents","doc":"Beta Agents API for creating and managing AI agents.\n\nThis module provides functionality to create, manage, and interact with AI agents\nthat have specific instructions, tools, and capabilities.","ref":"MistralClient.API.Beta.Agents.html"},{"type":"module","title":"Features - MistralClient.API.Beta.Agents","doc":"- Create agents with custom instructions and tools\n- List and retrieve agent information\n- Update agent configurations and versions\n- Version management for agents","ref":"MistralClient.API.Beta.Agents.html#module-features"},{"type":"module","title":"Usage - MistralClient.API.Beta.Agents","doc":"config = MistralClient.Config.new()\n\n    # Create an agent\n    request = %{\n      name: \"Customer Support Agent\",\n      model: \"mistral-large-latest\",\n      instructions: \"You are a helpful customer support agent.\",\n      tools: [\n        %{\n          type: \"function\",\n          function: %{\n            name: \"get_order_status\",\n            description: \"Get the status of a customer order\"\n          }\n        }\n      ]\n    }\n    {:ok, agent} = MistralClient.API.Beta.Agents.create(config, request)\n\n    # List agents\n    {:ok, agents} = MistralClient.API.Beta.Agents.list(config)\n\n    # Get specific agent\n    {:ok, agent} = MistralClient.API.Beta.Agents.get(config, agent_id)","ref":"MistralClient.API.Beta.Agents.html#module-usage"},{"type":"function","title":"MistralClient.API.Beta.Agents.create/2","doc":"Create a new agent.","ref":"MistralClient.API.Beta.Agents.html#create/2"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Agents.create/2","doc":"* `config` - Client configuration\n  * `request` - Agent creation request with:\n    - `:name` - Agent name (required)\n    - `:model` - Model to use (required)\n    - `:instructions` - Instructions for the agent (optional)\n    - `:tools` - List of tools available to the agent (optional)\n    - `:description` - Agent description (optional)\n    - `:completion_args` - Default completion arguments (optional)\n    - `:handoffs` - List of agent handoff targets (optional)","ref":"MistralClient.API.Beta.Agents.html#create/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Agents.create/2","doc":"request = %{\n      name: \"Support Agent\",\n      model: \"mistral-large-latest\",\n      instructions: \"You are a helpful support agent.\",\n      tools: [\n        %{\n          type: \"function\",\n          function: %{\n            name: \"search_kb\",\n            description: \"Search knowledge base\"\n          }\n        }\n      ]\n    }\n    {:ok, agent} = create(config, request)","ref":"MistralClient.API.Beta.Agents.html#create/2-examples"},{"type":"function","title":"MistralClient.API.Beta.Agents.get/2","doc":"Retrieve a specific agent by ID.","ref":"MistralClient.API.Beta.Agents.html#get/2"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Agents.get/2","doc":"* `config` - Client configuration\n  * `agent_id` - The agent ID to retrieve","ref":"MistralClient.API.Beta.Agents.html#get/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Agents.get/2","doc":"{:ok, agent} = get(config, \"agent_123\")","ref":"MistralClient.API.Beta.Agents.html#get/2-examples"},{"type":"function","title":"MistralClient.API.Beta.Agents.list/2","doc":"List agents with optional pagination.","ref":"MistralClient.API.Beta.Agents.html#list/2"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Agents.list/2","doc":"* `config` - Client configuration\n  * `options` - Optional parameters:\n    - `:page` - Page number (default: 0)\n    - `:page_size` - Number of agents per page (default: 20)","ref":"MistralClient.API.Beta.Agents.html#list/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Agents.list/2","doc":"# List all agents\n    {:ok, agents} = list(config)\n\n    # List with pagination\n    {:ok, agents} = list(config, %{page: 1, page_size: 10})","ref":"MistralClient.API.Beta.Agents.html#list/2-examples"},{"type":"function","title":"MistralClient.API.Beta.Agents.update/3","doc":"Update an agent's configuration.\n\nThis creates a new version of the agent with the updated configuration.","ref":"MistralClient.API.Beta.Agents.html#update/3"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Agents.update/3","doc":"* `config` - Client configuration\n  * `agent_id` - The agent ID to update\n  * `updates` - Map of fields to update:\n    - `:name` - New agent name (optional)\n    - `:instructions` - New instructions (optional)\n    - `:tools` - New tools list (optional)\n    - `:description` - New description (optional)\n    - `:completion_args` - New completion arguments (optional)\n    - `:handoffs` - New handoff targets (optional)","ref":"MistralClient.API.Beta.Agents.html#update/3-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Agents.update/3","doc":"updates = %{\n      instructions: \"Updated instructions for the agent\",\n      tools: [new_tool]\n    }\n    {:ok, updated_agent} = update(config, agent_id, updates)","ref":"MistralClient.API.Beta.Agents.html#update/3-examples"},{"type":"function","title":"MistralClient.API.Beta.Agents.update_version/3","doc":"Update an agent's active version.","ref":"MistralClient.API.Beta.Agents.html#update_version/3"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Agents.update_version/3","doc":"* `config` - Client configuration\n  * `agent_id` - The agent ID\n  * `version` - Version number to activate","ref":"MistralClient.API.Beta.Agents.html#update_version/3-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Agents.update_version/3","doc":"{:ok, agent} = update_version(config, agent_id, 2)","ref":"MistralClient.API.Beta.Agents.html#update_version/3-examples"},{"type":"module","title":"MistralClient.API.Beta.Conversations","doc":"Beta Conversations API for managing persistent conversations with agents.\n\nThis module provides functionality to create, manage, and interact with conversations\nthat can persist across multiple interactions and maintain context.","ref":"MistralClient.API.Beta.Conversations.html"},{"type":"module","title":"Features - MistralClient.API.Beta.Conversations","doc":"- Start conversations with agents or models\n- Append messages to existing conversations\n- Retrieve conversation history and messages\n- Restart conversations from specific points\n- Stream conversation responses in real-time","ref":"MistralClient.API.Beta.Conversations.html#module-features"},{"type":"module","title":"Usage - MistralClient.API.Beta.Conversations","doc":"config = MistralClient.Config.new()\n\n    # Start a conversation with an agent\n    {:ok, conversation} = start(config, %{\n      agent_id: \"agent_123\",\n      inputs: \"Hello, I need help with my order.\"\n    })\n\n    # Append to the conversation\n    {:ok, response} = append(config, conversation.conversation_id, %{\n      inputs: \"Can you check order #12345?\"\n    })\n\n    # Get conversation history\n    {:ok, history} = history(config, conversation.conversation_id)","ref":"MistralClient.API.Beta.Conversations.html#module-usage"},{"type":"function","title":"MistralClient.API.Beta.Conversations.append/3","doc":"Append new entries to an existing conversation.","ref":"MistralClient.API.Beta.Conversations.html#append/3"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Conversations.append/3","doc":"* `config` - Client configuration\n  * `conversation_id` - The conversation ID\n  * `request` - Append request with:\n    - `:inputs` - New message(s) to append (required)\n    - `:stream` - Whether to stream responses (optional, default: false)\n    - `:store` - Whether to store results (optional, default: true)\n    - `:handoff_execution` - Handoff execution mode (optional)\n    - `:completion_args` - Completion arguments (optional)","ref":"MistralClient.API.Beta.Conversations.html#append/3-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Conversations.append/3","doc":"{:ok, response} = append(config, conversation_id, %{\n      inputs: \"What's the weather like today?\"\n    })","ref":"MistralClient.API.Beta.Conversations.html#append/3-examples"},{"type":"function","title":"MistralClient.API.Beta.Conversations.append_stream/4","doc":"Append new entries to an existing conversation with streaming.","ref":"MistralClient.API.Beta.Conversations.html#append_stream/4"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Conversations.append_stream/4","doc":"* `config` - Client configuration\n  * `conversation_id` - The conversation ID\n  * `request` - Append request (same as append/3)\n  * `callback` - Function to handle streaming chunks","ref":"MistralClient.API.Beta.Conversations.html#append_stream/4-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Conversations.append_stream/4","doc":"append_stream(config, conversation_id, %{\n      inputs: \"Continue the story\"\n    }, fn chunk ->\n      IO.write(chunk.content || \"\")\n    end)","ref":"MistralClient.API.Beta.Conversations.html#append_stream/4-examples"},{"type":"function","title":"MistralClient.API.Beta.Conversations.get/2","doc":"Retrieve a specific conversation by ID.","ref":"MistralClient.API.Beta.Conversations.html#get/2"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Conversations.get/2","doc":"* `config` - Client configuration\n  * `conversation_id` - The conversation ID to retrieve","ref":"MistralClient.API.Beta.Conversations.html#get/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Conversations.get/2","doc":"{:ok, conversation} = get(config, \"conv_123\")","ref":"MistralClient.API.Beta.Conversations.html#get/2-examples"},{"type":"function","title":"MistralClient.API.Beta.Conversations.history/2","doc":"Retrieve all entries in a conversation.","ref":"MistralClient.API.Beta.Conversations.html#history/2"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Conversations.history/2","doc":"* `config` - Client configuration\n  * `conversation_id` - The conversation ID","ref":"MistralClient.API.Beta.Conversations.html#history/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Conversations.history/2","doc":"{:ok, history} = history(config, conversation_id)","ref":"MistralClient.API.Beta.Conversations.html#history/2-examples"},{"type":"function","title":"MistralClient.API.Beta.Conversations.list/2","doc":"List conversations with optional pagination.","ref":"MistralClient.API.Beta.Conversations.html#list/2"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Conversations.list/2","doc":"* `config` - Client configuration\n  * `options` - Optional parameters:\n    - `:page` - Page number (default: 0)\n    - `:page_size` - Number of conversations per page (default: 100)","ref":"MistralClient.API.Beta.Conversations.html#list/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Conversations.list/2","doc":"{:ok, conversations} = list(config)\n    {:ok, conversations} = list(config, %{page: 1, page_size: 50})","ref":"MistralClient.API.Beta.Conversations.html#list/2-examples"},{"type":"function","title":"MistralClient.API.Beta.Conversations.messages/2","doc":"Retrieve all messages in a conversation.","ref":"MistralClient.API.Beta.Conversations.html#messages/2"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Conversations.messages/2","doc":"* `config` - Client configuration\n  * `conversation_id` - The conversation ID","ref":"MistralClient.API.Beta.Conversations.html#messages/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Conversations.messages/2","doc":"{:ok, messages} = messages(config, conversation_id)","ref":"MistralClient.API.Beta.Conversations.html#messages/2-examples"},{"type":"function","title":"MistralClient.API.Beta.Conversations.restart/3","doc":"Restart a conversation from a specific entry.","ref":"MistralClient.API.Beta.Conversations.html#restart/3"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Conversations.restart/3","doc":"* `config` - Client configuration\n  * `conversation_id` - The conversation ID\n  * `request` - Restart request with:\n    - `:inputs` - New message(s) (required)\n    - `:from_entry_id` - Entry ID to restart from (required)\n    - `:stream` - Whether to stream responses (optional, default: false)\n    - `:store` - Whether to store results (optional, default: true)\n    - `:handoff_execution` - Handoff execution mode (optional)\n    - `:completion_args` - Completion arguments (optional)","ref":"MistralClient.API.Beta.Conversations.html#restart/3-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Conversations.restart/3","doc":"{:ok, response} = restart(config, conversation_id, %{\n      inputs: \"Let's try a different approach\",\n      from_entry_id: \"entry_456\"\n    })","ref":"MistralClient.API.Beta.Conversations.html#restart/3-examples"},{"type":"function","title":"MistralClient.API.Beta.Conversations.restart_stream/4","doc":"Restart a conversation from a specific entry with streaming.","ref":"MistralClient.API.Beta.Conversations.html#restart_stream/4"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Conversations.restart_stream/4","doc":"* `config` - Client configuration\n  * `conversation_id` - The conversation ID\n  * `request` - Restart request (same as restart/3)\n  * `callback` - Function to handle streaming chunks","ref":"MistralClient.API.Beta.Conversations.html#restart_stream/4-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Conversations.restart_stream/4","doc":"restart_stream(config, conversation_id, %{\n      inputs: \"Let's start over\",\n      from_entry_id: \"entry_123\"\n    }, fn chunk ->\n      IO.write(chunk.content || \"\")\n    end)","ref":"MistralClient.API.Beta.Conversations.html#restart_stream/4-examples"},{"type":"function","title":"MistralClient.API.Beta.Conversations.start/2","doc":"Start a new conversation.","ref":"MistralClient.API.Beta.Conversations.html#start/2"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Conversations.start/2","doc":"* `config` - Client configuration\n  * `request` - Conversation start request with:\n    - `:inputs` - Initial message(s) (required)\n    - `:agent_id` - Agent ID to use (optional, mutually exclusive with model)\n    - `:model` - Model to use (optional, mutually exclusive with agent_id)\n    - `:instructions` - Custom instructions (optional)\n    - `:tools` - Tools available in conversation (optional)\n    - `:completion_args` - Completion arguments (optional)\n    - `:name` - Conversation name (optional)\n    - `:description` - Conversation description (optional)\n    - `:store` - Whether to store the conversation (optional, default: true)\n    - `:handoff_execution` - Handoff execution mode (optional)","ref":"MistralClient.API.Beta.Conversations.html#start/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Conversations.start/2","doc":"# Start with an agent\n    {:ok, conversation} = start(config, %{\n      agent_id: \"agent_123\",\n      inputs: \"Hello, how can you help me?\"\n    })\n\n    # Start with a model\n    {:ok, conversation} = start(config, %{\n      model: \"mistral-large-latest\",\n      inputs: \"Explain quantum computing\",\n      instructions: \"You are a physics teacher.\"\n    })","ref":"MistralClient.API.Beta.Conversations.html#start/2-examples"},{"type":"function","title":"MistralClient.API.Beta.Conversations.start_stream/3","doc":"Start a new conversation with streaming responses.","ref":"MistralClient.API.Beta.Conversations.html#start_stream/3"},{"type":"function","title":"Parameters - MistralClient.API.Beta.Conversations.start_stream/3","doc":"* `config` - Client configuration\n  * `request` - Conversation start request (same as start/2)\n  * `callback` - Function to handle streaming chunks","ref":"MistralClient.API.Beta.Conversations.html#start_stream/3-parameters"},{"type":"function","title":"Examples - MistralClient.API.Beta.Conversations.start_stream/3","doc":"start_stream(config, %{\n      agent_id: \"agent_123\",\n      inputs: \"Tell me a story\"\n    }, fn chunk ->\n      IO.write(chunk.content || \"\")\n    end)","ref":"MistralClient.API.Beta.Conversations.html#start_stream/3-examples"},{"type":"module","title":"MistralClient.API.Chat","doc":"Chat completions API for the Mistral AI client.\n\nThis module provides functions for creating chat completions, both streaming\nand non-streaming, with support for tools, function calling, and structured outputs.","ref":"MistralClient.API.Chat.html"},{"type":"module","title":"Features - MistralClient.API.Chat","doc":"* Standard chat completions\n  * Streaming chat completions\n  * Tool/function calling support\n  * Structured output parsing\n  * Temperature and sampling controls\n  * Token usage tracking","ref":"MistralClient.API.Chat.html#module-features"},{"type":"module","title":"Usage - MistralClient.API.Chat","doc":"# Basic chat completion\n    {:ok, response} = MistralClient.API.Chat.complete([\n      %{role: \"user\", content: \"Hello, how are you?\"}\n    ])\n\n    # Chat with options\n    {:ok, response} = MistralClient.API.Chat.complete(\n      [%{role: \"user\", content: \"Hello!\"}],\n      %{model: \"mistral-large-latest\", temperature: 0.7}\n    )\n\n    # Streaming chat\n    MistralClient.API.Chat.stream([\n      %{role: \"user\", content: \"Tell me a story\"}\n    ], fn chunk ->\n      content = get_in(chunk, [\"choices\", Access.at(0), \"delta\", \"content\"])\n      if content, do: IO.write(content)\n    end)","ref":"MistralClient.API.Chat.html#module-usage"},{"type":"function","title":"MistralClient.API.Chat.complete/2","doc":"Create a chat completion.","ref":"MistralClient.API.Chat.html#complete/2"},{"type":"function","title":"Parameters - MistralClient.API.Chat.complete/2","doc":"* `config` - Configuration keyword list or Client struct\n  * `request` - Request map with messages and options","ref":"MistralClient.API.Chat.html#complete/2-parameters"},{"type":"function","title":"Request Options - MistralClient.API.Chat.complete/2","doc":"* `:model` - Model to use (default: \"mistral-large-latest\")\n  * `:messages` - List of message maps (required)\n  * `:temperature` - Sampling temperature (0.0 to 1.0)\n  * `:max_tokens` - Maximum tokens to generate\n  * `:top_p` - Nucleus sampling parameter\n  * `:tools` - List of available tools/functions\n  * `:tool_choice` - Tool choice strategy\n  * `:response_format` - Structured output format\n  * `:safe_prompt` - Enable safety filtering\n  * `:random_seed` - Random seed for reproducibility","ref":"MistralClient.API.Chat.html#complete/2-request-options"},{"type":"function","title":"Examples - MistralClient.API.Chat.complete/2","doc":"config = [api_key: \"your-api-key\"]\n    request = %{\n      \"messages\" => [%{\"role\" => \"user\", \"content\" => \"Hello!\"}],\n      \"model\" => \"mistral-tiny\"\n    }\n    {:ok, response} = MistralClient.API.Chat.complete(config, request)","ref":"MistralClient.API.Chat.html#complete/2-examples"},{"type":"function","title":"MistralClient.API.Chat.complete/3","doc":"Create a chat completion (legacy interface).","ref":"MistralClient.API.Chat.html#complete/3"},{"type":"function","title":"Parameters - MistralClient.API.Chat.complete/3","doc":"* `messages` - List of message maps or structs\n  * `options` - Optional parameters for the completion\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Chat.html#complete/3-parameters"},{"type":"function","title":"Examples - MistralClient.API.Chat.complete/3","doc":"{:ok, response} = MistralClient.API.Chat.complete([\n      %{role: \"user\", content: \"What is the capital of France?\"}\n    ])","ref":"MistralClient.API.Chat.html#complete/3-examples"},{"type":"type","title":"MistralClient.API.Chat.message/0","doc":"","ref":"MistralClient.API.Chat.html#t:message/0"},{"type":"type","title":"MistralClient.API.Chat.options/0","doc":"","ref":"MistralClient.API.Chat.html#t:options/0"},{"type":"function","title":"MistralClient.API.Chat.parse/4","doc":"Create a chat completion with structured output parsing.","ref":"MistralClient.API.Chat.html#parse/4"},{"type":"function","title":"Parameters - MistralClient.API.Chat.parse/4","doc":"* `messages` - List of message maps or structs\n  * `response_format` - JSON schema for structured output\n  * `options` - Optional parameters for the completion\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Chat.html#parse/4-parameters"},{"type":"function","title":"Examples - MistralClient.API.Chat.parse/4","doc":"schema = %{\n      type: \"object\",\n      properties: %{\n        name: %{type: \"string\"},\n        age: %{type: \"integer\"}\n      },\n      required: [\"name\", \"age\"]\n    }\n\n    {:ok, response} = MistralClient.API.Chat.parse(\n      [%{role: \"user\", content: \"Extract: John is 25 years old\"}],\n      schema\n    )","ref":"MistralClient.API.Chat.html#parse/4-examples"},{"type":"function","title":"MistralClient.API.Chat.stream/3","doc":"Create a streaming chat completion.","ref":"MistralClient.API.Chat.html#stream/3"},{"type":"function","title":"Parameters - MistralClient.API.Chat.stream/3","doc":"* `config` - Configuration keyword list or Client struct\n  * `request` - Request map with messages and options\n  * `callback` - Function to handle each chunk (optional, returns stream if not provided)","ref":"MistralClient.API.Chat.html#stream/3-parameters"},{"type":"function","title":"Examples - MistralClient.API.Chat.stream/3","doc":"config = [api_key: \"your-api-key\"]\n    request = %{\n      \"messages\" => [%{\"role\" => \"user\", \"content\" => \"Tell me a story\"}],\n      \"model\" => \"mistral-tiny\"\n    }\n    {:ok, stream} = MistralClient.API.Chat.stream(config, request)","ref":"MistralClient.API.Chat.html#stream/3-examples"},{"type":"function","title":"MistralClient.API.Chat.with_tools/4","doc":"Create a chat completion with tool/function calling.","ref":"MistralClient.API.Chat.html#with_tools/4"},{"type":"function","title":"Parameters - MistralClient.API.Chat.with_tools/4","doc":"* `messages` - List of message maps or structs\n  * `tools` - List of available tools/functions\n  * `options` - Optional parameters for the completion\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Chat.html#with_tools/4-parameters"},{"type":"function","title":"Tool Format - MistralClient.API.Chat.with_tools/4","doc":"tools = [\n      %{\n        type: \"function\",\n        function: %{\n          name: \"get_weather\",\n          description: \"Get current weather for a location\",\n          parameters: %{\n            type: \"object\",\n            properties: %{\n              location: %{type: \"string\", description: \"City name\"}\n            },\n            required: [\"location\"]\n          }\n        }\n      }\n    ]","ref":"MistralClient.API.Chat.html#with_tools/4-tool-format"},{"type":"function","title":"Examples - MistralClient.API.Chat.with_tools/4","doc":"{:ok, response} = MistralClient.API.Chat.with_tools(\n      [%{role: \"user\", content: \"What's the weather in Paris?\"}],\n      tools\n    )","ref":"MistralClient.API.Chat.html#with_tools/4-examples"},{"type":"module","title":"MistralClient.API.Classifiers","doc":"Classifiers API for text classification and content moderation.\n\nThis module provides functions for:\n- Text moderation and safety classification\n- Chat conversation moderation\n- General text classification\n- Chat conversation classification","ref":"MistralClient.API.Classifiers.html"},{"type":"module","title":"Examples - MistralClient.API.Classifiers","doc":"# Text moderation\n    {:ok, response} = MistralClient.API.Classifiers.moderate(\n      client,\n      \"mistral-moderation-latest\",\n      [\"This is some text to moderate\"]\n    )\n\n    # Chat moderation\n    {:ok, response} = MistralClient.API.Classifiers.moderate_chat(\n      client,\n      \"mistral-moderation-latest\",\n      [[%{role: \"user\", content: \"Hello, how are you?\"}]]\n    )\n\n    # Text classification\n    {:ok, response} = MistralClient.API.Classifiers.classify(\n      client,\n      \"mistral-classifier-latest\",\n      [\"Text to classify\"]\n    )\n\n    # Chat classification\n    {:ok, response} = MistralClient.API.Classifiers.classify_chat(\n      client,\n      \"mistral-classifier-latest\",\n      [%{messages: [%{role: \"user\", content: \"Hello\"}]}]\n    )","ref":"MistralClient.API.Classifiers.html#module-examples"},{"type":"function","title":"MistralClient.API.Classifiers.classify/3","doc":"Classifications - Classify text into categories.","ref":"MistralClient.API.Classifiers.html#classify/3"},{"type":"function","title":"Parameters - MistralClient.API.Classifiers.classify/3","doc":"- `client` - The client configuration\n- `model` - ID of the model to use\n- `inputs` - Text to classify (string or list of strings)","ref":"MistralClient.API.Classifiers.html#classify/3-parameters"},{"type":"function","title":"Returns - MistralClient.API.Classifiers.classify/3","doc":"- `{:ok, ClassificationResponse.t()}` on success\n- `{:error, term()}` on failure","ref":"MistralClient.API.Classifiers.html#classify/3-returns"},{"type":"function","title":"Examples - MistralClient.API.Classifiers.classify/3","doc":"{:ok, response} = MistralClient.API.Classifiers.classify(\n      client,\n      \"mistral-classifier-latest\",\n      \"This is some text to classify\"\n    )\n\n    {:ok, response} = MistralClient.API.Classifiers.classify(\n      client,\n      \"mistral-classifier-latest\",\n      [\"Text 1\", \"Text 2\", \"Text 3\"]\n    )","ref":"MistralClient.API.Classifiers.html#classify/3-examples"},{"type":"function","title":"MistralClient.API.Classifiers.classify_chat/3","doc":"Chat Classifications - Classify chat conversations into categories.","ref":"MistralClient.API.Classifiers.html#classify_chat/3"},{"type":"function","title":"Parameters - MistralClient.API.Classifiers.classify_chat/3","doc":"- `client` - The client configuration\n- `model` - ID of the model to use\n- `inputs` - Chat conversations to classify","ref":"MistralClient.API.Classifiers.html#classify_chat/3-parameters"},{"type":"function","title":"Returns - MistralClient.API.Classifiers.classify_chat/3","doc":"- `{:ok, ClassificationResponse.t()}` on success\n- `{:error, term()}` on failure","ref":"MistralClient.API.Classifiers.html#classify_chat/3-returns"},{"type":"function","title":"Examples - MistralClient.API.Classifiers.classify_chat/3","doc":"{:ok, response} = MistralClient.API.Classifiers.classify_chat(\n      client,\n      \"mistral-classifier-latest\",\n      [%{messages: [%{role: \"user\", content: \"Hello\"}]}]\n    )","ref":"MistralClient.API.Classifiers.html#classify_chat/3-examples"},{"type":"function","title":"MistralClient.API.Classifiers.moderate/3","doc":"Moderations - Analyze text for safety and content policy violations.","ref":"MistralClient.API.Classifiers.html#moderate/3"},{"type":"function","title":"Parameters - MistralClient.API.Classifiers.moderate/3","doc":"- `client` - The client configuration\n- `model` - ID of the model to use (e.g., \"mistral-moderation-latest\")\n- `inputs` - Text to classify (string or list of strings)","ref":"MistralClient.API.Classifiers.html#moderate/3-parameters"},{"type":"function","title":"Returns - MistralClient.API.Classifiers.moderate/3","doc":"- `{:ok, ModerationResponse.t()}` on success\n- `{:error, term()}` on failure","ref":"MistralClient.API.Classifiers.html#moderate/3-returns"},{"type":"function","title":"Examples - MistralClient.API.Classifiers.moderate/3","doc":"{:ok, response} = MistralClient.API.Classifiers.moderate(\n      client,\n      \"mistral-moderation-latest\",\n      \"This is some text to moderate\"\n    )\n\n    {:ok, response} = MistralClient.API.Classifiers.moderate(\n      client,\n      \"mistral-moderation-latest\",\n      [\"Text 1\", \"Text 2\", \"Text 3\"]\n    )","ref":"MistralClient.API.Classifiers.html#moderate/3-examples"},{"type":"function","title":"MistralClient.API.Classifiers.moderate_chat/3","doc":"Chat Moderations - Analyze chat conversations for safety and content policy violations.","ref":"MistralClient.API.Classifiers.html#moderate_chat/3"},{"type":"function","title":"Parameters - MistralClient.API.Classifiers.moderate_chat/3","doc":"- `client` - The client configuration\n- `model` - ID of the model to use\n- `inputs` - Chat conversations to classify (list of message lists)","ref":"MistralClient.API.Classifiers.html#moderate_chat/3-parameters"},{"type":"function","title":"Returns - MistralClient.API.Classifiers.moderate_chat/3","doc":"- `{:ok, ModerationResponse.t()}` on success\n- `{:error, term()}` on failure","ref":"MistralClient.API.Classifiers.html#moderate_chat/3-returns"},{"type":"function","title":"Examples - MistralClient.API.Classifiers.moderate_chat/3","doc":"{:ok, response} = MistralClient.API.Classifiers.moderate_chat(\n      client,\n      \"mistral-moderation-latest\",\n      [\n        [\n          %{role: \"user\", content: \"Hello\"},\n          %{role: \"assistant\", content: \"Hi there!\"}\n        ]\n      ]\n    )","ref":"MistralClient.API.Classifiers.html#moderate_chat/3-examples"},{"type":"module","title":"MistralClient.API.Embeddings","doc":"Embeddings API for the Mistral AI client.\n\nThis module provides functions for generating text embeddings using Mistral's\nembedding models. Embeddings are useful for semantic search, clustering,\nclassification, and other NLP tasks.","ref":"MistralClient.API.Embeddings.html"},{"type":"module","title":"Features - MistralClient.API.Embeddings","doc":"* Single and batch text embedding\n  * Multiple encoding formats\n  * Configurable output dimensions\n  * Token usage tracking\n  * Async processing support","ref":"MistralClient.API.Embeddings.html#module-features"},{"type":"module","title":"Usage - MistralClient.API.Embeddings","doc":"# Single text embedding\n    {:ok, response} = MistralClient.API.Embeddings.create(\"Hello, world!\")\n\n    # Batch embeddings\n    {:ok, response} = MistralClient.API.Embeddings.create([\n      \"First text\",\n      \"Second text\",\n      \"Third text\"\n    ])\n\n    # With custom options\n    {:ok, response} = MistralClient.API.Embeddings.create(\n      \"Hello, world!\",\n      %{model: \"mistral-embed\", dimensions: 1024}\n    )","ref":"MistralClient.API.Embeddings.html#module-usage"},{"type":"function","title":"MistralClient.API.Embeddings.cosine_similarity/2","doc":"Calculate cosine similarity between two embeddings.","ref":"MistralClient.API.Embeddings.html#cosine_similarity/2"},{"type":"function","title":"Parameters - MistralClient.API.Embeddings.cosine_similarity/2","doc":"* `embedding1` - First embedding vector\n  * `embedding2` - Second embedding vector","ref":"MistralClient.API.Embeddings.html#cosine_similarity/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Embeddings.cosine_similarity/2","doc":"similarity = MistralClient.API.Embeddings.cosine_similarity(\n      [0.1, 0.2, 0.3],\n      [0.2, 0.3, 0.4]\n    )","ref":"MistralClient.API.Embeddings.html#cosine_similarity/2-examples"},{"type":"function","title":"MistralClient.API.Embeddings.create/3","doc":"Create embeddings for the given inputs.","ref":"MistralClient.API.Embeddings.html#create/3"},{"type":"function","title":"Parameters - MistralClient.API.Embeddings.create/3","doc":"* `inputs` - Text string or list of strings to embed\n  * `options` - Optional parameters for the embedding\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Embeddings.html#create/3-parameters"},{"type":"function","title":"Options - MistralClient.API.Embeddings.create/3","doc":"* `:model` - Model to use (default: \"mistral-embed\")\n  * `:output_dimension` - Number of dimensions for the output embeddings\n  * `:output_dtype` - Data type for embeddings (\"float\", \"int8\", \"uint8\", \"binary\", \"ubinary\")","ref":"MistralClient.API.Embeddings.html#create/3-options"},{"type":"function","title":"Examples - MistralClient.API.Embeddings.create/3","doc":"# Single text\n    {:ok, response} = MistralClient.API.Embeddings.create(\"Hello, world!\")\n\n    # Multiple texts\n    {:ok, response} = MistralClient.API.Embeddings.create([\n      \"First document\",\n      \"Second document\"\n    ])\n\n    # With options\n    {:ok, response} = MistralClient.API.Embeddings.create(\n      \"Hello, world!\",\n      %{model: \"mistral-embed\", output_dimension: 512}\n    )","ref":"MistralClient.API.Embeddings.html#create/3-examples"},{"type":"function","title":"MistralClient.API.Embeddings.create_batch/3","doc":"Create embeddings for multiple text strings.","ref":"MistralClient.API.Embeddings.html#create_batch/3"},{"type":"function","title":"Parameters - MistralClient.API.Embeddings.create_batch/3","doc":"* `texts` - List of text strings to embed\n  * `options` - Optional parameters for the embedding\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Embeddings.html#create_batch/3-parameters"},{"type":"function","title":"Examples - MistralClient.API.Embeddings.create_batch/3","doc":"{:ok, response} = MistralClient.API.Embeddings.create_batch([\n      \"First document\",\n      \"Second document\",\n      \"Third document\"\n    ])","ref":"MistralClient.API.Embeddings.html#create_batch/3-examples"},{"type":"function","title":"MistralClient.API.Embeddings.create_single/3","doc":"Create embeddings for a single text string.","ref":"MistralClient.API.Embeddings.html#create_single/3"},{"type":"function","title":"Parameters - MistralClient.API.Embeddings.create_single/3","doc":"* `text` - Text string to embed\n  * `options` - Optional parameters for the embedding\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Embeddings.html#create_single/3-parameters"},{"type":"function","title":"Examples - MistralClient.API.Embeddings.create_single/3","doc":"{:ok, response} = MistralClient.API.Embeddings.create_single(\n      \"Hello, world!\",\n      %{dimensions: 1024}\n    )","ref":"MistralClient.API.Embeddings.html#create_single/3-examples"},{"type":"function","title":"MistralClient.API.Embeddings.euclidean_distance/2","doc":"Calculate euclidean distance between two embeddings.","ref":"MistralClient.API.Embeddings.html#euclidean_distance/2"},{"type":"function","title":"Parameters - MistralClient.API.Embeddings.euclidean_distance/2","doc":"* `embedding1` - First embedding vector\n  * `embedding2` - Second embedding vector","ref":"MistralClient.API.Embeddings.html#euclidean_distance/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Embeddings.euclidean_distance/2","doc":"distance = MistralClient.API.Embeddings.euclidean_distance(\n      [0.1, 0.2, 0.3],\n      [0.2, 0.3, 0.4]\n    )","ref":"MistralClient.API.Embeddings.html#euclidean_distance/2-examples"},{"type":"function","title":"MistralClient.API.Embeddings.extract_embeddings/1","doc":"Extract embeddings from a response.","ref":"MistralClient.API.Embeddings.html#extract_embeddings/1"},{"type":"function","title":"Parameters - MistralClient.API.Embeddings.extract_embeddings/1","doc":"* `response` - Embedding response from the API","ref":"MistralClient.API.Embeddings.html#extract_embeddings/1-parameters"},{"type":"function","title":"Examples - MistralClient.API.Embeddings.extract_embeddings/1","doc":"{:ok, response} = MistralClient.API.Embeddings.create(\"Hello\")\n    embeddings = MistralClient.API.Embeddings.extract_embeddings(response)\n    # Returns: [[0.1, 0.2, 0.3, ...], ...]","ref":"MistralClient.API.Embeddings.html#extract_embeddings/1-examples"},{"type":"function","title":"MistralClient.API.Embeddings.extract_first_embedding/1","doc":"Extract the first embedding from a response.\n\nUseful when you know you only embedded a single text.","ref":"MistralClient.API.Embeddings.html#extract_first_embedding/1"},{"type":"function","title":"Parameters - MistralClient.API.Embeddings.extract_first_embedding/1","doc":"* `response` - Embedding response from the API","ref":"MistralClient.API.Embeddings.html#extract_first_embedding/1-parameters"},{"type":"function","title":"Examples - MistralClient.API.Embeddings.extract_first_embedding/1","doc":"{:ok, response} = MistralClient.API.Embeddings.create(\"Hello\")\n    embedding = MistralClient.API.Embeddings.extract_first_embedding(response)\n    # Returns: [0.1, 0.2, 0.3, ...]","ref":"MistralClient.API.Embeddings.html#extract_first_embedding/1-examples"},{"type":"type","title":"MistralClient.API.Embeddings.inputs/0","doc":"","ref":"MistralClient.API.Embeddings.html#t:inputs/0"},{"type":"type","title":"MistralClient.API.Embeddings.options/0","doc":"","ref":"MistralClient.API.Embeddings.html#t:options/0"},{"type":"module","title":"MistralClient.API.FIM","doc":"FIM (Fill-in-the-Middle) API for code completion.\n\nThis module provides functions for FIM completion using Mistral's Codestral models.\nFIM is specifically designed for code completion tasks where you have a prefix\nand optionally a suffix, and need the model to fill in the middle.","ref":"MistralClient.API.FIM.html"},{"type":"module","title":"Supported Models - MistralClient.API.FIM","doc":"- `codestral-2405`\n- `codestral-latest`","ref":"MistralClient.API.FIM.html#module-supported-models"},{"type":"module","title":"Examples - MistralClient.API.FIM","doc":"# Basic FIM completion\n    {:ok, completion} = MistralClient.API.FIM.complete(\n      client,\n      \"codestral-2405\",\n      \"def fibonacci(n):\",\n      suffix: \"return result\"\n    )\n\n    # Streaming FIM completion\n    {:ok, stream} = MistralClient.API.FIM.stream(\n      client,\n      \"codestral-2405\",\n      \"def fibonacci(n):\",\n      suffix: \"return result\",\n      callback: fn chunk -> IO.puts(chunk.content) end\n    )","ref":"MistralClient.API.FIM.html#module-examples"},{"type":"function","title":"MistralClient.API.FIM.complete/2","doc":"Perform FIM completion using structured request.","ref":"MistralClient.API.FIM.html#complete/2"},{"type":"function","title":"Parameters - MistralClient.API.FIM.complete/2","doc":"* `client` - The MistralClient.Client instance\n  * `request` - FIMCompletionRequest struct","ref":"MistralClient.API.FIM.html#complete/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.FIM.complete/2","doc":"request = MistralClient.Models.FIMCompletionRequest.new(\n      \"codestral-2405\",\n      \"def fibonacci(n):\",\n      suffix: \"return result\",\n      max_tokens: 100\n    )\n\n    {:ok, completion} = MistralClient.API.FIM.complete(client, request)","ref":"MistralClient.API.FIM.html#complete/2-examples"},{"type":"function","title":"Returns - MistralClient.API.FIM.complete/2","doc":"* `{:ok, FIMCompletionResponse.t()}` - On success\n  * `{:error, term()}` - On failure","ref":"MistralClient.API.FIM.html#complete/2-returns"},{"type":"function","title":"MistralClient.API.FIM.complete/4","doc":"Perform FIM (Fill-in-the-Middle) completion.","ref":"MistralClient.API.FIM.html#complete/4"},{"type":"function","title":"Parameters - MistralClient.API.FIM.complete/4","doc":"* `client` - The MistralClient.Client instance\n  * `model` - Model ID (only codestral models supported)\n  * `prompt` - The text/code prefix to complete\n  * `opts` - Optional parameters","ref":"MistralClient.API.FIM.html#complete/4-parameters"},{"type":"function","title":"Options - MistralClient.API.FIM.complete/4","doc":"* `:suffix` - Optional text/code suffix for context\n  * `:temperature` - Sampling temperature (0.0-0.7 recommended)\n  * `:top_p` - Nucleus sampling parameter\n  * `:max_tokens` - Maximum tokens to generate\n  * `:min_tokens` - Minimum tokens to generate\n  * `:stop` - Stop sequences (string or list of strings)\n  * `:random_seed` - Seed for deterministic results","ref":"MistralClient.API.FIM.html#complete/4-options"},{"type":"function","title":"Examples - MistralClient.API.FIM.complete/4","doc":"# Basic completion\n    {:ok, completion} = MistralClient.API.FIM.complete(\n      client,\n      \"codestral-2405\",\n      \"def fibonacci(n):\"\n    )\n\n    # With suffix for better context\n    {:ok, completion} = MistralClient.API.FIM.complete(\n      client,\n      \"codestral-2405\",\n      \"def fibonacci(n):\",\n      suffix: \"return result\",\n      max_tokens: 100,\n      temperature: 0.2\n    )","ref":"MistralClient.API.FIM.html#complete/4-examples"},{"type":"function","title":"Returns - MistralClient.API.FIM.complete/4","doc":"* `{:ok, FIMCompletionResponse.t()}` - On success\n  * `{:error, term()}` - On failure","ref":"MistralClient.API.FIM.html#complete/4-returns"},{"type":"function","title":"MistralClient.API.FIM.stream/4","doc":"Stream FIM completion with real-time results.","ref":"MistralClient.API.FIM.html#stream/4"},{"type":"function","title":"Parameters - MistralClient.API.FIM.stream/4","doc":"* `client` - The MistralClient.Client instance\n  * `model` - Model ID (only codestral models supported)\n  * `prompt` - The text/code prefix to complete\n  * `opts` - Optional parameters","ref":"MistralClient.API.FIM.html#stream/4-parameters"},{"type":"function","title":"Options - MistralClient.API.FIM.stream/4","doc":"* `:suffix` - Optional text/code suffix for context\n  * `:temperature` - Sampling temperature (0.0-0.7 recommended)\n  * `:top_p` - Nucleus sampling parameter\n  * `:max_tokens` - Maximum tokens to generate\n  * `:min_tokens` - Minimum tokens to generate\n  * `:stop` - Stop sequences (string or list of strings)\n  * `:random_seed` - Seed for deterministic results\n  * `:callback` - Function to call with each chunk","ref":"MistralClient.API.FIM.html#stream/4-options"},{"type":"function","title":"Examples - MistralClient.API.FIM.stream/4","doc":"# Stream with callback\n    {:ok, stream} = MistralClient.API.FIM.stream(\n      client,\n      \"codestral-2405\",\n      \"def fibonacci(n):\",\n      suffix: \"return result\",\n      callback: fn chunk ->\n        if chunk.content do\n          IO.write(chunk.content)\n        end\n      end\n    )\n\n    # Collect all chunks\n    {:ok, chunks} = MistralClient.API.FIM.stream(\n      client,\n      \"codestral-2405\",\n      \"def fibonacci(n):\"\n    )","ref":"MistralClient.API.FIM.html#stream/4-examples"},{"type":"function","title":"Returns - MistralClient.API.FIM.stream/4","doc":"* `{:ok, list()}` - List of stream chunks when no callback provided\n  * `{:ok, :done}` - When callback is provided and streaming completes\n  * `{:error, term()}` - On failure","ref":"MistralClient.API.FIM.html#stream/4-returns"},{"type":"function","title":"MistralClient.API.FIM.stream_request/3","doc":"Stream FIM completion using structured request.","ref":"MistralClient.API.FIM.html#stream_request/3"},{"type":"function","title":"Parameters - MistralClient.API.FIM.stream_request/3","doc":"* `client` - The MistralClient.Client instance\n  * `request` - FIMCompletionRequest struct\n  * `callback` - Optional callback function for streaming","ref":"MistralClient.API.FIM.html#stream_request/3-parameters"},{"type":"function","title":"Examples - MistralClient.API.FIM.stream_request/3","doc":"request = MistralClient.Models.FIMCompletionRequest.new(\n      \"codestral-2405\",\n      \"def fibonacci(n):\",\n      suffix: \"return result\",\n      stream: true\n    )\n\n    {:ok, chunks} = MistralClient.API.FIM.stream_request(client, request)","ref":"MistralClient.API.FIM.html#stream_request/3-examples"},{"type":"function","title":"Returns - MistralClient.API.FIM.stream_request/3","doc":"* `{:ok, list() | :done}` - Stream result\n  * `{:error, term()}` - On failure","ref":"MistralClient.API.FIM.html#stream_request/3-returns"},{"type":"module","title":"MistralClient.API.Files","doc":"Files API for the Mistral AI client.\n\nThis module provides functions for managing files used with the Mistral API,\nincluding uploading files for fine-tuning, retrieving file information,\nand downloading files.","ref":"MistralClient.API.Files.html"},{"type":"module","title":"Features - MistralClient.API.Files","doc":"* File upload with multipart support\n  * File listing and retrieval\n  * File deletion\n  * File download\n  * Signed URL generation\n  * File metadata management","ref":"MistralClient.API.Files.html#module-features"},{"type":"module","title":"Usage - MistralClient.API.Files","doc":"# Upload a file\n    {:ok, file} = MistralClient.API.Files.upload(\"./training_data.jsonl\", \"fine-tune\")\n\n    # List all files\n    {:ok, files} = MistralClient.API.Files.list()\n\n    # Download a file\n    {:ok, content} = MistralClient.API.Files.download(\"file-abc123\")\n\n    # Delete a file\n    {:ok, _} = MistralClient.API.Files.delete(\"file-abc123\")","ref":"MistralClient.API.Files.html#module-usage"},{"type":"function","title":"MistralClient.API.Files.delete/2","doc":"Delete a file.","ref":"MistralClient.API.Files.html#delete/2"},{"type":"function","title":"Parameters - MistralClient.API.Files.delete/2","doc":"* `file_id` - The ID of the file to delete\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Files.html#delete/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Files.delete/2","doc":"{:ok, result} = MistralClient.API.Files.delete(\"file-abc123\")","ref":"MistralClient.API.Files.html#delete/2-examples"},{"type":"function","title":"MistralClient.API.Files.download/2","doc":"Download the content of a file.","ref":"MistralClient.API.Files.html#download/2"},{"type":"function","title":"Parameters - MistralClient.API.Files.download/2","doc":"* `file_id` - The ID of the file to download\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Files.html#download/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Files.download/2","doc":"{:ok, content} = MistralClient.API.Files.download(\"file-abc123\")","ref":"MistralClient.API.Files.html#download/2-examples"},{"type":"function","title":"MistralClient.API.Files.exists?/2","doc":"Check if a file exists.","ref":"MistralClient.API.Files.html#exists?/2"},{"type":"function","title":"Parameters - MistralClient.API.Files.exists?/2","doc":"* `file_id` - The ID of the file to check\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Files.html#exists?/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Files.exists?/2","doc":"true = MistralClient.API.Files.exists?(\"file-abc123\")\n    false = MistralClient.API.Files.exists?(\"non-existent-file\")","ref":"MistralClient.API.Files.html#exists?/2-examples"},{"type":"type","title":"MistralClient.API.Files.file_id/0","doc":"","ref":"MistralClient.API.Files.html#t:file_id/0"},{"type":"type","title":"MistralClient.API.Files.file_path/0","doc":"","ref":"MistralClient.API.Files.html#t:file_path/0"},{"type":"function","title":"MistralClient.API.Files.filter_by_purpose/2","doc":"Filter files by purpose.","ref":"MistralClient.API.Files.html#filter_by_purpose/2"},{"type":"function","title":"Parameters - MistralClient.API.Files.filter_by_purpose/2","doc":"* `files` - List of files to filter\n  * `purpose` - Purpose to filter by","ref":"MistralClient.API.Files.html#filter_by_purpose/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Files.filter_by_purpose/2","doc":"{:ok, all_files} = MistralClient.API.Files.list()\n    fine_tune_files = MistralClient.API.Files.filter_by_purpose(all_files, \"fine-tune\")","ref":"MistralClient.API.Files.html#filter_by_purpose/2-examples"},{"type":"function","title":"MistralClient.API.Files.get_signed_url/3","doc":"Get a signed URL for downloading a file.","ref":"MistralClient.API.Files.html#get_signed_url/3"},{"type":"function","title":"Parameters - MistralClient.API.Files.get_signed_url/3","doc":"* `file_id` - The ID of the file\n  * `options` - Keyword list of options:\n    * `:expiry` - Number of hours before the URL expires (default: 24)\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Files.html#get_signed_url/3-parameters"},{"type":"function","title":"Examples - MistralClient.API.Files.get_signed_url/3","doc":"# Get signed URL with default expiry (24 hours)\n    {:ok, signed_url_response} = MistralClient.API.Files.get_signed_url(\"file-abc123\")\n\n    # Get signed URL with custom expiry (48 hours)\n    {:ok, signed_url_response} = MistralClient.API.Files.get_signed_url(\n      \"file-abc123\",\n      expiry: 48\n    )","ref":"MistralClient.API.Files.html#get_signed_url/3-examples"},{"type":"function","title":"MistralClient.API.Files.list/2","doc":"List all uploaded files with pagination and filtering support.","ref":"MistralClient.API.Files.html#list/2"},{"type":"function","title":"Parameters - MistralClient.API.Files.list/2","doc":"* `options` - Keyword list of options:\n    * `:page` - Page number (default: 0)\n    * `:page_size` - Number of items per page (default: 100)\n    * `:purpose` - Filter by purpose (e.g., \"fine-tune\", \"assistants\")\n    * `:sample_type` - Filter by sample type\n    * `:source` - Filter by source\n    * `:search` - Search term to filter files\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Files.html#list/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Files.list/2","doc":"# List all files\n    {:ok, files} = MistralClient.API.Files.list()\n\n    # List with pagination\n    {:ok, files} = MistralClient.API.Files.list(page: 1, page_size: 50)\n\n    # Filter by purpose\n    {:ok, files} = MistralClient.API.Files.list(purpose: \"fine-tune\")\n\n    # Search files\n    {:ok, files} = MistralClient.API.Files.list(search: \"training\")","ref":"MistralClient.API.Files.html#list/2-examples"},{"type":"type","title":"MistralClient.API.Files.purpose/0","doc":"","ref":"MistralClient.API.Files.html#t:purpose/0"},{"type":"function","title":"MistralClient.API.Files.retrieve/2","doc":"Retrieve information about a specific file.","ref":"MistralClient.API.Files.html#retrieve/2"},{"type":"function","title":"Parameters - MistralClient.API.Files.retrieve/2","doc":"* `file_id` - The ID of the file to retrieve\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Files.html#retrieve/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Files.retrieve/2","doc":"{:ok, file} = MistralClient.API.Files.retrieve(\"file-abc123\")","ref":"MistralClient.API.Files.html#retrieve/2-examples"},{"type":"function","title":"MistralClient.API.Files.total_size/1","doc":"Get the total size of all files.","ref":"MistralClient.API.Files.html#total_size/1"},{"type":"function","title":"Parameters - MistralClient.API.Files.total_size/1","doc":"* `files` - List of files","ref":"MistralClient.API.Files.html#total_size/1-parameters"},{"type":"function","title":"Examples - MistralClient.API.Files.total_size/1","doc":"{:ok, files} = MistralClient.API.Files.list()\n    total_bytes = MistralClient.API.Files.total_size(files)","ref":"MistralClient.API.Files.html#total_size/1-examples"},{"type":"function","title":"MistralClient.API.Files.upload/4","doc":"Upload a file with support for progress tracking and validation.","ref":"MistralClient.API.Files.html#upload/4"},{"type":"function","title":"Parameters - MistralClient.API.Files.upload/4","doc":"* `file_path` - Path to the file to upload\n  * `purpose` - Purpose of the file (e.g., \"fine-tune\", \"assistants\", \"batch\")\n  * `options` - Keyword list of options:\n    * `:progress_callback` - Function to call with upload progress (0.0 to 1.0)\n    * `:filename` - Custom filename to use (defaults to basename of file_path)\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Files.html#upload/4-parameters"},{"type":"function","title":"Examples - MistralClient.API.Files.upload/4","doc":"# Simple upload\n    {:ok, file} = MistralClient.API.Files.upload(\"./training_data.jsonl\", \"fine-tune\")\n\n    # Upload with custom filename\n    {:ok, file} = MistralClient.API.Files.upload(\n      \"./data.jsonl\",\n      \"fine-tune\",\n      filename: \"custom_training_data.jsonl\"\n    )\n\n    # Upload with progress tracking\n    progress_fn = fn progress -> IO.puts(\"Upload progress: #{trunc(progress * 100)}%\") end\n    {:ok, file} = MistralClient.API.Files.upload(\n      \"./large_file.jsonl\",\n      \"fine-tune\",\n      progress_callback: progress_fn\n    )","ref":"MistralClient.API.Files.html#upload/4-examples"},{"type":"module","title":"MistralClient.API.FineTuning","doc":"Fine-tuning API for creating and managing fine-tuning jobs.\n\nThis module provides functions to:\n- Create fine-tuning jobs\n- List fine-tuning jobs with filtering\n- Get fine-tuning job details\n- Start, cancel fine-tuning jobs\n- Archive/unarchive fine-tuned models\n- Update fine-tuned models","ref":"MistralClient.API.FineTuning.html"},{"type":"module","title":"Examples - MistralClient.API.FineTuning","doc":"# Create a fine-tuning job\n    config = MistralClient.Config.new(api_key: \"your-api-key\")\n\n    hyperparameters = %MistralClient.Models.CompletionTrainingParameters{\n      learning_rate: 0.0001,\n      training_steps: 1000\n    }\n\n    request = %MistralClient.Models.FineTuningJobRequest{\n      model: \"open-mistral-7b\",\n      hyperparameters: hyperparameters,\n      training_files: [%MistralClient.Models.TrainingFile{file_id: \"file-123\"}]\n    }\n\n    {:ok, job} = MistralClient.API.FineTuning.create_job(config, request)\n\n    # List jobs with filtering\n    {:ok, jobs} = MistralClient.API.FineTuning.list_jobs(config, %{\n      status: \"RUNNING\",\n      model: \"open-mistral-7b\"\n    })\n\n    # Get job details\n    {:ok, job} = MistralClient.API.FineTuning.get_job(config, \"job-123\")\n\n    # Start a job\n    {:ok, job} = MistralClient.API.FineTuning.start_job(config, \"job-123\")\n\n    # Cancel a job\n    {:ok, job} = MistralClient.API.FineTuning.cancel_job(config, \"job-123\")","ref":"MistralClient.API.FineTuning.html#module-examples"},{"type":"function","title":"MistralClient.API.FineTuning.archive_model/2","doc":"Archives a fine-tuned model.","ref":"MistralClient.API.FineTuning.html#archive_model/2"},{"type":"function","title":"Parameters - MistralClient.API.FineTuning.archive_model/2","doc":"- `config` - Client configuration\n- `model_id` - The ID of the model to archive","ref":"MistralClient.API.FineTuning.html#archive_model/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.FineTuning.archive_model/2","doc":"{:ok, model} = MistralClient.API.FineTuning.archive_model(config, \"ft:open-mistral-7b:my-model:xxx\")","ref":"MistralClient.API.FineTuning.html#archive_model/2-examples"},{"type":"function","title":"MistralClient.API.FineTuning.cancel_job/2","doc":"Cancels a fine-tuning job.","ref":"MistralClient.API.FineTuning.html#cancel_job/2"},{"type":"function","title":"Parameters - MistralClient.API.FineTuning.cancel_job/2","doc":"- `config` - Client configuration\n- `job_id` - The ID of the job to cancel","ref":"MistralClient.API.FineTuning.html#cancel_job/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.FineTuning.cancel_job/2","doc":"{:ok, job} = MistralClient.API.FineTuning.cancel_job(config, \"job-123\")","ref":"MistralClient.API.FineTuning.html#cancel_job/2-examples"},{"type":"function","title":"MistralClient.API.FineTuning.create_job/2","doc":"Creates a new fine-tuning job.","ref":"MistralClient.API.FineTuning.html#create_job/2"},{"type":"function","title":"Parameters - MistralClient.API.FineTuning.create_job/2","doc":"- `config` - Client configuration\n- `request` - Fine-tuning job request parameters","ref":"MistralClient.API.FineTuning.html#create_job/2-parameters"},{"type":"function","title":"Request Parameters - MistralClient.API.FineTuning.create_job/2","doc":"- `model` (required) - The name of the model to fine-tune\n- `hyperparameters` (required) - Training hyperparameters\n- `training_files` - List of training file IDs\n- `validation_files` - List of validation file IDs\n- `suffix` - String to add to fine-tuned model name\n- `integrations` - List of integrations (e.g., Weights & Biases)\n- `auto_start` - Whether to automatically start the job\n- `invalid_sample_skip_percentage` - Percentage of invalid samples to skip\n- `job_type` - Type of fine-tuning job\n- `repositories` - List of GitHub repositories\n- `classifier_targets` - Classifier targets (for classifier jobs)","ref":"MistralClient.API.FineTuning.html#create_job/2-request-parameters"},{"type":"function","title":"Examples - MistralClient.API.FineTuning.create_job/2","doc":"hyperparameters = %CompletionTrainingParameters{\n      learning_rate: 0.0001,\n      training_steps: 1000,\n      weight_decay: 0.01\n    }\n\n    request = %FineTuningJobRequest{\n      model: \"open-mistral-7b\",\n      hyperparameters: hyperparameters,\n      training_files: [%TrainingFile{file_id: \"file-123\"}],\n      suffix: \"my-model\"\n    }\n\n    {:ok, job} = MistralClient.API.FineTuning.create_job(config, request)","ref":"MistralClient.API.FineTuning.html#create_job/2-examples"},{"type":"type","title":"MistralClient.API.FineTuning.fine_tuneable_model_type/0","doc":"","ref":"MistralClient.API.FineTuning.html#t:fine_tuneable_model_type/0"},{"type":"function","title":"MistralClient.API.FineTuning.get_job/2","doc":"Gets details of a specific fine-tuning job.","ref":"MistralClient.API.FineTuning.html#get_job/2"},{"type":"function","title":"Parameters - MistralClient.API.FineTuning.get_job/2","doc":"- `config` - Client configuration\n- `job_id` - The ID of the job to retrieve","ref":"MistralClient.API.FineTuning.html#get_job/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.FineTuning.get_job/2","doc":"{:ok, job} = MistralClient.API.FineTuning.get_job(config, \"job-123\")","ref":"MistralClient.API.FineTuning.html#get_job/2-examples"},{"type":"type","title":"MistralClient.API.FineTuning.job_status/0","doc":"","ref":"MistralClient.API.FineTuning.html#t:job_status/0"},{"type":"function","title":"MistralClient.API.FineTuning.list_jobs/2","doc":"Lists fine-tuning jobs with optional filtering.","ref":"MistralClient.API.FineTuning.html#list_jobs/2"},{"type":"function","title":"Parameters - MistralClient.API.FineTuning.list_jobs/2","doc":"- `config` - Client configuration\n- `options` - Filtering and pagination options","ref":"MistralClient.API.FineTuning.html#list_jobs/2-parameters"},{"type":"function","title":"Options - MistralClient.API.FineTuning.list_jobs/2","doc":"- `page` - Page number (default: 0)\n- `page_size` - Number of items per page (default: 100)\n- `model` - Filter by model name\n- `created_after` - Filter by creation date (DateTime)\n- `created_before` - Filter by creation date (DateTime)\n- `created_by_me` - Show only jobs created by the caller (default: false)\n- `status` - Filter by job status\n- `wandb_project` - Filter by Weights & Biases project\n- `wandb_name` - Filter by Weights & Biases run name\n- `suffix` - Filter by model suffix","ref":"MistralClient.API.FineTuning.html#list_jobs/2-options"},{"type":"function","title":"Examples - MistralClient.API.FineTuning.list_jobs/2","doc":"# List all jobs\n    {:ok, jobs} = MistralClient.API.FineTuning.list_jobs(config)\n\n    # List running jobs for a specific model\n    {:ok, jobs} = MistralClient.API.FineTuning.list_jobs(config, %{\n      status: :running,\n      model: \"open-mistral-7b\",\n      page_size: 50\n    })","ref":"MistralClient.API.FineTuning.html#list_jobs/2-examples"},{"type":"function","title":"MistralClient.API.FineTuning.start_job/2","doc":"Starts a validated fine-tuning job.","ref":"MistralClient.API.FineTuning.html#start_job/2"},{"type":"function","title":"Parameters - MistralClient.API.FineTuning.start_job/2","doc":"- `config` - Client configuration\n- `job_id` - The ID of the job to start","ref":"MistralClient.API.FineTuning.html#start_job/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.FineTuning.start_job/2","doc":"{:ok, job} = MistralClient.API.FineTuning.start_job(config, \"job-123\")","ref":"MistralClient.API.FineTuning.html#start_job/2-examples"},{"type":"function","title":"MistralClient.API.FineTuning.unarchive_model/2","doc":"Unarchives a fine-tuned model.","ref":"MistralClient.API.FineTuning.html#unarchive_model/2"},{"type":"function","title":"Parameters - MistralClient.API.FineTuning.unarchive_model/2","doc":"- `config` - Client configuration\n- `model_id` - The ID of the model to unarchive","ref":"MistralClient.API.FineTuning.html#unarchive_model/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.FineTuning.unarchive_model/2","doc":"{:ok, model} = MistralClient.API.FineTuning.unarchive_model(config, \"ft:open-mistral-7b:my-model:xxx\")","ref":"MistralClient.API.FineTuning.html#unarchive_model/2-examples"},{"type":"function","title":"MistralClient.API.FineTuning.update_model/3","doc":"Updates a fine-tuned model.","ref":"MistralClient.API.FineTuning.html#update_model/3"},{"type":"function","title":"Parameters - MistralClient.API.FineTuning.update_model/3","doc":"- `config` - Client configuration\n- `model_id` - The ID of the model to update\n- `updates` - Map of fields to update","ref":"MistralClient.API.FineTuning.html#update_model/3-parameters"},{"type":"function","title":"Examples - MistralClient.API.FineTuning.update_model/3","doc":"{:ok, model} = MistralClient.API.FineTuning.update_model(config, \"ft:open-mistral-7b:my-model:xxx\", %{\n      name: \"Updated Model Name\"\n    })","ref":"MistralClient.API.FineTuning.html#update_model/3-examples"},{"type":"module","title":"MistralClient.API.Jobs","doc":"Jobs API for managing fine-tuning jobs.\n\nThis module provides a dedicated interface for fine-tuning job operations,\nmaintaining API parity with the Python SDK's `mistral.fine_tuning.jobs` interface.","ref":"MistralClient.API.Jobs.html"},{"type":"module","title":"Examples - MistralClient.API.Jobs","doc":"# List fine-tuning jobs\n    {:ok, jobs} = MistralClient.API.Jobs.list()\n\n    # Create a fine-tuning job\n    request = %MistralClient.Models.FineTuningJobRequest{\n      model: \"open-mistral-7b\",\n      hyperparameters: %MistralClient.Models.CompletionTrainingParameters{\n        learning_rate: 0.0001\n      }\n    }\n    {:ok, job} = MistralClient.API.Jobs.create(request)\n\n    # Get job details\n    {:ok, job} = MistralClient.API.Jobs.get(\"job-123\")\n\n    # Start a job\n    {:ok, job} = MistralClient.API.Jobs.start(\"job-123\")\n\n    # Cancel a job\n    {:ok, job} = MistralClient.API.Jobs.cancel(\"job-123\")","ref":"MistralClient.API.Jobs.html#module-examples"},{"type":"function","title":"MistralClient.API.Jobs.cancel/1","doc":"Request the cancellation of a fine tuning job.","ref":"MistralClient.API.Jobs.html#cancel/1"},{"type":"function","title":"Parameters - MistralClient.API.Jobs.cancel/1","doc":"- `config` - Client configuration (optional, uses default if not provided)\n- `job_id` - The ID of the job to cancel","ref":"MistralClient.API.Jobs.html#cancel/1-parameters"},{"type":"function","title":"Examples - MistralClient.API.Jobs.cancel/1","doc":"{:ok, job} = MistralClient.API.Jobs.cancel(\"job-123\")\n\n    # With custom config\n    config = MistralClient.Config.new(api_key: \"custom-key\")\n    {:ok, job} = MistralClient.API.Jobs.cancel(config, \"job-123\")","ref":"MistralClient.API.Jobs.html#cancel/1-examples"},{"type":"function","title":"MistralClient.API.Jobs.cancel/2","doc":"","ref":"MistralClient.API.Jobs.html#cancel/2"},{"type":"function","title":"MistralClient.API.Jobs.create/1","doc":"Create a new fine-tuning job, it will be queued for processing.","ref":"MistralClient.API.Jobs.html#create/1"},{"type":"function","title":"Parameters - MistralClient.API.Jobs.create/1","doc":"- `config` - Client configuration (optional, uses default if not provided)\n- `request` - Fine-tuning job request parameters","ref":"MistralClient.API.Jobs.html#create/1-parameters"},{"type":"function","title":"Request Parameters - MistralClient.API.Jobs.create/1","doc":"- `model` (required) - The name of the model to fine-tune\n- `hyperparameters` (required) - Training hyperparameters\n- `training_files` - List of training file IDs\n- `validation_files` - List of validation file IDs\n- `suffix` - String to add to fine-tuned model name\n- `integrations` - List of integrations (e.g., Weights & Biases)\n- `auto_start` - Whether to automatically start the job\n- `invalid_sample_skip_percentage` - Percentage of invalid samples to skip\n- `job_type` - Type of fine-tuning job\n- `repositories` - List of GitHub repositories\n- `classifier_targets` - Classifier targets (for classifier jobs)","ref":"MistralClient.API.Jobs.html#create/1-request-parameters"},{"type":"function","title":"Examples - MistralClient.API.Jobs.create/1","doc":"request = %MistralClient.Models.FineTuningJobRequest{\n      model: \"open-mistral-7b\",\n      hyperparameters: %MistralClient.Models.CompletionTrainingParameters{\n        learning_rate: 0.0001,\n        training_steps: 1000\n      }\n    }\n\n    {:ok, job} = MistralClient.API.Jobs.create(request)\n\n    # With custom config\n    config = MistralClient.Config.new(api_key: \"custom-key\")\n    {:ok, job} = MistralClient.API.Jobs.create(config, request)","ref":"MistralClient.API.Jobs.html#create/1-examples"},{"type":"function","title":"MistralClient.API.Jobs.create/2","doc":"","ref":"MistralClient.API.Jobs.html#create/2"},{"type":"function","title":"MistralClient.API.Jobs.get/1","doc":"Get a fine-tuned job details by its UUID.","ref":"MistralClient.API.Jobs.html#get/1"},{"type":"function","title":"Parameters - MistralClient.API.Jobs.get/1","doc":"- `config` - Client configuration (optional, uses default if not provided)\n- `job_id` - The ID of the job to retrieve","ref":"MistralClient.API.Jobs.html#get/1-parameters"},{"type":"function","title":"Examples - MistralClient.API.Jobs.get/1","doc":"{:ok, job} = MistralClient.API.Jobs.get(\"job-123\")\n\n    # With custom config\n    config = MistralClient.Config.new(api_key: \"custom-key\")\n    {:ok, job} = MistralClient.API.Jobs.get(config, \"job-123\")","ref":"MistralClient.API.Jobs.html#get/1-examples"},{"type":"function","title":"MistralClient.API.Jobs.get/2","doc":"","ref":"MistralClient.API.Jobs.html#get/2"},{"type":"type","title":"MistralClient.API.Jobs.job_status/0","doc":"","ref":"MistralClient.API.Jobs.html#t:job_status/0"},{"type":"function","title":"MistralClient.API.Jobs.list/2","doc":"Get a list of fine-tuning jobs for your organization and user.","ref":"MistralClient.API.Jobs.html#list/2"},{"type":"function","title":"Parameters - MistralClient.API.Jobs.list/2","doc":"- `config` - Client configuration (optional, uses default if not provided)\n- `options` - Filtering and pagination options","ref":"MistralClient.API.Jobs.html#list/2-parameters"},{"type":"function","title":"Options - MistralClient.API.Jobs.list/2","doc":"- `page` - The page number of the results to be returned\n- `page_size` - The number of items to return per page\n- `model` - The model name used for fine-tuning to filter on\n- `created_after` - Filter jobs created after this date\n- `created_before` - Filter jobs created before this date\n- `created_by_me` - When true, only return results for jobs created by the API caller\n- `status` - The current job state to filter on\n- `wandb_project` - The Weights and Biases project to filter on\n- `wandb_name` - The Weight and Biases run name to filter on\n- `suffix` - The model suffix to filter on","ref":"MistralClient.API.Jobs.html#list/2-options"},{"type":"function","title":"Examples - MistralClient.API.Jobs.list/2","doc":"# List all jobs\n    {:ok, jobs} = MistralClient.API.Jobs.list()\n\n    # List with filtering\n    {:ok, jobs} = MistralClient.API.Jobs.list(%{\n      status: :running,\n      model: \"open-mistral-7b\",\n      page_size: 10\n    })\n\n    # With custom config\n    config = MistralClient.Config.new(api_key: \"custom-key\")\n    {:ok, jobs} = MistralClient.API.Jobs.list(config, %{created_by_me: true})","ref":"MistralClient.API.Jobs.html#list/2-examples"},{"type":"type","title":"MistralClient.API.Jobs.list_options/0","doc":"","ref":"MistralClient.API.Jobs.html#t:list_options/0"},{"type":"function","title":"MistralClient.API.Jobs.start/1","doc":"Request the start of a validated fine tuning job.","ref":"MistralClient.API.Jobs.html#start/1"},{"type":"function","title":"Parameters - MistralClient.API.Jobs.start/1","doc":"- `config` - Client configuration (optional, uses default if not provided)\n- `job_id` - The ID of the job to start","ref":"MistralClient.API.Jobs.html#start/1-parameters"},{"type":"function","title":"Examples - MistralClient.API.Jobs.start/1","doc":"{:ok, job} = MistralClient.API.Jobs.start(\"job-123\")\n\n    # With custom config\n    config = MistralClient.Config.new(api_key: \"custom-key\")\n    {:ok, job} = MistralClient.API.Jobs.start(config, \"job-123\")","ref":"MistralClient.API.Jobs.html#start/1-examples"},{"type":"function","title":"MistralClient.API.Jobs.start/2","doc":"","ref":"MistralClient.API.Jobs.html#start/2"},{"type":"module","title":"MistralClient.API.Models","doc":"Models API for the Mistral AI client.\n\nThis module provides functions for managing and retrieving information about\navailable models, including listing models, retrieving model details, and\nmanaging fine-tuned models.","ref":"MistralClient.API.Models.html"},{"type":"module","title":"Features - MistralClient.API.Models","doc":"* List available models\n  * Retrieve model details\n  * Delete fine-tuned models\n  * Update model metadata\n  * Archive and unarchive models\n  * Model permission management","ref":"MistralClient.API.Models.html#module-features"},{"type":"module","title":"Usage - MistralClient.API.Models","doc":"# List all available models\n    {:ok, models} = MistralClient.API.Models.list()\n\n    # Get details for a specific model\n    {:ok, model} = MistralClient.API.Models.retrieve(\"mistral-large-latest\")\n\n    # Delete a fine-tuned model\n    {:ok, _} = MistralClient.API.Models.delete(\"ft:mistral-small:my-org:custom-suffix\")","ref":"MistralClient.API.Models.html#module-usage"},{"type":"function","title":"MistralClient.API.Models.archive/2","doc":"Archive a model.\n\nArchived models are not available for inference but are still accessible\nfor management operations.","ref":"MistralClient.API.Models.html#archive/2"},{"type":"function","title":"Parameters - MistralClient.API.Models.archive/2","doc":"* `model_id` - The ID of the model to archive\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Models.html#archive/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Models.archive/2","doc":"{:ok, model} = MistralClient.API.Models.archive(\"ft:mistral-small:my-org:custom-suffix\")","ref":"MistralClient.API.Models.html#archive/2-examples"},{"type":"function","title":"MistralClient.API.Models.delete/2","doc":"Delete a fine-tuned model.\n\nYou can only delete fine-tuned models that you own. Base models cannot be deleted.","ref":"MistralClient.API.Models.html#delete/2"},{"type":"function","title":"Parameters - MistralClient.API.Models.delete/2","doc":"* `model_id` - The ID of the fine-tuned model to delete\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Models.html#delete/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Models.delete/2","doc":"{:ok, result} = MistralClient.API.Models.delete(\"ft:mistral-small:my-org:custom-suffix\")","ref":"MistralClient.API.Models.html#delete/2-examples"},{"type":"function","title":"MistralClient.API.Models.exists?/2","doc":"Check if a model exists and is available.","ref":"MistralClient.API.Models.html#exists?/2"},{"type":"function","title":"Parameters - MistralClient.API.Models.exists?/2","doc":"* `model_id` - The ID of the model to check\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Models.html#exists?/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Models.exists?/2","doc":"true = MistralClient.API.Models.exists?(\"mistral-large-latest\")\n    false = MistralClient.API.Models.exists?(\"non-existent-model\")","ref":"MistralClient.API.Models.html#exists?/2-examples"},{"type":"function","title":"MistralClient.API.Models.filter_models/2","doc":"Filter models by type.","ref":"MistralClient.API.Models.html#filter_models/2"},{"type":"function","title":"Parameters - MistralClient.API.Models.filter_models/2","doc":"* `models` - List of models to filter\n  * `filter_type` - Type of filter to apply","ref":"MistralClient.API.Models.html#filter_models/2-parameters"},{"type":"function","title":"Filter Types - MistralClient.API.Models.filter_models/2","doc":"* `:base` - Base models owned by Mistral AI\n  * `:fine_tuned` - Fine-tuned models\n  * `:owned` - Models owned by the current user/organization","ref":"MistralClient.API.Models.html#filter_models/2-filter-types"},{"type":"function","title":"Examples - MistralClient.API.Models.filter_models/2","doc":"{:ok, all_models} = MistralClient.API.Models.list()\n    base_models = MistralClient.API.Models.filter_models(all_models, :base)\n    fine_tuned = MistralClient.API.Models.filter_models(all_models, :fine_tuned)","ref":"MistralClient.API.Models.html#filter_models/2-examples"},{"type":"function","title":"MistralClient.API.Models.list/1","doc":"List all available models.\n\nReturns a list of models that are available for use, including both\nbase models and fine-tuned models.","ref":"MistralClient.API.Models.html#list/1"},{"type":"function","title":"Parameters - MistralClient.API.Models.list/1","doc":"* `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Models.html#list/1-parameters"},{"type":"function","title":"Examples - MistralClient.API.Models.list/1","doc":"{:ok, models} = MistralClient.API.Models.list()\n\n    # Filter for specific model types\n    {:ok, models} = MistralClient.API.Models.list()\n    base_models = Enum.filter(models, &(&1.owned_by == \"mistralai\"))","ref":"MistralClient.API.Models.html#list/1-examples"},{"type":"type","title":"MistralClient.API.Models.model_id/0","doc":"","ref":"MistralClient.API.Models.html#t:model_id/0"},{"type":"function","title":"MistralClient.API.Models.retrieve/2","doc":"Retrieve details for a specific model.","ref":"MistralClient.API.Models.html#retrieve/2"},{"type":"function","title":"Parameters - MistralClient.API.Models.retrieve/2","doc":"* `model_id` - The ID of the model to retrieve\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Models.html#retrieve/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Models.retrieve/2","doc":"{:ok, model} = MistralClient.API.Models.retrieve(\"mistral-large-latest\")\n    {:ok, model} = MistralClient.API.Models.retrieve(\"ft:mistral-small:my-org:custom-suffix\")","ref":"MistralClient.API.Models.html#retrieve/2-examples"},{"type":"function","title":"MistralClient.API.Models.unarchive/2","doc":"Unarchive a model.\n\nMakes an archived model available for inference again.","ref":"MistralClient.API.Models.html#unarchive/2"},{"type":"function","title":"Parameters - MistralClient.API.Models.unarchive/2","doc":"* `model_id` - The ID of the model to unarchive\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Models.html#unarchive/2-parameters"},{"type":"function","title":"Examples - MistralClient.API.Models.unarchive/2","doc":"{:ok, model} = MistralClient.API.Models.unarchive(\"ft:mistral-small:my-org:custom-suffix\")","ref":"MistralClient.API.Models.html#unarchive/2-examples"},{"type":"function","title":"MistralClient.API.Models.update/3","doc":"Update metadata for a fine-tuned model.","ref":"MistralClient.API.Models.html#update/3"},{"type":"function","title":"Parameters - MistralClient.API.Models.update/3","doc":"* `model_id` - The ID of the model to update\n  * `updates` - Map of fields to update\n  * `client` - HTTP client (optional, uses default if not provided)","ref":"MistralClient.API.Models.html#update/3-parameters"},{"type":"function","title":"Update Options - MistralClient.API.Models.update/3","doc":"* `:name` - New name for the model\n  * `:description` - New description for the model\n  * `:metadata` - Additional metadata","ref":"MistralClient.API.Models.html#update/3-update-options"},{"type":"function","title":"Examples - MistralClient.API.Models.update/3","doc":"{:ok, model} = MistralClient.API.Models.update(\"ft:mistral-small:my-org:custom-suffix\", %{\n      name: \"My Custom Model\",\n      description: \"A model fine-tuned for my specific use case\"\n    })","ref":"MistralClient.API.Models.html#update/3-examples"},{"type":"type","title":"MistralClient.API.Models.update_options/0","doc":"","ref":"MistralClient.API.Models.html#t:update_options/0"},{"type":"module","title":"MistralClient.API.OCR","doc":"OCR (Optical Character Recognition) API operations.\n\nThis module provides functionality for processing documents and images\nusing Mistral's OCR capabilities, extracting text and structured data\nfrom various document formats.","ref":"MistralClient.API.OCR.html"},{"type":"module","title":"Features - MistralClient.API.OCR","doc":"* Document URL processing\n  * Image URL processing\n  * Page-specific processing\n  * Image extraction with base64 encoding\n  * Structured annotation formats\n  * Bounding box annotations","ref":"MistralClient.API.OCR.html#module-features"},{"type":"module","title":"Usage - MistralClient.API.OCR","doc":"# Process a document URL\n    document = MistralClient.Models.DocumentURLChunk.new(\"https://example.com/document.pdf\")\n    request = MistralClient.Models.OCRRequest.new(\"pixtral-12b-2024-12-19\", document)\n\n    {:ok, response} = MistralClient.API.OCR.process(config, request)\n\n    # Process an image URL\n    image_url = MistralClient.Models.ImageURLChunkImageURL.new(\"data:image/png;base64,...\")\n    image_chunk = MistralClient.Models.ImageURLChunk.new(image_url)\n    request = MistralClient.Models.OCRRequest.new(\"pixtral-12b-2024-12-19\", image_chunk)\n\n    {:ok, response} = MistralClient.API.OCR.process(config, request)\n\n    # Process specific pages with options\n    document = MistralClient.Models.DocumentURLChunk.new(\"https://example.com/document.pdf\")\n    request = MistralClient.Models.OCRRequest.new(\"pixtral-12b-2024-12-19\", document,\n      pages: [0, 1, 2],\n      include_image_base64: true,\n      image_limit: 10\n    )\n\n    {:ok, response} = MistralClient.API.OCR.process(config, request)","ref":"MistralClient.API.OCR.html#module-usage"},{"type":"function","title":"MistralClient.API.OCR.process/2","doc":"Process a document or image using OCR.","ref":"MistralClient.API.OCR.html#process/2"},{"type":"function","title":"Parameters - MistralClient.API.OCR.process/2","doc":"* `config` - Client configuration\n  * `request` - OCR request with model, document, and options","ref":"MistralClient.API.OCR.html#process/2-parameters"},{"type":"function","title":"Options - MistralClient.API.OCR.process/2","doc":"* `:id` - Request identifier\n  * `:pages` - List of specific page numbers to process (0-indexed)\n  * `:include_image_base64` - Include base64-encoded images in response\n  * `:image_limit` - Maximum number of images to extract\n  * `:image_min_size` - Minimum size (height and width) for image extraction\n  * `:bbox_annotation_format` - Structured output format for bounding boxes\n  * `:document_annotation_format` - Structured output format for the document","ref":"MistralClient.API.OCR.html#process/2-options"},{"type":"function","title":"Returns - MistralClient.API.OCR.process/2","doc":"* `{:ok, OCRResponse.t()}` - Successful OCR processing\n  * `{:error, term()}` - Error occurred during processing","ref":"MistralClient.API.OCR.html#process/2-returns"},{"type":"function","title":"Examples - MistralClient.API.OCR.process/2","doc":"# Basic document processing\n    document = MistralClient.Models.DocumentURLChunk.new(\"https://example.com/doc.pdf\")\n    request = MistralClient.Models.OCRRequest.new(\"pixtral-12b-2024-12-19\", document)\n    {:ok, response} = MistralClient.API.OCR.process(config, request)\n\n    # Image processing with options\n    image_url = MistralClient.Models.ImageURLChunkImageURL.new(\"data:image/png;base64,...\")\n    image_chunk = MistralClient.Models.ImageURLChunk.new(image_url)\n    request = MistralClient.Models.OCRRequest.new(\"pixtral-12b-2024-12-19\", image_chunk,\n      include_image_base64: true,\n      image_limit: 5\n    )\n    {:ok, response} = MistralClient.API.OCR.process(config, request)","ref":"MistralClient.API.OCR.html#process/2-examples"},{"type":"function","title":"MistralClient.API.OCR.process/4","doc":"Process a document or image using OCR with direct parameters.\n\nThis is a convenience function that creates an OCRRequest internally.","ref":"MistralClient.API.OCR.html#process/4"},{"type":"function","title":"Parameters - MistralClient.API.OCR.process/4","doc":"* `config` - Client configuration\n  * `model` - Model to use for OCR processing\n  * `document` - Document or image to process\n  * `opts` - Additional options (see `process/2` for details)","ref":"MistralClient.API.OCR.html#process/4-parameters"},{"type":"function","title":"Examples - MistralClient.API.OCR.process/4","doc":"# Process document URL\n    document = MistralClient.Models.DocumentURLChunk.new(\"https://example.com/doc.pdf\")\n    {:ok, response} = MistralClient.API.OCR.process(config, \"pixtral-12b-2024-12-19\", document)\n\n    # Process with options\n    {:ok, response} = MistralClient.API.OCR.process(\n      config,\n      \"pixtral-12b-2024-12-19\",\n      document,\n      pages: [0, 1],\n      include_image_base64: true\n    )","ref":"MistralClient.API.OCR.html#process/4-examples"},{"type":"behaviour","title":"MistralClient.Behaviours.HttpClient","doc":"Behaviour for HTTP client implementations.\n\nThis behaviour defines the contract for HTTP clients used by the Mistral SDK.\nIt allows for easy mocking in tests while maintaining a consistent interface.","ref":"MistralClient.Behaviours.HttpClient.html"},{"type":"type","title":"MistralClient.Behaviours.HttpClient.body/0","doc":"","ref":"MistralClient.Behaviours.HttpClient.html#t:body/0"},{"type":"type","title":"MistralClient.Behaviours.HttpClient.headers/0","doc":"","ref":"MistralClient.Behaviours.HttpClient.html#t:headers/0"},{"type":"type","title":"MistralClient.Behaviours.HttpClient.method/0","doc":"","ref":"MistralClient.Behaviours.HttpClient.html#t:method/0"},{"type":"type","title":"MistralClient.Behaviours.HttpClient.options/0","doc":"","ref":"MistralClient.Behaviours.HttpClient.html#t:options/0"},{"type":"callback","title":"MistralClient.Behaviours.HttpClient.request/5","doc":"Performs an HTTP request.","ref":"MistralClient.Behaviours.HttpClient.html#c:request/5"},{"type":"callback","title":"Parameters - MistralClient.Behaviours.HttpClient.request/5","doc":"- `method` - HTTP method (:get, :post, :put, :patch, :delete)\n- `url` - Request URL\n- `headers` - List of request headers as tuples\n- `body` - Request body (string, map, or nil)\n- `options` - Additional options (timeout, etc.)","ref":"MistralClient.Behaviours.HttpClient.html#c:request/5-parameters"},{"type":"callback","title":"Returns - MistralClient.Behaviours.HttpClient.request/5","doc":"- `{:ok, response}` - Successful response with parsed body\n- `{:error, reason}` - Error response","ref":"MistralClient.Behaviours.HttpClient.html#c:request/5-returns"},{"type":"type","title":"MistralClient.Behaviours.HttpClient.response/0","doc":"","ref":"MistralClient.Behaviours.HttpClient.html#t:response/0"},{"type":"callback","title":"MistralClient.Behaviours.HttpClient.stream_request/5","doc":"Performs a streaming HTTP request for Server-Sent Events.","ref":"MistralClient.Behaviours.HttpClient.html#c:stream_request/5"},{"type":"callback","title":"Parameters - MistralClient.Behaviours.HttpClient.stream_request/5","doc":"- `method` - HTTP method (typically :post for streaming)\n- `url` - Request URL\n- `headers` - List of request headers as tuples\n- `body` - Request body (string, map, or nil)\n- `options` - Additional options including stream handling","ref":"MistralClient.Behaviours.HttpClient.html#c:stream_request/5-parameters"},{"type":"callback","title":"Returns - MistralClient.Behaviours.HttpClient.stream_request/5","doc":"- `{:ok, stream}` - Stream of events\n- `{:error, reason}` - Error response","ref":"MistralClient.Behaviours.HttpClient.html#c:stream_request/5-returns"},{"type":"type","title":"MistralClient.Behaviours.HttpClient.url/0","doc":"","ref":"MistralClient.Behaviours.HttpClient.html#t:url/0"},{"type":"module","title":"MistralClient.Client","doc":"HTTP client for the Mistral AI API.\n\nThis module provides the core HTTP functionality for making requests to the\nMistral API, including authentication, retry logic, error handling, and\nresponse parsing.","ref":"MistralClient.Client.html"},{"type":"module","title":"Features - MistralClient.Client","doc":"* Automatic authentication with API key\n  * Exponential backoff retry logic\n  * Comprehensive error handling\n  * Request/response logging\n  * Rate limit handling\n  * Timeout management","ref":"MistralClient.Client.html#module-features"},{"type":"module","title":"Usage - MistralClient.Client","doc":"# Create a client with default configuration\n    client = MistralClient.Client.new()\n\n    # Create a client with custom configuration\n    client = MistralClient.Client.new(api_key: \"custom-key\", timeout: 60_000)\n\n    # Make a request\n    {:ok, response} = MistralClient.Client.request(client, :post, \"/chat/completions\", body)","ref":"MistralClient.Client.html#module-usage"},{"type":"function","title":"MistralClient.Client.new/1","doc":"Create a new HTTP client.","ref":"MistralClient.Client.html#new/1"},{"type":"function","title":"Parameters - MistralClient.Client.new/1","doc":"* `options` - Configuration options (keyword list) or Config struct (optional)","ref":"MistralClient.Client.html#new/1-parameters"},{"type":"function","title":"Examples - MistralClient.Client.new/1","doc":"client = MistralClient.Client.new()\n    client = MistralClient.Client.new(api_key: \"custom-key\")\n    client = MistralClient.Client.new(config_struct)","ref":"MistralClient.Client.html#new/1-examples"},{"type":"function","title":"MistralClient.Client.request/5","doc":"Make an HTTP request to the Mistral API.","ref":"MistralClient.Client.html#request/5"},{"type":"function","title":"Parameters - MistralClient.Client.request/5","doc":"* `client` - The HTTP client\n  * `method` - HTTP method (:get, :post, :put, :delete)\n  * `path` - API endpoint path\n  * `body` - Request body (optional)\n  * `options` - Additional request options (optional)","ref":"MistralClient.Client.html#request/5-parameters"},{"type":"function","title":"Examples - MistralClient.Client.request/5","doc":"{:ok, response} = MistralClient.Client.request(client, :get, \"/models\")\n    {:ok, response} = MistralClient.Client.request(client, :post, \"/chat/completions\", %{...})","ref":"MistralClient.Client.html#request/5-examples"},{"type":"function","title":"MistralClient.Client.stream_request/6","doc":"Make a streaming request to the Mistral API.","ref":"MistralClient.Client.html#stream_request/6"},{"type":"function","title":"Parameters - MistralClient.Client.stream_request/6","doc":"* `client` - The HTTP client\n  * `method` - HTTP method (:get, :post, :put, :delete)\n  * `path` - API endpoint path\n  * `body` - Request body (optional)\n  * `callback` - Function to handle each chunk\n  * `options` - Additional request options (optional)","ref":"MistralClient.Client.html#stream_request/6-parameters"},{"type":"function","title":"Examples - MistralClient.Client.stream_request/6","doc":"MistralClient.Client.stream_request(client, :post, \"/chat/completions\", body, fn chunk ->\n      IO.write(chunk)\n    end)","ref":"MistralClient.Client.html#stream_request/6-examples"},{"type":"type","title":"MistralClient.Client.t/0","doc":"","ref":"MistralClient.Client.html#t:t/0"},{"type":"module","title":"MistralClient.Config","doc":"Configuration management for the Mistral AI client.\n\nThis module handles configuration from multiple sources:\n1. Application configuration\n2. Environment variables\n3. Runtime options","ref":"MistralClient.Config.html"},{"type":"module","title":"Configuration Options - MistralClient.Config","doc":"* `:api_key` - Mistral API key (required)\n  * `:base_url` - Base URL for the API (default: \"https://api.mistral.ai\")\n  * `:timeout` - Request timeout in milliseconds (default: 30_000)\n  * `:max_retries` - Maximum number of retries (default: 3)\n  * `:retry_delay` - Base delay between retries in milliseconds (default: 1_000)\n  * `:user_agent` - User agent string (default: \"mistral-client-elixir/0.1.0\")","ref":"MistralClient.Config.html#module-configuration-options"},{"type":"module","title":"Configuration Sources - MistralClient.Config","doc":"","ref":"MistralClient.Config.html#module-configuration-sources"},{"type":"module","title":"Application Configuration - MistralClient.Config","doc":"config :mistralex_ai,\n      api_key: \"your-api-key\",\n      base_url: \"https://api.mistral.ai\",\n      timeout: 30_000","ref":"MistralClient.Config.html#module-application-configuration"},{"type":"module","title":"Environment Variables - MistralClient.Config","doc":"export MISTRAL_API_KEY=\"your-api-key\"\n    export MISTRAL_BASE_URL=\"https://api.mistral.ai\"\n    export MISTRAL_TIMEOUT=\"30000\"","ref":"MistralClient.Config.html#module-environment-variables"},{"type":"module","title":"Runtime Options - MistralClient.Config","doc":"config = MistralClient.Config.new(api_key: \"runtime-key\")","ref":"MistralClient.Config.html#module-runtime-options"},{"type":"function","title":"MistralClient.Config.get/0","doc":"Get the current configuration.\n\nMerges configuration from application config and environment variables.","ref":"MistralClient.Config.html#get/0"},{"type":"function","title":"Examples - MistralClient.Config.get/0","doc":"config = MistralClient.Config.get()\n    %MistralClient.Config{api_key: \"your-key\", ...}","ref":"MistralClient.Config.html#get/0-examples"},{"type":"function","title":"MistralClient.Config.get_api_key/0","doc":"Get the API key from configuration sources.\n\nChecks in order:\n1. Application configuration\n2. MISTRAL_API_KEY environment variable","ref":"MistralClient.Config.html#get_api_key/0"},{"type":"function","title":"Examples - MistralClient.Config.get_api_key/0","doc":"\"your-api-key\" = MistralClient.Config.get_api_key()","ref":"MistralClient.Config.html#get_api_key/0-examples"},{"type":"function","title":"MistralClient.Config.get_base_url/0","doc":"Get the base URL from configuration sources.","ref":"MistralClient.Config.html#get_base_url/0"},{"type":"function","title":"Examples - MistralClient.Config.get_base_url/0","doc":"\"https://api.mistral.ai\" = MistralClient.Config.get_base_url()","ref":"MistralClient.Config.html#get_base_url/0-examples"},{"type":"function","title":"MistralClient.Config.get_max_retries/0","doc":"Get the maximum retries from configuration sources.","ref":"MistralClient.Config.html#get_max_retries/0"},{"type":"function","title":"Examples - MistralClient.Config.get_max_retries/0","doc":"3 = MistralClient.Config.get_max_retries()","ref":"MistralClient.Config.html#get_max_retries/0-examples"},{"type":"function","title":"MistralClient.Config.get_retry_delay/0","doc":"Get the retry delay from configuration sources.","ref":"MistralClient.Config.html#get_retry_delay/0"},{"type":"function","title":"Examples - MistralClient.Config.get_retry_delay/0","doc":"1_000 = MistralClient.Config.get_retry_delay()","ref":"MistralClient.Config.html#get_retry_delay/0-examples"},{"type":"function","title":"MistralClient.Config.get_timeout/0","doc":"Get the timeout from configuration sources.","ref":"MistralClient.Config.html#get_timeout/0"},{"type":"function","title":"Examples - MistralClient.Config.get_timeout/0","doc":"30_000 = MistralClient.Config.get_timeout()","ref":"MistralClient.Config.html#get_timeout/0-examples"},{"type":"function","title":"MistralClient.Config.get_user_agent/0","doc":"Get the user agent from configuration sources.","ref":"MistralClient.Config.html#get_user_agent/0"},{"type":"function","title":"Examples - MistralClient.Config.get_user_agent/0","doc":"\"mistral-client-elixir/0.1.0\" = MistralClient.Config.get_user_agent()","ref":"MistralClient.Config.html#get_user_agent/0-examples"},{"type":"function","title":"MistralClient.Config.new/1","doc":"Create a new configuration with optional overrides.","ref":"MistralClient.Config.html#new/1"},{"type":"function","title":"Parameters - MistralClient.Config.new/1","doc":"* `options` - Keyword list of configuration options","ref":"MistralClient.Config.html#new/1-parameters"},{"type":"function","title":"Examples - MistralClient.Config.new/1","doc":"config = MistralClient.Config.new(api_key: \"custom-key\")\n    config = MistralClient.Config.new(timeout: 60_000, max_retries: 5)","ref":"MistralClient.Config.html#new/1-examples"},{"type":"type","title":"MistralClient.Config.t/0","doc":"","ref":"MistralClient.Config.html#t:t/0"},{"type":"function","title":"MistralClient.Config.validate/1","doc":"Validate the configuration.\n\nReturns `:ok` if valid, or `{:error, reason}` if invalid.","ref":"MistralClient.Config.html#validate/1"},{"type":"function","title":"Examples - MistralClient.Config.validate/1","doc":":ok = MistralClient.Config.validate(config)\n    {:error, \"API key is required\"} = MistralClient.Config.validate(%Config{api_key: nil})","ref":"MistralClient.Config.html#validate/1-examples"},{"type":"module","title":"MistralClient.Errors","doc":"Error definitions and handling for the Mistral AI client.\n\nThis module defines standardized error types that can occur when interacting\nwith the Mistral API, providing consistent error handling across the SDK.","ref":"MistralClient.Errors.html"},{"type":"module","title":"Error Types - MistralClient.Errors","doc":"* `APIError` - General API errors (4xx, 5xx responses)\n  * `AuthenticationError` - Authentication failures (401)\n  * `PermissionError` - Permission denied (403)\n  * `NotFoundError` - Resource not found (404)\n  * `RateLimitError` - Rate limit exceeded (429)\n  * `ServerError` - Server-side errors (5xx)\n  * `NetworkError` - Network connectivity issues\n  * `TimeoutError` - Request timeout\n  * `ValidationError` - Request validation failures\n  * `ConfigurationError` - Configuration issues","ref":"MistralClient.Errors.html#module-error-types"},{"type":"module","title":"Usage - MistralClient.Errors","doc":"case MistralClient.chat(messages) do\n      {:ok, response} -> handle_success(response)\n      {:error, %MistralClient.Errors.RateLimitError{} = rate_limit_error} ->\n        # Handle rate limiting\n        retry_after_delay(rate_limit_error.retry_after)\n      {:error, other_error} ->\n        # Handle other errors\n         Logger.error(\"API error: inspect(other_error)\")\n    end","ref":"MistralClient.Errors.html#module-usage"},{"type":"function","title":"MistralClient.Errors.from_response/3","doc":"Convert an HTTP response to an appropriate error.","ref":"MistralClient.Errors.html#from_response/3"},{"type":"function","title":"Parameters - MistralClient.Errors.from_response/3","doc":"* `status_code` - HTTP status code\n  * `response_body` - Response body (optional)\n  * `headers` - Response headers (optional)","ref":"MistralClient.Errors.html#from_response/3-parameters"},{"type":"function","title":"Examples - MistralClient.Errors.from_response/3","doc":"error = MistralClient.Errors.from_response(401, \"Unauthorized\")\n    %MistralClient.Errors.AuthenticationError{}","ref":"MistralClient.Errors.html#from_response/3-examples"},{"type":"module","title":"MistralClient.HttpClient.Req","doc":"Req-based HTTP client implementation.\n\nThis module implements the HttpClient behaviour using the Req library\nfor making actual HTTP requests to the Mistral API.","ref":"MistralClient.HttpClient.Req.html"},{"type":"module","title":"MistralClient.Models","doc":"Core data structures for the Mistral AI client.\n\nThis module defines structs and types that represent the various data\nstructures used throughout the Mistral API, providing type safety and\nclear documentation of expected data formats.","ref":"MistralClient.Models.html"},{"type":"module","title":"Message Types - MistralClient.Models","doc":"* `Message` - Chat message with role and content\n  * `ToolCall` - Function/tool call within a message\n  * `ToolCallFunction` - Function details for a tool call","ref":"MistralClient.Models.html#module-message-types"},{"type":"module","title":"Response Types - MistralClient.Models","doc":"* `ChatCompletion` - Complete chat response\n  * `ChatCompletionChoice` - Individual choice in chat response\n  * `ChatCompletionMessage` - Message in chat completion\n  * `Usage` - Token usage information\n  * `EmbeddingResponse` - Embedding generation response\n  * `Embedding` - Individual embedding data","ref":"MistralClient.Models.html#module-response-types"},{"type":"module","title":"Model Types - MistralClient.Models","doc":"* `Model` - Model information\n  * `ModelPermission` - Model access permissions","ref":"MistralClient.Models.html#module-model-types"},{"type":"module","title":"File Types - MistralClient.Models","doc":"* `File` - File metadata\n  * `FileUpload` - File upload response","ref":"MistralClient.Models.html#module-file-types"},{"type":"module","title":"Usage - MistralClient.Models","doc":"# Create a message\n    message = %MistralClient.Models.Message{\n      role: \"user\",\n      content: \"Hello, world!\"\n    }\n\n    # Parse a chat completion response\n    {:ok, completion} = MistralClient.Models.ChatCompletion.from_map(response_data)","ref":"MistralClient.Models.html#module-usage"},{"type":"module","title":"MistralClient.Models.ArchiveFTModelOut","doc":"Represents an archive fine-tuned model response.","ref":"MistralClient.Models.ArchiveFTModelOut.html"},{"type":"function","title":"MistralClient.Models.ArchiveFTModelOut.from_map/1","doc":"Create an archive model response from a map.","ref":"MistralClient.Models.ArchiveFTModelOut.html#from_map/1"},{"type":"type","title":"MistralClient.Models.ArchiveFTModelOut.t/0","doc":"","ref":"MistralClient.Models.ArchiveFTModelOut.html#t:t/0"},{"type":"module","title":"MistralClient.Models.BaseModelCard","doc":"Represents a base model card.","ref":"MistralClient.Models.BaseModelCard.html"},{"type":"function","title":"MistralClient.Models.BaseModelCard.from_map/1","doc":"Create a base model card from a map.","ref":"MistralClient.Models.BaseModelCard.html#from_map/1"},{"type":"type","title":"MistralClient.Models.BaseModelCard.t/0","doc":"","ref":"MistralClient.Models.BaseModelCard.html#t:t/0"},{"type":"module","title":"MistralClient.Models.BatchError","doc":"Represents an error in a batch job.","ref":"MistralClient.Models.BatchError.html"},{"type":"function","title":"MistralClient.Models.BatchError.from_map/1","doc":"Create a batch error from a map.","ref":"MistralClient.Models.BatchError.html#from_map/1"},{"type":"type","title":"MistralClient.Models.BatchError.t/0","doc":"","ref":"MistralClient.Models.BatchError.html#t:t/0"},{"type":"function","title":"MistralClient.Models.BatchError.to_map/1","doc":"Convert a batch error to a map.","ref":"MistralClient.Models.BatchError.html#to_map/1"},{"type":"module","title":"MistralClient.Models.BatchJobIn","doc":"Represents a batch job creation request.","ref":"MistralClient.Models.BatchJobIn.html"},{"type":"function","title":"MistralClient.Models.BatchJobIn.from_map/1","doc":"Create a batch job request from a map.","ref":"MistralClient.Models.BatchJobIn.html#from_map/1"},{"type":"function","title":"MistralClient.Models.BatchJobIn.new/4","doc":"Create a new batch job request.","ref":"MistralClient.Models.BatchJobIn.html#new/4"},{"type":"type","title":"MistralClient.Models.BatchJobIn.t/0","doc":"","ref":"MistralClient.Models.BatchJobIn.html#t:t/0"},{"type":"function","title":"MistralClient.Models.BatchJobIn.to_map/1","doc":"Convert a batch job request to a map for API requests.","ref":"MistralClient.Models.BatchJobIn.html#to_map/1"},{"type":"module","title":"MistralClient.Models.BatchJobOut","doc":"Represents a batch job response.","ref":"MistralClient.Models.BatchJobOut.html"},{"type":"function","title":"MistralClient.Models.BatchJobOut.from_map/1","doc":"Create a batch job response from a map.","ref":"MistralClient.Models.BatchJobOut.html#from_map/1"},{"type":"type","title":"MistralClient.Models.BatchJobOut.t/0","doc":"","ref":"MistralClient.Models.BatchJobOut.html#t:t/0"},{"type":"module","title":"MistralClient.Models.BatchJobsOut","doc":"Represents a list of batch jobs response.","ref":"MistralClient.Models.BatchJobsOut.html"},{"type":"function","title":"MistralClient.Models.BatchJobsOut.from_map/1","doc":"Create a batch jobs response from a map.","ref":"MistralClient.Models.BatchJobsOut.html#from_map/1"},{"type":"type","title":"MistralClient.Models.BatchJobsOut.t/0","doc":"","ref":"MistralClient.Models.BatchJobsOut.html#t:t/0"},{"type":"module","title":"MistralClient.Models.Beta","doc":"Data models for Beta API features.\n\nThis module contains all the data structures used by the Beta APIs,\nincluding agents, conversations, and related entities.","ref":"MistralClient.Models.Beta.html"},{"type":"module","title":"MistralClient.Models.Beta.Agent","doc":"Represents an AI agent with specific instructions and capabilities.","ref":"MistralClient.Models.Beta.Agent.html"},{"type":"function","title":"MistralClient.Models.Beta.Agent.from_map/1","doc":"Create an Agent struct from a map response.","ref":"MistralClient.Models.Beta.Agent.html#from_map/1"},{"type":"function","title":"MistralClient.Models.Beta.Agent.parse_datetime/1","doc":"","ref":"MistralClient.Models.Beta.Agent.html#parse_datetime/1"},{"type":"type","title":"MistralClient.Models.Beta.Agent.t/0","doc":"","ref":"MistralClient.Models.Beta.Agent.html#t:t/0"},{"type":"module","title":"MistralClient.Models.Beta.CompletionArgs","doc":"Represents completion arguments for agents and conversations.","ref":"MistralClient.Models.Beta.CompletionArgs.html"},{"type":"function","title":"MistralClient.Models.Beta.CompletionArgs.from_map/1","doc":"Create a CompletionArgs struct from a map.","ref":"MistralClient.Models.Beta.CompletionArgs.html#from_map/1"},{"type":"type","title":"MistralClient.Models.Beta.CompletionArgs.t/0","doc":"","ref":"MistralClient.Models.Beta.CompletionArgs.html#t:t/0"},{"type":"function","title":"MistralClient.Models.Beta.CompletionArgs.to_map/1","doc":"Convert a CompletionArgs struct to a map for API requests.","ref":"MistralClient.Models.Beta.CompletionArgs.html#to_map/1"},{"type":"module","title":"MistralClient.Models.Beta.Conversation","doc":"Represents a conversation entity with its configuration.","ref":"MistralClient.Models.Beta.Conversation.html"},{"type":"function","title":"MistralClient.Models.Beta.Conversation.from_map/1","doc":"Create a Conversation struct from a map response.","ref":"MistralClient.Models.Beta.Conversation.html#from_map/1"},{"type":"type","title":"MistralClient.Models.Beta.Conversation.t/0","doc":"","ref":"MistralClient.Models.Beta.Conversation.html#t:t/0"},{"type":"module","title":"MistralClient.Models.Beta.ConversationEntry","doc":"Represents an entry in a conversation (message, function call, etc.).","ref":"MistralClient.Models.Beta.ConversationEntry.html"},{"type":"function","title":"MistralClient.Models.Beta.ConversationEntry.from_map/1","doc":"Create a ConversationEntry struct from a map response.","ref":"MistralClient.Models.Beta.ConversationEntry.html#from_map/1"},{"type":"type","title":"MistralClient.Models.Beta.ConversationEntry.t/0","doc":"","ref":"MistralClient.Models.Beta.ConversationEntry.html#t:t/0"},{"type":"module","title":"MistralClient.Models.Beta.ConversationHistory","doc":"Represents the history of a conversation with all entries.","ref":"MistralClient.Models.Beta.ConversationHistory.html"},{"type":"function","title":"MistralClient.Models.Beta.ConversationHistory.from_map/1","doc":"Create a ConversationHistory struct from a map response.","ref":"MistralClient.Models.Beta.ConversationHistory.html#from_map/1"},{"type":"type","title":"MistralClient.Models.Beta.ConversationHistory.t/0","doc":"","ref":"MistralClient.Models.Beta.ConversationHistory.html#t:t/0"},{"type":"module","title":"MistralClient.Models.Beta.ConversationResponse","doc":"Represents the response from conversation operations.","ref":"MistralClient.Models.Beta.ConversationResponse.html"},{"type":"function","title":"MistralClient.Models.Beta.ConversationResponse.from_map/1","doc":"Create a ConversationResponse struct from a map response.","ref":"MistralClient.Models.Beta.ConversationResponse.html#from_map/1"},{"type":"type","title":"MistralClient.Models.Beta.ConversationResponse.t/0","doc":"","ref":"MistralClient.Models.Beta.ConversationResponse.html#t:t/0"},{"type":"module","title":"MistralClient.Models.Beta.Tool","doc":"Represents a tool that can be used by agents.","ref":"MistralClient.Models.Beta.Tool.html"},{"type":"function","title":"MistralClient.Models.Beta.Tool.from_map/1","doc":"Create a Tool struct from a map.","ref":"MistralClient.Models.Beta.Tool.html#from_map/1"},{"type":"type","title":"MistralClient.Models.Beta.Tool.t/0","doc":"","ref":"MistralClient.Models.Beta.Tool.html#t:t/0"},{"type":"module","title":"MistralClient.Models.Beta.ToolFunction","doc":"Represents a function tool definition.","ref":"MistralClient.Models.Beta.ToolFunction.html"},{"type":"function","title":"MistralClient.Models.Beta.ToolFunction.from_map/1","doc":"Create a ToolFunction struct from a map.","ref":"MistralClient.Models.Beta.ToolFunction.html#from_map/1"},{"type":"type","title":"MistralClient.Models.Beta.ToolFunction.t/0","doc":"","ref":"MistralClient.Models.Beta.ToolFunction.html#t:t/0"},{"type":"module","title":"MistralClient.Models.ChatClassificationRequest","doc":"Represents a chat classification request.","ref":"MistralClient.Models.ChatClassificationRequest.html"},{"type":"function","title":"MistralClient.Models.ChatClassificationRequest.new/2","doc":"Create a new chat classification request.","ref":"MistralClient.Models.ChatClassificationRequest.html#new/2"},{"type":"type","title":"MistralClient.Models.ChatClassificationRequest.t/0","doc":"","ref":"MistralClient.Models.ChatClassificationRequest.html#t:t/0"},{"type":"function","title":"MistralClient.Models.ChatClassificationRequest.to_map/1","doc":"Convert a chat classification request to a map for API requests.","ref":"MistralClient.Models.ChatClassificationRequest.html#to_map/1"},{"type":"module","title":"MistralClient.Models.ChatCompletion","doc":"Represents a chat completion response.","ref":"MistralClient.Models.ChatCompletion.html"},{"type":"function","title":"MistralClient.Models.ChatCompletion.from_map/1","doc":"Create a chat completion from a map.","ref":"MistralClient.Models.ChatCompletion.html#from_map/1"},{"type":"type","title":"MistralClient.Models.ChatCompletion.t/0","doc":"","ref":"MistralClient.Models.ChatCompletion.html#t:t/0"},{"type":"module","title":"MistralClient.Models.ChatCompletionChoice","doc":"Represents a choice in a chat completion response.","ref":"MistralClient.Models.ChatCompletionChoice.html"},{"type":"function","title":"MistralClient.Models.ChatCompletionChoice.from_map/1","doc":"Create a chat completion choice from a map.","ref":"MistralClient.Models.ChatCompletionChoice.html#from_map/1"},{"type":"type","title":"MistralClient.Models.ChatCompletionChoice.t/0","doc":"","ref":"MistralClient.Models.ChatCompletionChoice.html#t:t/0"},{"type":"module","title":"MistralClient.Models.ChatModerationRequest","doc":"Represents a chat moderation request.","ref":"MistralClient.Models.ChatModerationRequest.html"},{"type":"function","title":"MistralClient.Models.ChatModerationRequest.new/2","doc":"Create a new chat moderation request.","ref":"MistralClient.Models.ChatModerationRequest.html#new/2"},{"type":"type","title":"MistralClient.Models.ChatModerationRequest.t/0","doc":"","ref":"MistralClient.Models.ChatModerationRequest.html#t:t/0"},{"type":"function","title":"MistralClient.Models.ChatModerationRequest.to_map/1","doc":"Convert a chat moderation request to a map for API requests.","ref":"MistralClient.Models.ChatModerationRequest.html#to_map/1"},{"type":"module","title":"MistralClient.Models.ClassificationRequest","doc":"Represents a classification request.","ref":"MistralClient.Models.ClassificationRequest.html"},{"type":"function","title":"MistralClient.Models.ClassificationRequest.new/2","doc":"Create a new classification request.","ref":"MistralClient.Models.ClassificationRequest.html#new/2"},{"type":"type","title":"MistralClient.Models.ClassificationRequest.t/0","doc":"","ref":"MistralClient.Models.ClassificationRequest.html#t:t/0"},{"type":"function","title":"MistralClient.Models.ClassificationRequest.to_map/1","doc":"Convert a classification request to a map for API requests.","ref":"MistralClient.Models.ClassificationRequest.html#to_map/1"},{"type":"module","title":"MistralClient.Models.ClassificationResponse","doc":"Represents a classification response.","ref":"MistralClient.Models.ClassificationResponse.html"},{"type":"function","title":"MistralClient.Models.ClassificationResponse.from_map/1","doc":"Create a classification response from a map.","ref":"MistralClient.Models.ClassificationResponse.html#from_map/1"},{"type":"type","title":"MistralClient.Models.ClassificationResponse.t/0","doc":"","ref":"MistralClient.Models.ClassificationResponse.html#t:t/0"},{"type":"module","title":"MistralClient.Models.ClassificationTargetResult","doc":"Represents classification target results with scores.","ref":"MistralClient.Models.ClassificationTargetResult.html"},{"type":"function","title":"MistralClient.Models.ClassificationTargetResult.from_map/1","doc":"Create classification target result from a map.","ref":"MistralClient.Models.ClassificationTargetResult.html#from_map/1"},{"type":"type","title":"MistralClient.Models.ClassificationTargetResult.t/0","doc":"","ref":"MistralClient.Models.ClassificationTargetResult.html#t:t/0"},{"type":"module","title":"MistralClient.Models.CompletionTrainingParameters","doc":"Represents completion training hyperparameters for fine-tuning.","ref":"MistralClient.Models.CompletionTrainingParameters.html"},{"type":"function","title":"MistralClient.Models.CompletionTrainingParameters.from_map/1","doc":"Create completion training parameters from a map.","ref":"MistralClient.Models.CompletionTrainingParameters.html#from_map/1"},{"type":"function","title":"MistralClient.Models.CompletionTrainingParameters.new/1","doc":"Create new completion training parameters.","ref":"MistralClient.Models.CompletionTrainingParameters.html#new/1"},{"type":"type","title":"MistralClient.Models.CompletionTrainingParameters.t/0","doc":"","ref":"MistralClient.Models.CompletionTrainingParameters.html#t:t/0"},{"type":"module","title":"MistralClient.Models.DeleteFileOut","doc":"Represents a delete file response.","ref":"MistralClient.Models.DeleteFileOut.html"},{"type":"function","title":"MistralClient.Models.DeleteFileOut.from_map/1","doc":"Create a delete file response from a map.","ref":"MistralClient.Models.DeleteFileOut.html#from_map/1"},{"type":"type","title":"MistralClient.Models.DeleteFileOut.t/0","doc":"","ref":"MistralClient.Models.DeleteFileOut.html#t:t/0"},{"type":"module","title":"MistralClient.Models.DeleteModelOut","doc":"Represents a delete model response.","ref":"MistralClient.Models.DeleteModelOut.html"},{"type":"function","title":"MistralClient.Models.DeleteModelOut.from_map/1","doc":"Create a delete model response from a map.","ref":"MistralClient.Models.DeleteModelOut.html#from_map/1"},{"type":"type","title":"MistralClient.Models.DeleteModelOut.t/0","doc":"","ref":"MistralClient.Models.DeleteModelOut.html#t:t/0"},{"type":"module","title":"MistralClient.Models.DocumentURLChunk","doc":"Represents a document URL chunk for OCR processing.","ref":"MistralClient.Models.DocumentURLChunk.html"},{"type":"function","title":"MistralClient.Models.DocumentURLChunk.from_map/1","doc":"Create a document URL chunk from a map.","ref":"MistralClient.Models.DocumentURLChunk.html#from_map/1"},{"type":"function","title":"MistralClient.Models.DocumentURLChunk.new/2","doc":"Create a new document URL chunk.","ref":"MistralClient.Models.DocumentURLChunk.html#new/2"},{"type":"type","title":"MistralClient.Models.DocumentURLChunk.t/0","doc":"","ref":"MistralClient.Models.DocumentURLChunk.html#t:t/0"},{"type":"function","title":"MistralClient.Models.DocumentURLChunk.to_map/1","doc":"Convert a document URL chunk to a map for API requests.","ref":"MistralClient.Models.DocumentURLChunk.html#to_map/1"},{"type":"module","title":"MistralClient.Models.Embedding","doc":"Represents an individual embedding.","ref":"MistralClient.Models.Embedding.html"},{"type":"function","title":"MistralClient.Models.Embedding.from_map/1","doc":"Create an embedding from a map.","ref":"MistralClient.Models.Embedding.html#from_map/1"},{"type":"type","title":"MistralClient.Models.Embedding.t/0","doc":"","ref":"MistralClient.Models.Embedding.html#t:t/0"},{"type":"module","title":"MistralClient.Models.EmbeddingResponse","doc":"Represents an embedding response.","ref":"MistralClient.Models.EmbeddingResponse.html"},{"type":"function","title":"MistralClient.Models.EmbeddingResponse.from_map/1","doc":"Create an embedding response from a map.","ref":"MistralClient.Models.EmbeddingResponse.html#from_map/1"},{"type":"type","title":"MistralClient.Models.EmbeddingResponse.t/0","doc":"","ref":"MistralClient.Models.EmbeddingResponse.html#t:t/0"},{"type":"module","title":"MistralClient.Models.FIMCompletionChoice","doc":"Represents a choice in a FIM completion response.","ref":"MistralClient.Models.FIMCompletionChoice.html"},{"type":"function","title":"MistralClient.Models.FIMCompletionChoice.from_map/1","doc":"Create a FIM completion choice from a map.","ref":"MistralClient.Models.FIMCompletionChoice.html#from_map/1"},{"type":"type","title":"MistralClient.Models.FIMCompletionChoice.t/0","doc":"","ref":"MistralClient.Models.FIMCompletionChoice.html#t:t/0"},{"type":"module","title":"MistralClient.Models.FIMCompletionMessage","doc":"Represents a message in a FIM completion response.","ref":"MistralClient.Models.FIMCompletionMessage.html"},{"type":"function","title":"MistralClient.Models.FIMCompletionMessage.from_map/1","doc":"Create a FIM completion message from a map.","ref":"MistralClient.Models.FIMCompletionMessage.html#from_map/1"},{"type":"type","title":"MistralClient.Models.FIMCompletionMessage.t/0","doc":"","ref":"MistralClient.Models.FIMCompletionMessage.html#t:t/0"},{"type":"module","title":"MistralClient.Models.FIMCompletionRequest","doc":"Represents a FIM (Fill-in-the-Middle) completion request.","ref":"MistralClient.Models.FIMCompletionRequest.html"},{"type":"function","title":"MistralClient.Models.FIMCompletionRequest.new/3","doc":"Create a new FIM completion request.","ref":"MistralClient.Models.FIMCompletionRequest.html#new/3"},{"type":"type","title":"MistralClient.Models.FIMCompletionRequest.t/0","doc":"","ref":"MistralClient.Models.FIMCompletionRequest.html#t:t/0"},{"type":"function","title":"MistralClient.Models.FIMCompletionRequest.to_map/1","doc":"Convert a FIM completion request to a map for API requests.","ref":"MistralClient.Models.FIMCompletionRequest.html#to_map/1"},{"type":"module","title":"MistralClient.Models.FIMCompletionResponse","doc":"Represents a FIM completion response.","ref":"MistralClient.Models.FIMCompletionResponse.html"},{"type":"function","title":"MistralClient.Models.FIMCompletionResponse.from_map/1","doc":"Create a FIM completion response from a map.","ref":"MistralClient.Models.FIMCompletionResponse.html#from_map/1"},{"type":"type","title":"MistralClient.Models.FIMCompletionResponse.t/0","doc":"","ref":"MistralClient.Models.FIMCompletionResponse.html#t:t/0"},{"type":"module","title":"MistralClient.Models.FTModelCard","doc":"Represents a fine-tuned model card.","ref":"MistralClient.Models.FTModelCard.html"},{"type":"function","title":"MistralClient.Models.FTModelCard.from_map/1","doc":"Create a fine-tuned model card from a map.","ref":"MistralClient.Models.FTModelCard.html#from_map/1"},{"type":"type","title":"MistralClient.Models.FTModelCard.t/0","doc":"","ref":"MistralClient.Models.FTModelCard.html#t:t/0"},{"type":"module","title":"MistralClient.Models.File","doc":"Represents file metadata.","ref":"MistralClient.Models.File.html"},{"type":"function","title":"MistralClient.Models.File.from_map/1","doc":"Create a file from a map.","ref":"MistralClient.Models.File.html#from_map/1"},{"type":"type","title":"MistralClient.Models.File.t/0","doc":"","ref":"MistralClient.Models.File.html#t:t/0"},{"type":"module","title":"MistralClient.Models.FileList","doc":"Represents a list of files response with pagination.","ref":"MistralClient.Models.FileList.html"},{"type":"function","title":"MistralClient.Models.FileList.from_map/1","doc":"Create a file list from a map.","ref":"MistralClient.Models.FileList.html#from_map/1"},{"type":"type","title":"MistralClient.Models.FileList.t/0","doc":"","ref":"MistralClient.Models.FileList.html#t:t/0"},{"type":"module","title":"MistralClient.Models.FileSignedURL","doc":"Represents a file signed URL response.","ref":"MistralClient.Models.FileSignedURL.html"},{"type":"function","title":"MistralClient.Models.FileSignedURL.from_map/1","doc":"Create a file signed URL from a map.","ref":"MistralClient.Models.FileSignedURL.html#from_map/1"},{"type":"type","title":"MistralClient.Models.FileSignedURL.t/0","doc":"","ref":"MistralClient.Models.FileSignedURL.html#t:t/0"},{"type":"module","title":"MistralClient.Models.FileUpload","doc":"Represents a file upload response.","ref":"MistralClient.Models.FileUpload.html"},{"type":"function","title":"MistralClient.Models.FileUpload.from_map/1","doc":"Create a file upload response from a map.","ref":"MistralClient.Models.FileUpload.html#from_map/1"},{"type":"type","title":"MistralClient.Models.FileUpload.t/0","doc":"","ref":"MistralClient.Models.FileUpload.html#t:t/0"},{"type":"module","title":"MistralClient.Models.FineTuningJobRequest","doc":"Represents a fine-tuning job creation request.","ref":"MistralClient.Models.FineTuningJobRequest.html"},{"type":"function","title":"MistralClient.Models.FineTuningJobRequest.new/3","doc":"Create a new fine-tuning job request.","ref":"MistralClient.Models.FineTuningJobRequest.html#new/3"},{"type":"type","title":"MistralClient.Models.FineTuningJobRequest.t/0","doc":"","ref":"MistralClient.Models.FineTuningJobRequest.html#t:t/0"},{"type":"module","title":"MistralClient.Models.FineTuningJobResponse","doc":"Represents a fine-tuning job response.","ref":"MistralClient.Models.FineTuningJobResponse.html"},{"type":"function","title":"MistralClient.Models.FineTuningJobResponse.from_map/1","doc":"Create a fine-tuning job response from a map.","ref":"MistralClient.Models.FineTuningJobResponse.html#from_map/1"},{"type":"type","title":"MistralClient.Models.FineTuningJobResponse.t/0","doc":"","ref":"MistralClient.Models.FineTuningJobResponse.html#t:t/0"},{"type":"module","title":"MistralClient.Models.FineTuningJobsResponse","doc":"Represents a list of fine-tuning jobs response.","ref":"MistralClient.Models.FineTuningJobsResponse.html"},{"type":"function","title":"MistralClient.Models.FineTuningJobsResponse.from_map/1","doc":"Create a fine-tuning jobs response from a map.","ref":"MistralClient.Models.FineTuningJobsResponse.html#from_map/1"},{"type":"type","title":"MistralClient.Models.FineTuningJobsResponse.t/0","doc":"","ref":"MistralClient.Models.FineTuningJobsResponse.html#t:t/0"},{"type":"module","title":"MistralClient.Models.GithubRepository","doc":"Represents a GitHub repository for fine-tuning.","ref":"MistralClient.Models.GithubRepository.html"},{"type":"function","title":"MistralClient.Models.GithubRepository.from_map/1","doc":"Create a GitHub repository from a map.","ref":"MistralClient.Models.GithubRepository.html#from_map/1"},{"type":"function","title":"MistralClient.Models.GithubRepository.new/3","doc":"Create a new GitHub repository.","ref":"MistralClient.Models.GithubRepository.html#new/3"},{"type":"type","title":"MistralClient.Models.GithubRepository.t/0","doc":"","ref":"MistralClient.Models.GithubRepository.html#t:t/0"},{"type":"module","title":"MistralClient.Models.ImageURLChunk","doc":"Represents an image URL chunk for OCR processing.","ref":"MistralClient.Models.ImageURLChunk.html"},{"type":"function","title":"MistralClient.Models.ImageURLChunk.from_map/1","doc":"Create an image URL chunk from a map.","ref":"MistralClient.Models.ImageURLChunk.html#from_map/1"},{"type":"function","title":"MistralClient.Models.ImageURLChunk.new/2","doc":"Create a new image URL chunk.","ref":"MistralClient.Models.ImageURLChunk.html#new/2"},{"type":"type","title":"MistralClient.Models.ImageURLChunk.t/0","doc":"","ref":"MistralClient.Models.ImageURLChunk.html#t:t/0"},{"type":"function","title":"MistralClient.Models.ImageURLChunk.to_map/1","doc":"Convert an image URL chunk to a map for API requests.","ref":"MistralClient.Models.ImageURLChunk.html#to_map/1"},{"type":"module","title":"MistralClient.Models.ImageURLChunkImageURL","doc":"Represents an image URL within an image URL chunk.","ref":"MistralClient.Models.ImageURLChunkImageURL.html"},{"type":"function","title":"MistralClient.Models.ImageURLChunkImageURL.from_map/1","doc":"Create an image URL from a map.","ref":"MistralClient.Models.ImageURLChunkImageURL.html#from_map/1"},{"type":"function","title":"MistralClient.Models.ImageURLChunkImageURL.new/1","doc":"Create a new image URL.","ref":"MistralClient.Models.ImageURLChunkImageURL.html#new/1"},{"type":"type","title":"MistralClient.Models.ImageURLChunkImageURL.t/0","doc":"","ref":"MistralClient.Models.ImageURLChunkImageURL.html#t:t/0"},{"type":"function","title":"MistralClient.Models.ImageURLChunkImageURL.to_map/1","doc":"Convert an image URL to a map for API requests.","ref":"MistralClient.Models.ImageURLChunkImageURL.html#to_map/1"},{"type":"module","title":"MistralClient.Models.Message","doc":"Represents a chat message.","ref":"MistralClient.Models.Message.html"},{"type":"function","title":"MistralClient.Models.Message.from_map/1","doc":"Create a message from a map.","ref":"MistralClient.Models.Message.html#from_map/1"},{"type":"function","title":"MistralClient.Models.Message.new/3","doc":"Create a new message.","ref":"MistralClient.Models.Message.html#new/3"},{"type":"function","title":"Examples - MistralClient.Models.Message.new/3","doc":"message = MistralClient.Models.Message.new(\"user\", \"Hello!\")\n    %MistralClient.Models.Message{role: \"user\", content: \"Hello!\"}","ref":"MistralClient.Models.Message.html#new/3-examples"},{"type":"type","title":"MistralClient.Models.Message.t/0","doc":"","ref":"MistralClient.Models.Message.html#t:t/0"},{"type":"function","title":"MistralClient.Models.Message.to_map/1","doc":"Convert a message to a map for API requests.","ref":"MistralClient.Models.Message.html#to_map/1"},{"type":"module","title":"MistralClient.Models.Model","doc":"Represents model information.","ref":"MistralClient.Models.Model.html"},{"type":"function","title":"MistralClient.Models.Model.from_map/1","doc":"Create a model from a map.","ref":"MistralClient.Models.Model.html#from_map/1"},{"type":"type","title":"MistralClient.Models.Model.t/0","doc":"","ref":"MistralClient.Models.Model.html#t:t/0"},{"type":"module","title":"MistralClient.Models.ModelCapabilities","doc":"Represents model capabilities.","ref":"MistralClient.Models.ModelCapabilities.html"},{"type":"function","title":"MistralClient.Models.ModelCapabilities.from_map/1","doc":"Create model capabilities from a map.","ref":"MistralClient.Models.ModelCapabilities.html#from_map/1"},{"type":"type","title":"MistralClient.Models.ModelCapabilities.t/0","doc":"","ref":"MistralClient.Models.ModelCapabilities.html#t:t/0"},{"type":"module","title":"MistralClient.Models.ModelList","doc":"Represents a list of models response.","ref":"MistralClient.Models.ModelList.html"},{"type":"function","title":"MistralClient.Models.ModelList.from_map/1","doc":"Create a model list from a map.","ref":"MistralClient.Models.ModelList.html#from_map/1"},{"type":"type","title":"MistralClient.Models.ModelList.t/0","doc":"","ref":"MistralClient.Models.ModelList.html#t:t/0"},{"type":"module","title":"MistralClient.Models.ModelPermission","doc":"Represents model access permissions.","ref":"MistralClient.Models.ModelPermission.html"},{"type":"function","title":"MistralClient.Models.ModelPermission.from_map/1","doc":"Create a model permission from a map.","ref":"MistralClient.Models.ModelPermission.html#from_map/1"},{"type":"type","title":"MistralClient.Models.ModelPermission.t/0","doc":"","ref":"MistralClient.Models.ModelPermission.html#t:t/0"},{"type":"module","title":"MistralClient.Models.ModerationObject","doc":"Represents a moderation object with categories and scores.","ref":"MistralClient.Models.ModerationObject.html"},{"type":"function","title":"MistralClient.Models.ModerationObject.from_map/1","doc":"Create a moderation object from a map.","ref":"MistralClient.Models.ModerationObject.html#from_map/1"},{"type":"type","title":"MistralClient.Models.ModerationObject.t/0","doc":"","ref":"MistralClient.Models.ModerationObject.html#t:t/0"},{"type":"module","title":"MistralClient.Models.ModerationResponse","doc":"Represents a moderation response.","ref":"MistralClient.Models.ModerationResponse.html"},{"type":"function","title":"MistralClient.Models.ModerationResponse.from_map/1","doc":"Create a moderation response from a map.","ref":"MistralClient.Models.ModerationResponse.html#from_map/1"},{"type":"type","title":"MistralClient.Models.ModerationResponse.t/0","doc":"","ref":"MistralClient.Models.ModerationResponse.html#t:t/0"},{"type":"module","title":"MistralClient.Models.OCRImageObject","doc":"Represents an extracted image object from OCR processing.","ref":"MistralClient.Models.OCRImageObject.html"},{"type":"function","title":"MistralClient.Models.OCRImageObject.from_map/1","doc":"Create an OCR image object from a map.","ref":"MistralClient.Models.OCRImageObject.html#from_map/1"},{"type":"type","title":"MistralClient.Models.OCRImageObject.t/0","doc":"","ref":"MistralClient.Models.OCRImageObject.html#t:t/0"},{"type":"module","title":"MistralClient.Models.OCRPageDimensions","doc":"Represents the dimensions of an OCR page.","ref":"MistralClient.Models.OCRPageDimensions.html"},{"type":"function","title":"MistralClient.Models.OCRPageDimensions.from_map/1","doc":"Create OCR page dimensions from a map.","ref":"MistralClient.Models.OCRPageDimensions.html#from_map/1"},{"type":"type","title":"MistralClient.Models.OCRPageDimensions.t/0","doc":"","ref":"MistralClient.Models.OCRPageDimensions.html#t:t/0"},{"type":"module","title":"MistralClient.Models.OCRPageObject","doc":"Represents a page object from OCR processing.","ref":"MistralClient.Models.OCRPageObject.html"},{"type":"function","title":"MistralClient.Models.OCRPageObject.from_map/1","doc":"Create an OCR page object from a map.","ref":"MistralClient.Models.OCRPageObject.html#from_map/1"},{"type":"type","title":"MistralClient.Models.OCRPageObject.t/0","doc":"","ref":"MistralClient.Models.OCRPageObject.html#t:t/0"},{"type":"module","title":"MistralClient.Models.OCRRequest","doc":"Represents an OCR processing request.","ref":"MistralClient.Models.OCRRequest.html"},{"type":"type","title":"MistralClient.Models.OCRRequest.document_type/0","doc":"","ref":"MistralClient.Models.OCRRequest.html#t:document_type/0"},{"type":"function","title":"MistralClient.Models.OCRRequest.new/3","doc":"Create a new OCR request.","ref":"MistralClient.Models.OCRRequest.html#new/3"},{"type":"type","title":"MistralClient.Models.OCRRequest.response_format/0","doc":"","ref":"MistralClient.Models.OCRRequest.html#t:response_format/0"},{"type":"type","title":"MistralClient.Models.OCRRequest.t/0","doc":"","ref":"MistralClient.Models.OCRRequest.html#t:t/0"},{"type":"function","title":"MistralClient.Models.OCRRequest.to_map/1","doc":"Convert an OCR request to a map for API requests.","ref":"MistralClient.Models.OCRRequest.html#to_map/1"},{"type":"module","title":"MistralClient.Models.OCRResponse","doc":"Represents an OCR processing response.","ref":"MistralClient.Models.OCRResponse.html"},{"type":"function","title":"MistralClient.Models.OCRResponse.from_map/1","doc":"Create an OCR response from a map.","ref":"MistralClient.Models.OCRResponse.html#from_map/1"},{"type":"type","title":"MistralClient.Models.OCRResponse.t/0","doc":"","ref":"MistralClient.Models.OCRResponse.html#t:t/0"},{"type":"module","title":"MistralClient.Models.OCRUsageInfo","doc":"Represents usage information for OCR processing.","ref":"MistralClient.Models.OCRUsageInfo.html"},{"type":"function","title":"MistralClient.Models.OCRUsageInfo.from_map/1","doc":"Create OCR usage info from a map.","ref":"MistralClient.Models.OCRUsageInfo.html#from_map/1"},{"type":"type","title":"MistralClient.Models.OCRUsageInfo.t/0","doc":"","ref":"MistralClient.Models.OCRUsageInfo.html#t:t/0"},{"type":"module","title":"MistralClient.Models.ToolCall","doc":"Represents a tool/function call.","ref":"MistralClient.Models.ToolCall.html"},{"type":"function","title":"MistralClient.Models.ToolCall.from_map/1","doc":"Create a tool call from a map.","ref":"MistralClient.Models.ToolCall.html#from_map/1"},{"type":"type","title":"MistralClient.Models.ToolCall.t/0","doc":"","ref":"MistralClient.Models.ToolCall.html#t:t/0"},{"type":"function","title":"MistralClient.Models.ToolCall.to_map/1","doc":"Convert a tool call to a map.","ref":"MistralClient.Models.ToolCall.html#to_map/1"},{"type":"module","title":"MistralClient.Models.ToolCallFunction","doc":"Represents function details in a tool call.","ref":"MistralClient.Models.ToolCallFunction.html"},{"type":"function","title":"MistralClient.Models.ToolCallFunction.from_map/1","doc":"Create a tool call function from a map.","ref":"MistralClient.Models.ToolCallFunction.html#from_map/1"},{"type":"type","title":"MistralClient.Models.ToolCallFunction.t/0","doc":"","ref":"MistralClient.Models.ToolCallFunction.html#t:t/0"},{"type":"function","title":"MistralClient.Models.ToolCallFunction.to_map/1","doc":"Convert a tool call function to a map.","ref":"MistralClient.Models.ToolCallFunction.html#to_map/1"},{"type":"module","title":"MistralClient.Models.TrainingFile","doc":"Represents a training file for fine-tuning.","ref":"MistralClient.Models.TrainingFile.html"},{"type":"function","title":"MistralClient.Models.TrainingFile.from_map/1","doc":"Create a training file from a map.","ref":"MistralClient.Models.TrainingFile.html#from_map/1"},{"type":"function","title":"MistralClient.Models.TrainingFile.new/2","doc":"Create a new training file.","ref":"MistralClient.Models.TrainingFile.html#new/2"},{"type":"type","title":"MistralClient.Models.TrainingFile.t/0","doc":"","ref":"MistralClient.Models.TrainingFile.html#t:t/0"},{"type":"module","title":"MistralClient.Models.UnarchiveFTModelOut","doc":"Represents an unarchive fine-tuned model response.","ref":"MistralClient.Models.UnarchiveFTModelOut.html"},{"type":"function","title":"MistralClient.Models.UnarchiveFTModelOut.from_map/1","doc":"Create an unarchive model response from a map.","ref":"MistralClient.Models.UnarchiveFTModelOut.html#from_map/1"},{"type":"type","title":"MistralClient.Models.UnarchiveFTModelOut.t/0","doc":"","ref":"MistralClient.Models.UnarchiveFTModelOut.html#t:t/0"},{"type":"module","title":"MistralClient.Models.Usage","doc":"Represents token usage information.","ref":"MistralClient.Models.Usage.html"},{"type":"function","title":"MistralClient.Models.Usage.from_map/1","doc":"Create usage information from a map.","ref":"MistralClient.Models.Usage.html#from_map/1"},{"type":"type","title":"MistralClient.Models.Usage.t/0","doc":"","ref":"MistralClient.Models.Usage.html#t:t/0"},{"type":"module","title":"MistralClient.Models.WandbIntegration","doc":"Represents a Weights & Biases integration for fine-tuning.","ref":"MistralClient.Models.WandbIntegration.html"},{"type":"function","title":"MistralClient.Models.WandbIntegration.from_map/1","doc":"Create a Weights & Biases integration from a map.","ref":"MistralClient.Models.WandbIntegration.html#from_map/1"},{"type":"function","title":"MistralClient.Models.WandbIntegration.new/2","doc":"Create a new Weights & Biases integration.","ref":"MistralClient.Models.WandbIntegration.html#new/2"},{"type":"type","title":"MistralClient.Models.WandbIntegration.t/0","doc":"","ref":"MistralClient.Models.WandbIntegration.html#t:t/0"},{"type":"module","title":"MistralClient.Stream","doc":"Server-Sent Events (SSE) streaming support for the Mistral AI client.\n\nThis module provides utilities for handling streaming responses from the\nMistral API, particularly for chat completions that return data in real-time.","ref":"MistralClient.Stream.html"},{"type":"module","title":"Features - MistralClient.Stream","doc":"* SSE parsing and handling\n  * Chunk processing and validation\n  * Stream error recovery\n  * Callback-based processing\n  * Stream completion detection","ref":"MistralClient.Stream.html#module-features"},{"type":"module","title":"Usage - MistralClient.Stream","doc":"# Process a stream with a callback\n    MistralClient.Stream.process_stream(stream_data, fn chunk ->\n      content = get_in(chunk, [\"choices\", Access.at(0), \"delta\", \"content\"])\n      if content, do: IO.write(content)\n    end)\n\n    # Parse individual SSE chunks\n    {:ok, chunk} = MistralClient.Stream.parse_chunk(\"data: {...}\")","ref":"MistralClient.Stream.html#module-usage"},{"type":"function","title":"MistralClient.Stream.accumulate_content/2","doc":"Accumulate content from multiple stream chunks.","ref":"MistralClient.Stream.html#accumulate_content/2"},{"type":"function","title":"Parameters - MistralClient.Stream.accumulate_content/2","doc":"* `chunks` - List of parsed chunks\n  * `choice_index` - Index of the choice to accumulate (default: 0)","ref":"MistralClient.Stream.html#accumulate_content/2-parameters"},{"type":"function","title":"Examples - MistralClient.Stream.accumulate_content/2","doc":"\"Hello world!\" = MistralClient.Stream.accumulate_content([chunk1, chunk2, chunk3])","ref":"MistralClient.Stream.html#accumulate_content/2-examples"},{"type":"type","title":"MistralClient.Stream.callback/0","doc":"","ref":"MistralClient.Stream.html#t:callback/0"},{"type":"type","title":"MistralClient.Stream.chunk/0","doc":"","ref":"MistralClient.Stream.html#t:chunk/0"},{"type":"function","title":"MistralClient.Stream.extract_content/2","doc":"Extract content from a stream chunk.","ref":"MistralClient.Stream.html#extract_content/2"},{"type":"function","title":"Parameters - MistralClient.Stream.extract_content/2","doc":"* `chunk` - Parsed chunk data\n  * `choice_index` - Index of the choice to extract (default: 0)","ref":"MistralClient.Stream.html#extract_content/2-parameters"},{"type":"function","title":"Examples - MistralClient.Stream.extract_content/2","doc":"\"Hello\" = MistralClient.Stream.extract_content(chunk)\n    nil = MistralClient.Stream.extract_content(chunk_without_content)","ref":"MistralClient.Stream.html#extract_content/2-examples"},{"type":"function","title":"MistralClient.Stream.extract_finish_reason/2","doc":"Extract finish reason from a stream chunk.","ref":"MistralClient.Stream.html#extract_finish_reason/2"},{"type":"function","title":"Parameters - MistralClient.Stream.extract_finish_reason/2","doc":"* `chunk` - Parsed chunk data\n  * `choice_index` - Index of the choice to extract (default: 0)","ref":"MistralClient.Stream.html#extract_finish_reason/2-parameters"},{"type":"function","title":"Examples - MistralClient.Stream.extract_finish_reason/2","doc":"\"stop\" = MistralClient.Stream.extract_finish_reason(chunk)\n    nil = MistralClient.Stream.extract_finish_reason(incomplete_chunk)","ref":"MistralClient.Stream.html#extract_finish_reason/2-examples"},{"type":"function","title":"MistralClient.Stream.extract_tool_calls/2","doc":"Extract tool calls from a stream chunk.","ref":"MistralClient.Stream.html#extract_tool_calls/2"},{"type":"function","title":"Parameters - MistralClient.Stream.extract_tool_calls/2","doc":"* `chunk` - Parsed chunk data\n  * `choice_index` - Index of the choice to extract (default: 0)","ref":"MistralClient.Stream.html#extract_tool_calls/2-parameters"},{"type":"function","title":"Examples - MistralClient.Stream.extract_tool_calls/2","doc":"[%{\"id\" => \"call_123\", ...}] = MistralClient.Stream.extract_tool_calls(chunk)\n    nil = MistralClient.Stream.extract_tool_calls(chunk_without_tools)","ref":"MistralClient.Stream.html#extract_tool_calls/2-examples"},{"type":"function","title":"MistralClient.Stream.parse_chunk/2","doc":"Parse a single SSE chunk.","ref":"MistralClient.Stream.html#parse_chunk/2"},{"type":"function","title":"Parameters - MistralClient.Stream.parse_chunk/2","doc":"* `chunk_data` - Raw chunk data\n  * `options` - Parsing options (optional)","ref":"MistralClient.Stream.html#parse_chunk/2-parameters"},{"type":"function","title":"Options - MistralClient.Stream.parse_chunk/2","doc":"* `:validate` - Validate the parsed chunk (default: true)","ref":"MistralClient.Stream.html#parse_chunk/2-options"},{"type":"function","title":"Examples - MistralClient.Stream.parse_chunk/2","doc":"{:ok, chunk} = MistralClient.Stream.parse_chunk(\"data: {...}\")\n    :done = MistralClient.Stream.parse_chunk(\"data: [DONE]\")","ref":"MistralClient.Stream.html#parse_chunk/2-examples"},{"type":"function","title":"MistralClient.Stream.process_stream/3","doc":"Process a stream of Server-Sent Events.","ref":"MistralClient.Stream.html#process_stream/3"},{"type":"function","title":"Parameters - MistralClient.Stream.process_stream/3","doc":"* `stream_data` - Raw stream data\n  * `callback` - Function to process each chunk\n  * `options` - Processing options (optional)","ref":"MistralClient.Stream.html#process_stream/3-parameters"},{"type":"function","title":"Options - MistralClient.Stream.process_stream/3","doc":"* `:validate` - Validate chunks before processing (default: true)\n  * `:skip_empty` - Skip empty chunks (default: true)\n  * `:timeout` - Stream timeout in milliseconds (default: 30_000)","ref":"MistralClient.Stream.html#process_stream/3-options"},{"type":"function","title":"Examples - MistralClient.Stream.process_stream/3","doc":"MistralClient.Stream.process_stream(data, fn chunk ->\n      case get_in(chunk, [\"choices\", Access.at(0), \"delta\", \"content\"]) do\n        nil -> :ok\n        content -> IO.write(content)\n      end\n    end)","ref":"MistralClient.Stream.html#process_stream/3-examples"},{"type":"function","title":"MistralClient.Stream.request_stream/6","doc":"Make a streaming HTTP request.","ref":"MistralClient.Stream.html#request_stream/6"},{"type":"function","title":"Parameters - MistralClient.Stream.request_stream/6","doc":"* `config` - Client configuration\n  * `method` - HTTP method\n  * `path` - API path\n  * `body` - Request body\n  * `query_params` - Query parameters\n  * `callback` - Function to handle each chunk","ref":"MistralClient.Stream.html#request_stream/6-parameters"},{"type":"function","title":"Examples - MistralClient.Stream.request_stream/6","doc":"MistralClient.Stream.request_stream(config, :post, \"/v1/chat/completions\", body, [], callback)","ref":"MistralClient.Stream.html#request_stream/6-examples"},{"type":"function","title":"MistralClient.Stream.stream_complete?/1","doc":"Check if a chunk indicates the stream is complete.","ref":"MistralClient.Stream.html#stream_complete?/1"},{"type":"function","title":"Parameters - MistralClient.Stream.stream_complete?/1","doc":"* `chunk` - Parsed chunk data","ref":"MistralClient.Stream.html#stream_complete?/1-parameters"},{"type":"function","title":"Examples - MistralClient.Stream.stream_complete?/1","doc":"true = MistralClient.Stream.stream_complete?(final_chunk)\n    false = MistralClient.Stream.stream_complete?(intermediate_chunk)","ref":"MistralClient.Stream.html#stream_complete?/1-examples"},{"type":"function","title":"MistralClient.Stream.validate_chunk/1","doc":"Validate a parsed chunk.","ref":"MistralClient.Stream.html#validate_chunk/1"},{"type":"function","title":"Parameters - MistralClient.Stream.validate_chunk/1","doc":"* `chunk` - Parsed chunk data","ref":"MistralClient.Stream.html#validate_chunk/1-parameters"},{"type":"function","title":"Examples - MistralClient.Stream.validate_chunk/1","doc":":ok = MistralClient.Stream.validate_chunk(%{\"choices\" => [...]})\n    {:error, reason} = MistralClient.Stream.validate_chunk(%{})","ref":"MistralClient.Stream.html#validate_chunk/1-examples"},{"type":"module","title":"MistralexSdk","doc":"Documentation for `MistralexSdk`.","ref":"MistralexSdk.html"},{"type":"function","title":"MistralexSdk.hello/0","doc":"Hello world.","ref":"MistralexSdk.html#hello/0"},{"type":"function","title":"Examples - MistralexSdk.hello/0","doc":"iex> MistralexSdk.hello()\n    :world","ref":"MistralexSdk.html#hello/0-examples"},{"type":"exception","title":"MistralClient.Errors.APIError","doc":"General API error for HTTP 4xx and 5xx responses.","ref":"MistralClient.Errors.APIError.html"},{"type":"type","title":"MistralClient.Errors.APIError.t/0","doc":"","ref":"MistralClient.Errors.APIError.html#t:t/0"},{"type":"exception","title":"MistralClient.Errors.AuthenticationError","doc":"Authentication error (HTTP 401).","ref":"MistralClient.Errors.AuthenticationError.html"},{"type":"type","title":"MistralClient.Errors.AuthenticationError.t/0","doc":"","ref":"MistralClient.Errors.AuthenticationError.html#t:t/0"},{"type":"exception","title":"MistralClient.Errors.ConfigurationError","doc":"Configuration error.","ref":"MistralClient.Errors.ConfigurationError.html"},{"type":"type","title":"MistralClient.Errors.ConfigurationError.t/0","doc":"","ref":"MistralClient.Errors.ConfigurationError.html#t:t/0"},{"type":"exception","title":"MistralClient.Errors.NetworkError","doc":"Network connectivity error.","ref":"MistralClient.Errors.NetworkError.html"},{"type":"type","title":"MistralClient.Errors.NetworkError.t/0","doc":"","ref":"MistralClient.Errors.NetworkError.html#t:t/0"},{"type":"exception","title":"MistralClient.Errors.NotFoundError","doc":"Resource not found error (HTTP 404).","ref":"MistralClient.Errors.NotFoundError.html"},{"type":"type","title":"MistralClient.Errors.NotFoundError.t/0","doc":"","ref":"MistralClient.Errors.NotFoundError.html#t:t/0"},{"type":"exception","title":"MistralClient.Errors.PermissionError","doc":"Permission denied error (HTTP 403).","ref":"MistralClient.Errors.PermissionError.html"},{"type":"type","title":"MistralClient.Errors.PermissionError.t/0","doc":"","ref":"MistralClient.Errors.PermissionError.html#t:t/0"},{"type":"exception","title":"MistralClient.Errors.RateLimitError","doc":"Rate limit exceeded error (HTTP 429).","ref":"MistralClient.Errors.RateLimitError.html"},{"type":"type","title":"MistralClient.Errors.RateLimitError.t/0","doc":"","ref":"MistralClient.Errors.RateLimitError.html#t:t/0"},{"type":"exception","title":"MistralClient.Errors.ServerError","doc":"Server-side error (HTTP 5xx).","ref":"MistralClient.Errors.ServerError.html"},{"type":"type","title":"MistralClient.Errors.ServerError.t/0","doc":"","ref":"MistralClient.Errors.ServerError.html#t:t/0"},{"type":"exception","title":"MistralClient.Errors.TimeoutError","doc":"Request timeout error.","ref":"MistralClient.Errors.TimeoutError.html"},{"type":"type","title":"MistralClient.Errors.TimeoutError.t/0","doc":"","ref":"MistralClient.Errors.TimeoutError.html#t:t/0"},{"type":"exception","title":"MistralClient.Errors.ValidationError","doc":"Request validation error.","ref":"MistralClient.Errors.ValidationError.html"},{"type":"type","title":"MistralClient.Errors.ValidationError.t/0","doc":"","ref":"MistralClient.Errors.ValidationError.html#t:t/0"},{"type":"extras","title":"MistralClient SDK for Elixir","doc":"# MistralClient SDK for Elixir\n\nA comprehensive Elixir client for the Mistral AI API with complete feature parity to the Python SDK.\n\n[![Hex.pm](https://img.shields.io/hexpm/v/mistralex_ai.svg)](https://hex.pm/packages/mistralex_ai)\n[![Documentation](https://img.shields.io/badge/docs-hexdocs-blue.svg)](https://hexdocs.pm/mistralex_ai)","ref":"readme.html"},{"type":"extras","title":"Features - MistralClient SDK for Elixir","doc":"- ✅ **Complete API Coverage**: Chat, Embeddings, Models, Files, and more\n- ✅ **Streaming Support**: Real-time chat completions with Server-Sent Events\n- ✅ **Type Safety**: Comprehensive Elixir structs and typespecs\n- ✅ **Error Handling**: Robust error handling with automatic retries\n- ✅ **Configuration**: Flexible configuration via application config or environment variables\n- ✅ **Authentication**: Secure API key management\n- ✅ **Rate Limiting**: Built-in rate limit handling with exponential backoff\n- ✅ **File Operations**: Upload/download with multipart support\n- ✅ **Tool Calling**: Function calling and structured outputs\n- ✅ **Similarity Functions**: Built-in cosine similarity and distance calculations","ref":"readme.html#features"},{"type":"extras","title":"Installation - MistralClient SDK for Elixir","doc":"Add `mistralex_ai` to your list of dependencies in `mix.exs`:\n\n```elixir\ndef deps do\n  [\n    {:mistralex_ai, \"~> 0.1.0\"}\n  ]\nend\n```","ref":"readme.html#installation"},{"type":"extras","title":"Quick Start - MistralClient SDK for Elixir","doc":"","ref":"readme.html#quick-start"},{"type":"extras","title":"1. Configuration - MistralClient SDK for Elixir","doc":"Set your API key using one of these methods:\n\n**Environment Variable (Recommended):**\n```bash\nexport MISTRAL_API_KEY=\"your-api-key-here\"\n```\n\n**Application Configuration:**\n```elixir\n# config/config.exs\nconfig :mistralex_ai,\n  api_key: \"your-api-key-here\",\n  base_url: \"https://api.mistral.ai\",\n  timeout: 30_000\n```","ref":"readme.html#1-configuration"},{"type":"extras","title":"2. Basic Usage - MistralClient SDK for Elixir","doc":"```elixir\n# Chat completion\n{:ok, response} = MistralClient.chat([\n  %{role: \"user\", content: \"Hello, how are you?\"}\n])\n\n# Generate embeddings\n{:ok, embeddings} = MistralClient.embeddings(\"Hello world\")\n\n# List available models\n{:ok, models} = MistralClient.models()\n```","ref":"readme.html#2-basic-usage"},{"type":"extras","title":"API Reference - MistralClient SDK for Elixir","doc":"","ref":"readme.html#api-reference"},{"type":"extras","title":"Chat Completions - MistralClient SDK for Elixir","doc":"```elixir\n# Basic chat\n{:ok, response} = MistralClient.chat([\n  %{role: \"user\", content: \"What is the capital of France?\"}\n])\n\n# With options\n{:ok, response} = MistralClient.chat(\n  [%{role: \"user\", content: \"Hello!\"}],\n  %{model: \"mistral-large-latest\", temperature: 0.7, max_tokens: 100}\n)\n\n# Streaming chat\nMistralClient.chat_stream([\n  %{role: \"user\", content: \"Tell me a story\"}\n], fn chunk ->\n  content = get_in(chunk, [\"choices\", Access.at(0), \"delta\", \"content\"])\n  if content, do: IO.write(content)\nend)\n\n# Tool calling\ntools = [\n  %{\n    type: \"function\",\n    function: %{\n      name: \"get_weather\",\n      description: \"Get current weather\",\n      parameters: %{\n        type: \"object\",\n        properties: %{location: %{type: \"string\"}},\n        required: [\"location\"]\n      }\n    }\n  }\n]\n\n{:ok, response} = MistralClient.API.Chat.with_tools(messages, tools)\n```","ref":"readme.html#chat-completions"},{"type":"extras","title":"Embeddings - MistralClient SDK for Elixir","doc":"```elixir\n# Single text\n{:ok, response} = MistralClient.embeddings(\"Hello world\")\n\n# Multiple texts\n{:ok, response} = MistralClient.embeddings([\n  \"First document\",\n  \"Second document\"\n])\n\n# With options\n{:ok, response} = MistralClient.embeddings(\n  \"Hello world\",\n  %{model: \"mistral-embed\", dimensions: 1024}\n)\n\n# Extract embeddings\nembeddings = MistralClient.API.Embeddings.extract_embeddings(response)\n\n# Calculate similarity\nsimilarity = MistralClient.API.Embeddings.cosine_similarity(\n  embedding1,\n  embedding2\n)\n```","ref":"readme.html#embeddings"},{"type":"extras","title":"Models - MistralClient SDK for Elixir","doc":"```elixir\n# List all models\n{:ok, models} = MistralClient.models()\n\n# Get specific model\n{:ok, model} = MistralClient.model(\"mistral-large-latest\")\n\n# Filter models\n{:ok, all_models} = MistralClient.API.Models.list()\nbase_models = MistralClient.API.Models.filter_models(all_models, :base)\nfine_tuned = MistralClient.API.Models.filter_models(all_models, :fine_tuned)\n```","ref":"readme.html#models"},{"type":"extras","title":"Files - MistralClient SDK for Elixir","doc":"```elixir\n# Upload file\n{:ok, file} = MistralClient.upload_file(\"./data.jsonl\", \"fine-tune\")\n\n# List files\n{:ok, files} = MistralClient.files()\n\n# Download file\n{:ok, content} = MistralClient.API.Files.download(\"file-abc123\")\n\n# Delete file\n{:ok, _} = MistralClient.delete_file(\"file-abc123\")\n```","ref":"readme.html#files"},{"type":"extras","title":"Advanced Usage - MistralClient SDK for Elixir","doc":"","ref":"readme.html#advanced-usage"},{"type":"extras","title":"Custom Client Configuration - MistralClient SDK for Elixir","doc":"```elixir\n# Create client with custom settings\nclient = MistralClient.new(\n  api_key: \"custom-key\",\n  timeout: 60_000,\n  max_retries: 5\n)\n\n# Use custom client\n{:ok, response} = MistralClient.API.Chat.complete(messages, %{}, client)\n```","ref":"readme.html#custom-client-configuration"},{"type":"extras","title":"Error Handling - MistralClient SDK for Elixir","doc":"```elixir\ncase MistralClient.chat(messages) do\n  {:ok, response} ->\n    # Handle success\n    IO.puts(\"Response: #{response.choices |> hd() |> get_in([\"message\", \"content\"])}\")\n\n  {:error, %MistralClient.Errors.RateLimitError{retry_after: seconds}} ->\n    # Handle rate limiting\n    IO.puts(\"Rate limited. Retry after #{seconds} seconds\")\n\n  {:error, %MistralClient.Errors.AuthenticationError{}} ->\n    # Handle auth error\n    IO.puts(\"Invalid API key\")\n\n  {:error, error} ->\n    # Handle other errors\n    IO.puts(\"Error: #{Exception.message(error)}\")\nend\n```","ref":"readme.html#error-handling"},{"type":"extras","title":"Streaming with Custom Processing - MistralClient SDK for Elixir","doc":"```elixir\nalias MistralClient.Stream\n\nMistralClient.chat_stream(messages, fn chunk ->\n  case Stream.extract_content(chunk) do\n    nil -> :ok\n    content ->\n      IO.write(content)\n\n      # Check if stream is complete\n      if Stream.stream_complete?(chunk) do\n        reason = Stream.extract_finish_reason(chunk)\n        IO.puts(\"\\nStream finished: #{reason}\")\n      end\n  end\nend)\n```","ref":"readme.html#streaming-with-custom-processing"},{"type":"extras","title":"Configuration Options - MistralClient SDK for Elixir","doc":"| Option | Environment Variable | Default | Description |\n|--------|---------------------|---------|-------------|\n| `:api_key` | `MISTRAL_API_KEY` | `nil` | Your Mistral API key (required) |\n| `:base_url` | `MISTRAL_BASE_URL` | `\"https://api.mistral.ai\"` | API base URL |\n| `:timeout` | `MISTRAL_TIMEOUT` | `30_000` | Request timeout (ms) |\n| `:max_retries` | `MISTRAL_MAX_RETRIES` | `3` | Maximum retry attempts |\n| `:retry_delay` | `MISTRAL_RETRY_DELAY` | `1_000` | Base retry delay (ms) |\n| `:user_agent` | `MISTRAL_USER_AGENT` | `\"mistral-client-elixir/0.1.0\"` | User agent string |","ref":"readme.html#configuration-options"},{"type":"extras","title":"Examples - MistralClient SDK for Elixir","doc":"Run the included examples:\n\n```bash\ncd mistralex_sdk\n\n# Set your API key\nexport MISTRAL_API_KEY=\"your-api-key-here\"\n\n# Run basic usage example\nelixir examples/basic_usage.exs\n```","ref":"readme.html#examples"},{"type":"extras","title":"Development - MistralClient SDK for Elixir","doc":"```bash\n# Clone the repository\ngit clone https://github.com/rocket4ce/mistralex_ai.git\ncd mistralex_ai\n\n# Install dependencies\nmix deps.get\n\n# Run tests\nmix test\n\n# Generate documentation\nmix docs\n\n# Check code quality\nmix credo\nmix dialyzer\n```","ref":"readme.html#development"},{"type":"extras","title":"API Coverage - MistralClient SDK for Elixir","doc":"","ref":"readme.html#api-coverage"},{"type":"extras","title":"✅ Implemented - MistralClient SDK for Elixir","doc":"- **Chat API**: Complete, streaming, tool calling, structured outputs\n- **Embeddings API**: Single/batch generation, similarity functions\n- **Models API**: List, retrieve, manage fine-tuned models\n- **Files API**: Upload, download, list, delete with multipart support","ref":"readme.html#implemented"},{"type":"extras","title":"🚧 In Progress - MistralClient SDK for Elixir","doc":"- **Agents API**: AI agents management\n- **Fine-tuning API**: Model training and management\n- **Batch API**: Batch processing operations","ref":"readme.html#in-progress"},{"type":"extras","title":"⏳ Planned - MistralClient SDK for Elixir","doc":"- **Conversations API**: Beta conversation management\n- **Jobs API**: Job management and monitoring\n- **Classifiers API**: Text classification\n- **OCR API**: Optical character recognition\n- **FIM API**: Fill-in-the-middle completion","ref":"readme.html#planned"},{"type":"extras","title":"Contributing - MistralClient SDK for Elixir","doc":"1. Fork the repository\n2. Create your feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request","ref":"readme.html#contributing"},{"type":"extras","title":"License - MistralClient SDK for Elixir","doc":"This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.","ref":"readme.html#license"},{"type":"extras","title":"Acknowledgments - MistralClient SDK for Elixir","doc":"- [Mistral AI](https://mistral.ai/) for providing the API\n- [mistral-client-python](https://github.com/mistralai/client-python) for API reference\n- The Elixir community for excellent libraries and tools","ref":"readme.html#acknowledgments"},{"type":"extras","title":"Support - MistralClient SDK for Elixir","doc":"- 📖 [Documentation](https://hexdocs.pm/mistralex_ai)\n- 🐛 [Issue Tracker](https://github.com/rocket4ce/mistralex_ai/issues)\n- 💬 [Discussions](https://github.com/rocket4ce/mistralex_ai/discussions)","ref":"readme.html#support"}],"proglang":"elixir","content_type":"text/markdown","producer":{"name":"ex_doc","version":"0.38.2"}}